/*
* generated by Xtext
*/

package br.ufes.inf.nemo.ontouml.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DslOntoUMLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cModelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cViewpointKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cViewpointAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cViewpointSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cViewpointAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPackagedElementAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPackagedElementPackageableElementParserRuleCall_6_0 = (RuleCall)cPackagedElementAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// DECISÕES
		// 
		// - LiteralUnlimitedNatural é apenas o * (unlimited). Qualquer INT é IntegerLiteral
		// - OpaqueExpression o que vai dentro do body não tem como possuir comentários, nem manter o registro de NLs. Cada membro de body é uma linha do corpo.
		//   Isso é uma restrição do xText que pra facilitar as coisas, ignora os tokens de comentários, NL e espaços
		// * ///Elemento Raiz (Regra S? - inicial)
		//Model:
		//	{Model} visibility=VisibilityKind? "model" name=ID ("viewpoint" viewpoint=STRING)? "{" //('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//
		//	//('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//('packageMerge' '{' packageMerge+=PackageMerge ( "," packageMerge+=PackageMerge)* '}' )?
		//	packagedElement+=PackageableElement* "}";
		public ParserRule getRule() { return rule; }

		//{Model} visibility=VisibilityKind? "model" name=ID ("viewpoint" viewpoint=STRING)? "{" //('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////
		////('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////('packageMerge' '{' packageMerge+=PackageMerge ( "," packageMerge+=PackageMerge)* '}' )?
		//packagedElement+=PackageableElement* "}"
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"model"
		public Keyword getModelKeyword_2() { return cModelKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("viewpoint" viewpoint=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"viewpoint"
		public Keyword getViewpointKeyword_4_0() { return cViewpointKeyword_4_0; }

		//viewpoint=STRING
		public Assignment getViewpointAssignment_4_1() { return cViewpointAssignment_4_1; }

		//STRING
		public RuleCall getViewpointSTRINGTerminalRuleCall_4_1_0() { return cViewpointSTRINGTerminalRuleCall_4_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//packagedElement+=PackageableElement*
		public Assignment getPackagedElementAssignment_6() { return cPackagedElementAssignment_6; }

		//PackageableElement
		public RuleCall getPackagedElementPackageableElementParserRuleCall_6_0() { return cPackagedElementPackageableElementParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class PackageableElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageableElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDependencyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConstraintxParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPackage_ImplParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGeneralizationSetParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDataType_ImplParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInstanceSpecification_ImplParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSubKindParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cKindParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPhaseParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRoleParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cRoleMixinParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cMixinParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cModeParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cRelatorParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cCharacterizationParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cMediationParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cDerivationParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cFormalAssociationParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cMaterialAssociationParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cCategoryParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cCollectiveParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cQuantityParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		
		////Regras de Herança para tipos que (deveriam ser) abstratos
		////Talvez elas sejam inúteis, uma vez que o metamodelo Ecore não será gerado a partir dessa gramática
		////	| Quantity | Collective | Category | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization
		//PackageableElement: //	Association_Impl | GeneralizationSet
		////	Class_Impl | Model | Enumeration | EnumerationLiteral | PrimitiveType
		////	| StringExpression | Expression_Impl | OpaqueExpression | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural //(ACHO que não precisa, só se forem named)
		//	Dependency | Constraintx | Package_Impl | GeneralizationSet | DataType_Impl | InstanceSpecification_Impl | SubKind |
		//	Kind | Phase | Role | RoleMixin | Mixin | Mode | Relator | Characterization | Mediation | Derivation |
		//	FormalAssociation | MaterialAssociation | Category | Collective | Quantity;
		public ParserRule getRule() { return rule; }

		////	Association_Impl | GeneralizationSet
		////	Class_Impl | Model | Enumeration | EnumerationLiteral | PrimitiveType
		////	| StringExpression | Expression_Impl | OpaqueExpression | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural //(ACHO que não precisa, só se forem named)
		//Dependency | Constraintx | Package_Impl | GeneralizationSet | DataType_Impl | InstanceSpecification_Impl | SubKind |
		//Kind | Phase | Role | RoleMixin | Mixin | Mode | Relator | Characterization | Mediation | Derivation |
		//FormalAssociation | MaterialAssociation | Category | Collective | Quantity
		public Alternatives getAlternatives() { return cAlternatives; }

		////	Association_Impl | GeneralizationSet
		////	Class_Impl | Model | Enumeration | EnumerationLiteral | PrimitiveType
		////	| StringExpression | Expression_Impl | OpaqueExpression | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural //(ACHO que não precisa, só se forem named)
		//Dependency
		public RuleCall getDependencyParserRuleCall_0() { return cDependencyParserRuleCall_0; }

		//Constraintx
		public RuleCall getConstraintxParserRuleCall_1() { return cConstraintxParserRuleCall_1; }

		//Package_Impl
		public RuleCall getPackage_ImplParserRuleCall_2() { return cPackage_ImplParserRuleCall_2; }

		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_3() { return cGeneralizationSetParserRuleCall_3; }

		//DataType_Impl
		public RuleCall getDataType_ImplParserRuleCall_4() { return cDataType_ImplParserRuleCall_4; }

		//InstanceSpecification_Impl
		public RuleCall getInstanceSpecification_ImplParserRuleCall_5() { return cInstanceSpecification_ImplParserRuleCall_5; }

		//SubKind
		public RuleCall getSubKindParserRuleCall_6() { return cSubKindParserRuleCall_6; }

		//Kind
		public RuleCall getKindParserRuleCall_7() { return cKindParserRuleCall_7; }

		//Phase
		public RuleCall getPhaseParserRuleCall_8() { return cPhaseParserRuleCall_8; }

		//Role
		public RuleCall getRoleParserRuleCall_9() { return cRoleParserRuleCall_9; }

		//RoleMixin
		public RuleCall getRoleMixinParserRuleCall_10() { return cRoleMixinParserRuleCall_10; }

		//Mixin
		public RuleCall getMixinParserRuleCall_11() { return cMixinParserRuleCall_11; }

		//Mode
		public RuleCall getModeParserRuleCall_12() { return cModeParserRuleCall_12; }

		//Relator
		public RuleCall getRelatorParserRuleCall_13() { return cRelatorParserRuleCall_13; }

		//Characterization
		public RuleCall getCharacterizationParserRuleCall_14() { return cCharacterizationParserRuleCall_14; }

		//Mediation
		public RuleCall getMediationParserRuleCall_15() { return cMediationParserRuleCall_15; }

		//Derivation
		public RuleCall getDerivationParserRuleCall_16() { return cDerivationParserRuleCall_16; }

		//FormalAssociation
		public RuleCall getFormalAssociationParserRuleCall_17() { return cFormalAssociationParserRuleCall_17; }

		//MaterialAssociation
		public RuleCall getMaterialAssociationParserRuleCall_18() { return cMaterialAssociationParserRuleCall_18; }

		//Category
		public RuleCall getCategoryParserRuleCall_19() { return cCategoryParserRuleCall_19; }

		//Collective
		public RuleCall getCollectiveParserRuleCall_20() { return cCollectiveParserRuleCall_20; }

		//Quantity
		public RuleCall getQuantityParserRuleCall_21() { return cQuantityParserRuleCall_21; }
	}

	public class NonExpressionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NonExpressionValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLiteralIntegerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLiteralNullParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLiteralBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cInstanceValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOpaqueExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//NonExpressionValue returns ValueSpecification:
		//	LiteralInteger | LiteralString | LiteralNull | LiteralBoolean | InstanceValue | OpaqueExpression;
		public ParserRule getRule() { return rule; }

		//LiteralInteger | LiteralString | LiteralNull | LiteralBoolean | InstanceValue | OpaqueExpression
		public Alternatives getAlternatives() { return cAlternatives; }

		//LiteralInteger
		public RuleCall getLiteralIntegerParserRuleCall_0() { return cLiteralIntegerParserRuleCall_0; }

		//LiteralString
		public RuleCall getLiteralStringParserRuleCall_1() { return cLiteralStringParserRuleCall_1; }

		//LiteralNull
		public RuleCall getLiteralNullParserRuleCall_2() { return cLiteralNullParserRuleCall_2; }

		//LiteralBoolean
		public RuleCall getLiteralBooleanParserRuleCall_3() { return cLiteralBooleanParserRuleCall_3; }

		//InstanceValue
		public RuleCall getInstanceValueParserRuleCall_4() { return cInstanceValueParserRuleCall_4; }

		//OpaqueExpression
		public RuleCall getOpaqueExpressionParserRuleCall_5() { return cOpaqueExpressionParserRuleCall_5; }
	}

	public class ValueSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonExpressionValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExpressionValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValueSpecification: //StringExpression | //O que é iso???
		//	NonExpressionValue | ExpressionValue;
		public ParserRule getRule() { return rule; }

		////StringExpression | //O que é iso???
		//NonExpressionValue | ExpressionValue
		public Alternatives getAlternatives() { return cAlternatives; }

		////StringExpression | //O que é iso???
		//NonExpressionValue
		public RuleCall getNonExpressionValueParserRuleCall_0() { return cNonExpressionValueParserRuleCall_0; }

		//ExpressionValue
		public RuleCall getExpressionValueParserRuleCall_1() { return cExpressionValueParserRuleCall_1; }
	}

	public class DataType_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cDatatypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cAttributesKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0 = (RuleCall)cOwnedAttributeAssignment_3_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		////Inútil -> Gerado automaticamente pelo Wizard do xText
		////EObject returns ecore::EObject:
		////	EObject_Impl | EAttribute | EAnnotation | EClass | EDataType_Impl | EEnum | EEnumLiteral | EFactory | EOperation | EPackage | EParameter | EReference | EGenericType | ETypeParameter;
		/// *
		//Element returns Element:
		//	Comment | Package_Impl | Dependency | ElementImport | PackageImport | Constraintx | Association_Impl | Generalization | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | PackageMerge | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | Slot | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
		//
		//NamedElement returns NamedElement:
		//	Package_Impl | Dependency | Constraintx | Association_Impl | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
		//
		//Type returns Type:
		//	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
		//
		//Package returns Package:
		//	Package_Impl | Model;
		//
		//
		//
		//Classifier returns Classifier:
		//	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
		//
		//Association returns Association:
		//	Association_Impl | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
		//
		//StructuralFeature returns StructuralFeature:
		//	Property;
		//
		//InstanceSpecification returns InstanceSpecification:
		//	InstanceSpecification_Impl | EnumerationLiteral;
		//
		// * /DataType_Impl returns DataType:
		//	visibility=VisibilityKind? "datatype" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "datatype" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}")?
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"datatype"
		public Keyword getDatatypeKeyword_1() { return cDatatypeKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"attributes:"
		public Keyword getAttributesKeyword_3_1_0() { return cAttributesKeyword_3_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1_1() { return cLeftCurlyBracketKeyword_3_1_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_3_1_2() { return cOwnedAttributeAssignment_3_1_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cAttributesKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0 = (RuleCall)cOwnedAttributeAssignment_3_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		////Mesma coisa que DataType
		//PrimitiveType:
		//	visibility=VisibilityKind? "type" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	"}")?;
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "type" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}")?
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"type"
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"attributes:"
		public Keyword getAttributesKeyword_3_1_0() { return cAttributesKeyword_3_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1_1() { return cLeftCurlyBracketKeyword_3_1_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_3_1_2() { return cOwnedAttributeAssignment_3_1_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDependencyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cDependencyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cClientAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cClientNamedElementCrossReference_5_0 = (CrossReference)cClientAssignment_5.eContents().get(0);
		private final RuleCall cClientNamedElementIDTerminalRuleCall_5_0_1 = (RuleCall)cClientNamedElementCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cClientAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cClientNamedElementCrossReference_6_1_0 = (CrossReference)cClientAssignment_6_1.eContents().get(0);
		private final RuleCall cClientNamedElementIDTerminalRuleCall_6_1_0_1 = (RuleCall)cClientNamedElementCrossReference_6_1_0.eContents().get(1);
		private final Keyword cDependsOnKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSupplierAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cSupplierNamedElementCrossReference_9_0 = (CrossReference)cSupplierAssignment_9.eContents().get(0);
		private final RuleCall cSupplierNamedElementIDTerminalRuleCall_9_0_1 = (RuleCall)cSupplierNamedElementCrossReference_9_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cSupplierAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cSupplierNamedElementCrossReference_10_1_0 = (CrossReference)cSupplierAssignment_10_1.eContents().get(0);
		private final RuleCall cSupplierNamedElementIDTerminalRuleCall_10_1_0_1 = (RuleCall)cSupplierNamedElementCrossReference_10_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Dependency:
		//	{Dependency} visibility=VisibilityKind? "Dependency" name=ID? "{" client+=[NamedElement] ("," client+=[NamedElement])*
		//	"depends on" "(" supplier+=[NamedElement] ("," supplier+=[NamedElement])* ")" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//{Dependency} visibility=VisibilityKind? "Dependency" name=ID? "{" client+=[NamedElement] ("," client+=[NamedElement])*
		//"depends on" "(" supplier+=[NamedElement] ("," supplier+=[NamedElement])* ")" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//{Dependency}
		public Action getDependencyAction_0() { return cDependencyAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"Dependency"
		public Keyword getDependencyKeyword_2() { return cDependencyKeyword_2; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//client+=[NamedElement]
		public Assignment getClientAssignment_5() { return cClientAssignment_5; }

		//[NamedElement]
		public CrossReference getClientNamedElementCrossReference_5_0() { return cClientNamedElementCrossReference_5_0; }

		//ID
		public RuleCall getClientNamedElementIDTerminalRuleCall_5_0_1() { return cClientNamedElementIDTerminalRuleCall_5_0_1; }

		//("," client+=[NamedElement])*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//client+=[NamedElement]
		public Assignment getClientAssignment_6_1() { return cClientAssignment_6_1; }

		//[NamedElement]
		public CrossReference getClientNamedElementCrossReference_6_1_0() { return cClientNamedElementCrossReference_6_1_0; }

		//ID
		public RuleCall getClientNamedElementIDTerminalRuleCall_6_1_0_1() { return cClientNamedElementIDTerminalRuleCall_6_1_0_1; }

		//"depends on"
		public Keyword getDependsOnKeyword_7() { return cDependsOnKeyword_7; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//supplier+=[NamedElement]
		public Assignment getSupplierAssignment_9() { return cSupplierAssignment_9; }

		//[NamedElement]
		public CrossReference getSupplierNamedElementCrossReference_9_0() { return cSupplierNamedElementCrossReference_9_0; }

		//ID
		public RuleCall getSupplierNamedElementIDTerminalRuleCall_9_0_1() { return cSupplierNamedElementIDTerminalRuleCall_9_0_1; }

		//("," supplier+=[NamedElement])*
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//supplier+=[NamedElement]
		public Assignment getSupplierAssignment_10_1() { return cSupplierAssignment_10_1; }

		//[NamedElement]
		public CrossReference getSupplierNamedElementCrossReference_10_1_0() { return cSupplierNamedElementCrossReference_10_1_0; }

		//ID
		public RuleCall getSupplierNamedElementIDTerminalRuleCall_10_1_0_1() { return cSupplierNamedElementIDTerminalRuleCall_10_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class ElementImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cImportedElementPackageableElementCrossReference_2_0 = (CrossReference)cImportedElementAssignment_2.eContents().get(0);
		private final RuleCall cImportedElementPackageableElementSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cImportedElementPackageableElementCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAliasAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_3_1_0 = (RuleCall)cAliasAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ElementImport:
		//	visibility=VisibilityKind? "import" importedElement=[PackageableElement|STRING] ("as" alias=ID)? ";";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "import" importedElement=[PackageableElement|STRING] ("as" alias=ID)? ";"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"import"
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }

		//importedElement=[PackageableElement|STRING]
		public Assignment getImportedElementAssignment_2() { return cImportedElementAssignment_2; }

		//[PackageableElement|STRING]
		public CrossReference getImportedElementPackageableElementCrossReference_2_0() { return cImportedElementPackageableElementCrossReference_2_0; }

		//STRING
		public RuleCall getImportedElementPackageableElementSTRINGTerminalRuleCall_2_0_1() { return cImportedElementPackageableElementSTRINGTerminalRuleCall_2_0_1; }

		//("as" alias=ID)?
		public Group getGroup_3() { return cGroup_3; }

		//"as"
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }

		//alias=ID
		public Assignment getAliasAssignment_3_1() { return cAliasAssignment_3_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_3_1_0() { return cAliasIDTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedPackageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cImportedPackagePackageCrossReference_2_0 = (CrossReference)cImportedPackageAssignment_2.eContents().get(0);
		private final RuleCall cImportedPackagePackageSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cImportedPackagePackageCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PackageImport:
		//	visibility=VisibilityKind "import" importedPackage=[Package|STRING] ";";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind "import" importedPackage=[Package|STRING] ";"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"import"
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }

		//importedPackage=[Package|STRING]
		public Assignment getImportedPackageAssignment_2() { return cImportedPackageAssignment_2; }

		//[Package|STRING]
		public CrossReference getImportedPackagePackageCrossReference_2_0() { return cImportedPackagePackageCrossReference_2_0; }

		//STRING
		public RuleCall getImportedPackagePackageSTRINGTerminalRuleCall_2_0_1() { return cImportedPackagePackageSTRINGTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ConstraintxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constraintx");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cConstrainedElementAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cConstrainedElementElementCrossReference_2_1_0 = (CrossReference)cConstrainedElementAssignment_2_1.eContents().get(0);
		private final RuleCall cConstrainedElementElementIDTerminalRuleCall_2_1_0_1 = (RuleCall)cConstrainedElementElementCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cConstrainedElementAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cConstrainedElementElementCrossReference_2_2_1_0 = (CrossReference)cConstrainedElementAssignment_2_2_1.eContents().get(0);
		private final RuleCall cConstrainedElementElementIDTerminalRuleCall_2_2_1_0_1 = (RuleCall)cConstrainedElementElementCrossReference_2_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSpecificationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSpecificationValueSpecificationParserRuleCall_4_0 = (RuleCall)cSpecificationAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Constraintx:
		//	visibility=VisibilityKind? "constraint" ("(" constrainedElement+=[Element] ("," constrainedElement+=[Element])* ")")?
		//	"{" specification=ValueSpecification "}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "constraint" ("(" constrainedElement+=[Element] ("," constrainedElement+=[Element])* ")")?
		//"{" specification=ValueSpecification "}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"constraint"
		public Keyword getConstraintKeyword_1() { return cConstraintKeyword_1; }

		//("(" constrainedElement+=[Element] ("," constrainedElement+=[Element])* ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//constrainedElement+=[Element]
		public Assignment getConstrainedElementAssignment_2_1() { return cConstrainedElementAssignment_2_1; }

		//[Element]
		public CrossReference getConstrainedElementElementCrossReference_2_1_0() { return cConstrainedElementElementCrossReference_2_1_0; }

		//ID
		public RuleCall getConstrainedElementElementIDTerminalRuleCall_2_1_0_1() { return cConstrainedElementElementIDTerminalRuleCall_2_1_0_1; }

		//("," constrainedElement+=[Element])*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//constrainedElement+=[Element]
		public Assignment getConstrainedElementAssignment_2_2_1() { return cConstrainedElementAssignment_2_2_1; }

		//[Element]
		public CrossReference getConstrainedElementElementCrossReference_2_2_1_0() { return cConstrainedElementElementCrossReference_2_2_1_0; }

		//ID
		public RuleCall getConstrainedElementElementIDTerminalRuleCall_2_2_1_0_1() { return cConstrainedElementElementIDTerminalRuleCall_2_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//specification=ValueSpecification
		public Assignment getSpecificationAssignment_4() { return cSpecificationAssignment_4; }

		//ValueSpecification
		public RuleCall getSpecificationValueSpecificationParserRuleCall_4_0() { return cSpecificationValueSpecificationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PackageMergeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageMerge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageMergeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cMergedPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMergedPackagePackageCrossReference_1_0 = (CrossReference)cMergedPackageAssignment_1.eContents().get(0);
		private final RuleCall cMergedPackagePackageSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cMergedPackagePackageCrossReference_1_0.eContents().get(1);
		
		//PackageMerge:
		//	{PackageMerge} //('PackageMerge')?
		//	mergedPackage=[Package|STRING];
		public ParserRule getRule() { return rule; }

		//{PackageMerge} //('PackageMerge')?
		//mergedPackage=[Package|STRING]
		public Group getGroup() { return cGroup; }

		//{PackageMerge}
		public Action getPackageMergeAction_0() { return cPackageMergeAction_0; }

		////('PackageMerge')?
		//mergedPackage=[Package|STRING]
		public Assignment getMergedPackageAssignment_1() { return cMergedPackageAssignment_1; }

		//[Package|STRING]
		public CrossReference getMergedPackagePackageCrossReference_1_0() { return cMergedPackagePackageCrossReference_1_0; }

		//STRING
		public RuleCall getMergedPackagePackageSTRINGTerminalRuleCall_1_0_1() { return cMergedPackagePackageSTRINGTerminalRuleCall_1_0_1; }
	}

	public class Package_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cPackageKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMergeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPackageMergeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPackageMergePackageMergeParserRuleCall_5_2_0 = (RuleCall)cPackageMergeAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPackageMergeAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPackageMergePackageMergeParserRuleCall_5_3_1_0 = (RuleCall)cPackageMergeAssignment_5_3_1.eContents().get(0);
		private final Assignment cPackagedElementAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPackagedElementPackageableElementParserRuleCall_6_0 = (RuleCall)cPackagedElementAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//Package_Impl returns Package:
		//	{Package} visibility=VisibilityKind? "package" name=ID "{" ("merge" ":" packageMerge+=PackageMerge (","
		//	packageMerge+=PackageMerge)*)? packagedElement+=PackageableElement* "}";
		public ParserRule getRule() { return rule; }

		//{Package} visibility=VisibilityKind? "package" name=ID "{" ("merge" ":" packageMerge+=PackageMerge (","
		//packageMerge+=PackageMerge)*)? packagedElement+=PackageableElement* "}"
		public Group getGroup() { return cGroup; }

		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"package"
		public Keyword getPackageKeyword_2() { return cPackageKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("merge" ":" packageMerge+=PackageMerge ("," packageMerge+=PackageMerge)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"merge"
		public Keyword getMergeKeyword_5_0() { return cMergeKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//packageMerge+=PackageMerge
		public Assignment getPackageMergeAssignment_5_2() { return cPackageMergeAssignment_5_2; }

		//PackageMerge
		public RuleCall getPackageMergePackageMergeParserRuleCall_5_2_0() { return cPackageMergePackageMergeParserRuleCall_5_2_0; }

		//("," packageMerge+=PackageMerge)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//packageMerge+=PackageMerge
		public Assignment getPackageMergeAssignment_5_3_1() { return cPackageMergeAssignment_5_3_1; }

		//PackageMerge
		public RuleCall getPackageMergePackageMergeParserRuleCall_5_3_1_0() { return cPackageMergePackageMergeParserRuleCall_5_3_1_0; }

		//packagedElement+=PackageableElement*
		public Assignment getPackagedElementAssignment_6() { return cPackagedElementAssignment_6; }

		//PackageableElement
		public RuleCall getPackagedElementPackageableElementParserRuleCall_6_0() { return cPackagedElementPackageableElementParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class InlineGeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InlineGeneralization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsSubstitutableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsSubstitutableSubstitutableKeyword_0_0 = (Keyword)cIsSubstitutableAssignment_0.eContents().get(0);
		private final Assignment cGeneralAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGeneralClassifierCrossReference_1_0 = (CrossReference)cGeneralAssignment_1.eContents().get(0);
		private final RuleCall cGeneralClassifierIDTerminalRuleCall_1_0_1 = (RuleCall)cGeneralClassifierCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cGeneralizationSetAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cGeneralizationSetGeneralizationSetCrossReference_2_1_0 = (CrossReference)cGeneralizationSetAssignment_2_1.eContents().get(0);
		private final RuleCall cGeneralizationSetGeneralizationSetIDTerminalRuleCall_2_1_0_1 = (RuleCall)cGeneralizationSetGeneralizationSetCrossReference_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		/// *****************************************************************************
		// * Duvida:
		// * Generalization::generalizationSet é uma collection, por que?
		// ***************************************************************************** /InlineGeneralization returns
		//Generalization:
		//	isSubstitutable?="substitutable"? general=[Classifier] //('(' generalizationSet+=[GeneralizationSet] (',' generalizationSet+=[GeneralizationSet])* ')' )?
		//	("(" generalizationSet+=[GeneralizationSet] ")")?;
		public ParserRule getRule() { return rule; }

		//isSubstitutable?="substitutable"? general=[Classifier] //('(' generalizationSet+=[GeneralizationSet] (',' generalizationSet+=[GeneralizationSet])* ')' )?
		//("(" generalizationSet+=[GeneralizationSet] ")")?
		public Group getGroup() { return cGroup; }

		//isSubstitutable?="substitutable"?
		public Assignment getIsSubstitutableAssignment_0() { return cIsSubstitutableAssignment_0; }

		//"substitutable"
		public Keyword getIsSubstitutableSubstitutableKeyword_0_0() { return cIsSubstitutableSubstitutableKeyword_0_0; }

		//general=[Classifier]
		public Assignment getGeneralAssignment_1() { return cGeneralAssignment_1; }

		//[Classifier]
		public CrossReference getGeneralClassifierCrossReference_1_0() { return cGeneralClassifierCrossReference_1_0; }

		//ID
		public RuleCall getGeneralClassifierIDTerminalRuleCall_1_0_1() { return cGeneralClassifierIDTerminalRuleCall_1_0_1; }

		//("(" generalizationSet+=[GeneralizationSet] ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//generalizationSet+=[GeneralizationSet]
		public Assignment getGeneralizationSetAssignment_2_1() { return cGeneralizationSetAssignment_2_1; }

		//[GeneralizationSet]
		public CrossReference getGeneralizationSetGeneralizationSetCrossReference_2_1_0() { return cGeneralizationSetGeneralizationSetCrossReference_2_1_0; }

		//ID
		public RuleCall getGeneralizationSetGeneralizationSetIDTerminalRuleCall_2_1_0_1() { return cGeneralizationSetGeneralizationSetIDTerminalRuleCall_2_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}

	public class GeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Generalization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeneralizationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGeneralAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cGeneralClassifierCrossReference_2_0 = (CrossReference)cGeneralAssignment_2.eContents().get(0);
		private final RuleCall cGeneralClassifierIDTerminalRuleCall_2_0_1 = (RuleCall)cGeneralClassifierCrossReference_2_0.eContents().get(1);
		private final Keyword cAsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cOwnerClassifierCrossReference_4_0 = (CrossReference)cOwnerAssignment_4.eContents().get(0);
		private final RuleCall cOwnerClassifierIDTerminalRuleCall_4_0_1 = (RuleCall)cOwnerClassifierCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Problema: Não tem name, como referenciar?
		// * /Generalization: //isSubstitutable?='substitutable'? //Default tá sendo TRUE?
		//	"generalization" "of" general=[Classifier] "as" owner=[Classifier] ";";
		public ParserRule getRule() { return rule; }

		////isSubstitutable?='substitutable'? //Default tá sendo TRUE?
		//"generalization" "of" general=[Classifier] "as" owner=[Classifier] ";"
		public Group getGroup() { return cGroup; }

		////isSubstitutable?='substitutable'? //Default tá sendo TRUE?
		//"generalization"
		public Keyword getGeneralizationKeyword_0() { return cGeneralizationKeyword_0; }

		//"of"
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }

		//general=[Classifier]
		public Assignment getGeneralAssignment_2() { return cGeneralAssignment_2; }

		//[Classifier]
		public CrossReference getGeneralClassifierCrossReference_2_0() { return cGeneralClassifierCrossReference_2_0; }

		//ID
		public RuleCall getGeneralClassifierIDTerminalRuleCall_2_0_1() { return cGeneralClassifierIDTerminalRuleCall_2_0_1; }

		//"as"
		public Keyword getAsKeyword_3() { return cAsKeyword_3; }

		//owner=[Classifier]
		public Assignment getOwnerAssignment_4() { return cOwnerAssignment_4; }

		//[Classifier]
		public CrossReference getOwnerClassifierCrossReference_4_0() { return cOwnerClassifierCrossReference_4_0; }

		//ID
		public RuleCall getOwnerClassifierIDTerminalRuleCall_4_0_1() { return cOwnerClassifierIDTerminalRuleCall_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cIsCoveringAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIsCoveringCompleteKeyword_1_0_0 = (Keyword)cIsCoveringAssignment_1_0.eContents().get(0);
		private final Assignment cIsDisjointAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsDisjointDisjointKeyword_1_1_0 = (Keyword)cIsDisjointAssignment_1_1.eContents().get(0);
		private final Keyword cGeneralizationSetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *****************************************************************************
		// * Problemas:
		// * GeneralizationSet::generalization é opposite, mas não está sendo definida automaticamente
		// ***************************************************************************** /GeneralizationSet:
		//	visibility=VisibilityKind? (isCovering?="complete"? & isDisjoint?="disjoint"?) "generalizationSet" name=ID "{" //		generalization+=[Generalization]* //TODO: Como referenciar?
		//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? (isCovering?="complete"? & isDisjoint?="disjoint"?) "generalizationSet" name=ID "{" //		generalization+=[Generalization]* //TODO: Como referenciar?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isCovering?="complete"? & isDisjoint?="disjoint"?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//isCovering?="complete"?
		public Assignment getIsCoveringAssignment_1_0() { return cIsCoveringAssignment_1_0; }

		//"complete"
		public Keyword getIsCoveringCompleteKeyword_1_0_0() { return cIsCoveringCompleteKeyword_1_0_0; }

		//isDisjoint?="disjoint"?
		public Assignment getIsDisjointAssignment_1_1() { return cIsDisjointAssignment_1_1; }

		//"disjoint"
		public Keyword getIsDisjointDisjointKeyword_1_1_0() { return cIsDisjointDisjointKeyword_1_1_0; }

		//"generalizationSet"
		public Keyword getGeneralizationSetKeyword_2() { return cGeneralizationSetKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		////		generalization+=[Generalization]* //TODO: Como referenciar?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ExpressionSymbolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionSymbol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cANY_OTHERTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////Um operador (+, -, >, <)
		//ExpressionSymbol returns ecore::EString:
		//	ID | ANY_OTHER+;
		public ParserRule getRule() { return rule; }

		//ID | ANY_OTHER+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//ANY_OTHER+
		public RuleCall getANY_OTHERTerminalRuleCall_1() { return cANY_OTHERTerminalRuleCall_1; }
	}

	public class ExpressionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOperandAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOperandValueSpecificationParserRuleCall_2_0_0_0 = (RuleCall)cOperandAssignment_2_0_0.eContents().get(0);
		private final Assignment cSymbolAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cSymbolExpressionSymbolParserRuleCall_2_0_1_0 = (RuleCall)cSymbolAssignment_2_0_1.eContents().get(0);
		private final Assignment cOperandAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cOperandValueSpecificationParserRuleCall_2_0_2_0 = (RuleCall)cOperandAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cSymbolAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cSymbolExpressionSymbolParserRuleCall_2_1_0_0 = (RuleCall)cSymbolAssignment_2_1_0.eContents().get(0);
		private final Assignment cOperandAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cOperandValueSpecificationParserRuleCall_2_1_1_0 = (RuleCall)cOperandAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Assignment cSymbolAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final RuleCall cSymbolExpressionSymbolParserRuleCall_2_2_0_0 = (RuleCall)cSymbolAssignment_2_2_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cOperandAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cOperandValueSpecificationParserRuleCall_2_2_2_0 = (RuleCall)cOperandAssignment_2_2_2.eContents().get(0);
		private final Group cGroup_2_2_3 = (Group)cGroup_2_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_2_3_0 = (Keyword)cGroup_2_2_3.eContents().get(0);
		private final Assignment cOperandAssignment_2_2_3_1 = (Assignment)cGroup_2_2_3.eContents().get(1);
		private final RuleCall cOperandValueSpecificationParserRuleCall_2_2_3_1_0 = (RuleCall)cOperandAssignment_2_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_4 = (Keyword)cGroup_2_2.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// *
		// *
		// * (100 + 100 - 200)
		// * media {10, 20, 30}
		// * not 100
		// * ///TODO: resolver o left-recursion
		////	'Expression'
		////		('name' name=ID)?
		////		('visibility' visibility=VisibilityKind)?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('type' type=[Type|EString])?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//ExpressionValue returns Expression:
		//	{Expression} "(" (operand+=ValueSpecification symbol=ExpressionSymbol operand+=ValueSpecification //Se eu tiro o parenteses dá left-recursion 
		//	| symbol=ExpressionSymbol operand+=ValueSpecification | symbol=ExpressionSymbol "{" operand+=ValueSpecification (","
		//	operand+=ValueSpecification)+ "}") ")";
		public ParserRule getRule() { return rule; }

		//{Expression} "(" (operand+=ValueSpecification symbol=ExpressionSymbol operand+=ValueSpecification //Se eu tiro o parenteses dá left-recursion 
		//| symbol=ExpressionSymbol operand+=ValueSpecification | symbol=ExpressionSymbol "{" operand+=ValueSpecification (","
		//operand+=ValueSpecification)+ "}") ")"
		public Group getGroup() { return cGroup; }

		//{Expression}
		public Action getExpressionAction_0() { return cExpressionAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//operand+=ValueSpecification symbol=ExpressionSymbol operand+=ValueSpecification //Se eu tiro o parenteses dá left-recursion 
		//| symbol=ExpressionSymbol operand+=ValueSpecification | symbol=ExpressionSymbol "{" operand+=ValueSpecification (","
		//operand+=ValueSpecification)+ "}"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//operand+=ValueSpecification symbol=ExpressionSymbol operand+=ValueSpecification
		public Group getGroup_2_0() { return cGroup_2_0; }

		//operand+=ValueSpecification
		public Assignment getOperandAssignment_2_0_0() { return cOperandAssignment_2_0_0; }

		//ValueSpecification
		public RuleCall getOperandValueSpecificationParserRuleCall_2_0_0_0() { return cOperandValueSpecificationParserRuleCall_2_0_0_0; }

		//symbol=ExpressionSymbol
		public Assignment getSymbolAssignment_2_0_1() { return cSymbolAssignment_2_0_1; }

		//ExpressionSymbol
		public RuleCall getSymbolExpressionSymbolParserRuleCall_2_0_1_0() { return cSymbolExpressionSymbolParserRuleCall_2_0_1_0; }

		//operand+=ValueSpecification
		public Assignment getOperandAssignment_2_0_2() { return cOperandAssignment_2_0_2; }

		//ValueSpecification
		public RuleCall getOperandValueSpecificationParserRuleCall_2_0_2_0() { return cOperandValueSpecificationParserRuleCall_2_0_2_0; }

		//symbol=ExpressionSymbol operand+=ValueSpecification
		public Group getGroup_2_1() { return cGroup_2_1; }

		//symbol=ExpressionSymbol
		public Assignment getSymbolAssignment_2_1_0() { return cSymbolAssignment_2_1_0; }

		//ExpressionSymbol
		public RuleCall getSymbolExpressionSymbolParserRuleCall_2_1_0_0() { return cSymbolExpressionSymbolParserRuleCall_2_1_0_0; }

		//operand+=ValueSpecification
		public Assignment getOperandAssignment_2_1_1() { return cOperandAssignment_2_1_1; }

		//ValueSpecification
		public RuleCall getOperandValueSpecificationParserRuleCall_2_1_1_0() { return cOperandValueSpecificationParserRuleCall_2_1_1_0; }

		//symbol=ExpressionSymbol "{" operand+=ValueSpecification ("," operand+=ValueSpecification)+ "}"
		public Group getGroup_2_2() { return cGroup_2_2; }

		//symbol=ExpressionSymbol
		public Assignment getSymbolAssignment_2_2_0() { return cSymbolAssignment_2_2_0; }

		//ExpressionSymbol
		public RuleCall getSymbolExpressionSymbolParserRuleCall_2_2_0_0() { return cSymbolExpressionSymbolParserRuleCall_2_2_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_2_1() { return cLeftCurlyBracketKeyword_2_2_1; }

		//operand+=ValueSpecification
		public Assignment getOperandAssignment_2_2_2() { return cOperandAssignment_2_2_2; }

		//ValueSpecification
		public RuleCall getOperandValueSpecificationParserRuleCall_2_2_2_0() { return cOperandValueSpecificationParserRuleCall_2_2_2_0; }

		//("," operand+=ValueSpecification)+
		public Group getGroup_2_2_3() { return cGroup_2_2_3; }

		//","
		public Keyword getCommaKeyword_2_2_3_0() { return cCommaKeyword_2_2_3_0; }

		//operand+=ValueSpecification
		public Assignment getOperandAssignment_2_2_3_1() { return cOperandAssignment_2_2_3_1; }

		//ValueSpecification
		public RuleCall getOperandValueSpecificationParserRuleCall_2_2_3_1_0() { return cOperandValueSpecificationParserRuleCall_2_2_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2_4() { return cRightCurlyBracketKeyword_2_2_4; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class OpaqueExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OpaqueExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOpaqueExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cOpaqueExpressionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_4_1_0 = (CrossReference)cTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_4_1_0_1 = (RuleCall)cTypeTypeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLanguageAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLanguageSTRINGTerminalRuleCall_6_0 = (RuleCall)cLanguageAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cLanguageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cLanguageSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cLanguageAssignment_7_1.eContents().get(0);
		private final Keyword cBeginKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cNumberSignKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cBodyAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cBodyLINEParserRuleCall_9_1_0 = (RuleCall)cBodyAssignment_9_1.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		/// *
		//private OpaqueExpression opaqExp1 (Person) : "Python", "Ruby"
		//		begin
		//			# Reinaldo de souza junior
		//			# Reinaldo2
		//		end
		// * ///OK
		//OpaqueExpression:
		//	{OpaqueExpression} visibility=VisibilityKind? "OpaqueExpression" name=ID? ("(" type=[Type] ")")? ":" language+=STRING
		//	("," language+=STRING)* //'begin' body+=OPAQUE_TEXT 'end'
		//	"begin" ("#" body+=LINE)* "end";
		public ParserRule getRule() { return rule; }

		//{OpaqueExpression} visibility=VisibilityKind? "OpaqueExpression" name=ID? ("(" type=[Type] ")")? ":" language+=STRING
		//("," language+=STRING)* //'begin' body+=OPAQUE_TEXT 'end'
		//"begin" ("#" body+=LINE)* "end"
		public Group getGroup() { return cGroup; }

		//{OpaqueExpression}
		public Action getOpaqueExpressionAction_0() { return cOpaqueExpressionAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"OpaqueExpression"
		public Keyword getOpaqueExpressionKeyword_2() { return cOpaqueExpressionKeyword_2; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("(" type=[Type] ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }

		//type=[Type]
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_4_1_0() { return cTypeTypeCrossReference_4_1_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_4_1_0_1() { return cTypeTypeIDTerminalRuleCall_4_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//language+=STRING
		public Assignment getLanguageAssignment_6() { return cLanguageAssignment_6; }

		//STRING
		public RuleCall getLanguageSTRINGTerminalRuleCall_6_0() { return cLanguageSTRINGTerminalRuleCall_6_0; }

		//("," language+=STRING)*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//language+=STRING
		public Assignment getLanguageAssignment_7_1() { return cLanguageAssignment_7_1; }

		//STRING
		public RuleCall getLanguageSTRINGTerminalRuleCall_7_1_0() { return cLanguageSTRINGTerminalRuleCall_7_1_0; }

		////'begin' body+=OPAQUE_TEXT 'end'
		//"begin"
		public Keyword getBeginKeyword_8() { return cBeginKeyword_8; }

		//("#" body+=LINE)*
		public Group getGroup_9() { return cGroup_9; }

		//"#"
		public Keyword getNumberSignKeyword_9_0() { return cNumberSignKeyword_9_0; }

		//body+=LINE
		public Assignment getBodyAssignment_9_1() { return cBodyAssignment_9_1; }

		//LINE
		public RuleCall getBodyLINEParserRuleCall_9_1_0() { return cBodyLINEParserRuleCall_9_1_0; }

		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }
	}

	public class LINEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LINE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRWSTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//LINE returns ecore::EString:
		//	(ID | INT | RWS | ANY_OTHER)+;
		public ParserRule getRule() { return rule; }

		//(ID | INT | RWS | ANY_OTHER)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//RWS
		public RuleCall getRWSTerminalRuleCall_2() { return cRWSTerminalRuleCall_2; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_3() { return cANY_OTHERTerminalRuleCall_3; }
	}

	public class InlinePropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InlinePropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPropertyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cPropertyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cGroup_3.eContents().get(1);
		private final Assignment cIsStaticAssignment_3_1_0 = (Assignment)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cIsStaticStaticKeyword_3_1_0_0 = (Keyword)cIsStaticAssignment_3_1_0.eContents().get(0);
		private final Assignment cIsOrderedAssignment_3_1_1 = (Assignment)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cIsOrderedOrderedKeyword_3_1_1_0 = (Keyword)cIsOrderedAssignment_3_1_1.eContents().get(0);
		private final Assignment cIsUniqueAssignment_3_1_2 = (Assignment)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cIsUniqueUniqueKeyword_3_1_2_0 = (Keyword)cIsUniqueAssignment_3_1_2.eContents().get(0);
		private final Assignment cIsReadOnlyAssignment_3_1_3 = (Assignment)cUnorderedGroup_3_1.eContents().get(3);
		private final Keyword cIsReadOnlyReadOnlyKeyword_3_1_3_0 = (Keyword)cIsReadOnlyAssignment_3_1_3.eContents().get(0);
		private final Assignment cIsDerivedUnionAssignment_3_1_4 = (Assignment)cUnorderedGroup_3_1.eContents().get(4);
		private final Keyword cIsDerivedUnionDerivedUnionKeyword_3_1_4_0 = (Keyword)cIsDerivedUnionAssignment_3_1_4.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLowerValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLowerValueLiteralIntegerParserRuleCall_5_1_0 = (RuleCall)cLowerValueAssignment_5_1.eContents().get(0);
		private final Keyword cCommaKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cUpperValueAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cUpperValueLiteralUnlimitedNaturalParserRuleCall_5_3_0 = (RuleCall)cUpperValueAssignment_5_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTypeTypeCrossReference_7_0 = (CrossReference)cTypeAssignment_7.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_7_0_1 = (RuleCall)cTypeTypeCrossReference_7_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cDefaultsToKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cDefaultValueAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final RuleCall cDefaultValueValueSpecificationParserRuleCall_9_1_1_0 = (RuleCall)cDefaultValueAssignment_9_1_1.eContents().get(0);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Keyword cAggregationKeyword_9_2_0 = (Keyword)cGroup_9_2.eContents().get(0);
		private final Assignment cAggregationAssignment_9_2_1 = (Assignment)cGroup_9_2.eContents().get(1);
		private final RuleCall cAggregationAggregationKindEnumRuleCall_9_2_1_0 = (RuleCall)cAggregationAssignment_9_2_1.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cSubsetOfKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_3_1 = (Keyword)cGroup_9_3.eContents().get(1);
		private final Assignment cSubsettedPropertyAssignment_9_3_2 = (Assignment)cGroup_9_3.eContents().get(2);
		private final CrossReference cSubsettedPropertyPropertyCrossReference_9_3_2_0 = (CrossReference)cSubsettedPropertyAssignment_9_3_2.eContents().get(0);
		private final RuleCall cSubsettedPropertyPropertyIDTerminalRuleCall_9_3_2_0_1 = (RuleCall)cSubsettedPropertyPropertyCrossReference_9_3_2_0.eContents().get(1);
		private final Group cGroup_9_3_3 = (Group)cGroup_9_3.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_3_0 = (Keyword)cGroup_9_3_3.eContents().get(0);
		private final Assignment cSubsettedPropertyAssignment_9_3_3_1 = (Assignment)cGroup_9_3_3.eContents().get(1);
		private final CrossReference cSubsettedPropertyPropertyCrossReference_9_3_3_1_0 = (CrossReference)cSubsettedPropertyAssignment_9_3_3_1.eContents().get(0);
		private final RuleCall cSubsettedPropertyPropertyIDTerminalRuleCall_9_3_3_1_0_1 = (RuleCall)cSubsettedPropertyPropertyCrossReference_9_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_3_4 = (Keyword)cGroup_9_3.eContents().get(4);
		private final Group cGroup_9_4 = (Group)cGroup_9.eContents().get(4);
		private final Keyword cRedefinesKeyword_9_4_0 = (Keyword)cGroup_9_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_4_1 = (Keyword)cGroup_9_4.eContents().get(1);
		private final Assignment cRedefinedPropertyAssignment_9_4_2 = (Assignment)cGroup_9_4.eContents().get(2);
		private final CrossReference cRedefinedPropertyPropertyCrossReference_9_4_2_0 = (CrossReference)cRedefinedPropertyAssignment_9_4_2.eContents().get(0);
		private final RuleCall cRedefinedPropertyPropertyIDTerminalRuleCall_9_4_2_0_1 = (RuleCall)cRedefinedPropertyPropertyCrossReference_9_4_2_0.eContents().get(1);
		private final Group cGroup_9_4_3 = (Group)cGroup_9_4.eContents().get(3);
		private final Keyword cCommaKeyword_9_4_3_0 = (Keyword)cGroup_9_4_3.eContents().get(0);
		private final Assignment cRedefinedPropertyAssignment_9_4_3_1 = (Assignment)cGroup_9_4_3.eContents().get(1);
		private final CrossReference cRedefinedPropertyPropertyCrossReference_9_4_3_1_0 = (CrossReference)cRedefinedPropertyAssignment_9_4_3_1.eContents().get(0);
		private final RuleCall cRedefinedPropertyPropertyIDTerminalRuleCall_9_4_3_1_0_1 = (RuleCall)cRedefinedPropertyPropertyCrossReference_9_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4_4 = (Keyword)cGroup_9_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		
		////OPAQUE_TEXT returns ecore::EString:
		////	LINE (NL LINE)*
		////;
		////+ -> concatena
		////% -> interpola
		////StringExpressionSymbol returns ecore::EString:
		////	'+' | '%'
		////	;
		////Isso seria uma expressão Terminal?
		////Se eu substituir o primeiro operand+=ValueSpecification por operand+=TerminalStringExpression funcionaria sem left-recursion
		////TerminalStringExpression returns StringExpression:
		////	operand+=LiteralString
		////	;
		////WTF is a StringExpression?
		////Devo usar subExpresion, symbol, subExpression
		////ou devo usar operand, symbol, operand (de Expression)
		////Aqui eu definiria quais as operações poderiam ser realizadas com STRINGs? 
		/// *
		//StringExpression returns StringExpression:
		//	{StringExpression}
		//	//"Reinaldo" + " Junior"
		//	('(' //Se eu tirar o parenteses eu vou ter uma chamada recursiva à esquerda, o que não pode no ANTLR
		//		operand+=ValueSpecification
		//		symbol='+'
		//		operand+=ValueSpecification
		//	')')
		//	//("Reinaldo %1 conheçe %2? %3" % "Junior", instancia_maria.nome, true)
		//	| ('('
		//		operand+=ValueSpecification
		//		symbol='%'
		//		operand+=ValueSpecification (',' operand+=ValueSpecification )?
		//	')')
		//// //Seria como uma operação, apenas
		////	|
		////	('('
		////		operand+=StringExpression
		////		symbol=StringExpressionSymbol
		////		operand+=ValueSpecification
		////	')')
		//    ;
		// * ///PropertyBound returns ecore::EIntegerObject: // datatype rule handled by a value converter
		////PropertyBound returns ecore::EIntegerObject: // datatype rule handled by a value converter
		////    '*' | INT;
		/// *****************************************************************************
		// * property nome (TipoNome)
		// * property amigos [2, 3] (TipoNome)
		// *****************************************************************************
		// * Problemas:
		// * Property::association é opposite, mas não está sendo definida automaticamente
		// ***************************************************************************** ///ATENTION: Ao mudar, mude também o de baixo
		//InlinePropertyDefinition returns Property:
		//	{Property} visibility=VisibilityKind? "property" ("<" (isStatic?="static"? & isOrdered?="ordered"? &
		//	isUnique?="unique"? & isReadOnly?="read-only"? & isDerivedUnion?="derived-union"?) ">")? name=ID? //Cardinalidade tá dando problema porque o Roberto usa umas convenções malucas...
		//	//EM Multiplicity Element
		//	//upper (derived)-> upperBound (derived)-> upperValue
		//	//lower (derived)-> lowerBound (derived)-> lowerValue
		//	//Quando eu insiro tô recebendo um problema com uma restrição:
		//	//The 'ClassAttributeConstraint1' constraint is violated on 'RefOntoUML.impl.KindImpl@564389b7{platform:/resource/primeiro/agora.ouml#//@packagedElement.1}'
		//	//Class::ClassAttributeConstraint1 é:
		//	//ownedAttribute->forAll( x | x.lower >= 1 )
		//	//Com ('cardinality' '[' lowerValue=ValueSpecification ',' upperValue=ValueSpecification ']')?	//Original era esse
		//	//lower tá ficando vazio...
		//	//Mudei para
		//	("[" lowerValue=LiteralInteger "," upperValue=LiteralUnlimitedNatural "]")? //E alterei o valor do UnlimitedNatural=* para 0 (era -1). Com isso o erro mudou para
		//	//The 'LowerAndUpperBound' constraint is violated on 'RefOntoUML.impl.PropertyImpl@1412504b{platform:/resource/primeiro/agora.ouml#//@packagedElement.1/@ownedAttribute.1}'
		//	"(" type=[Type] ")" ("{" ("defaults to" defaultValue=ValueSpecification)? ("aggregation" aggregation=AggregationKind)?
		//	("subset of" "(" subsettedProperty+=[Property] ("," subsettedProperty+=[Property])* ")")? ("redefines" "("
		//	redefinedProperty+=[Property] ("," redefinedProperty+=[Property])* ")")? "}")?;
		public ParserRule getRule() { return rule; }

		//{Property} visibility=VisibilityKind? "property" ("<" (isStatic?="static"? & isOrdered?="ordered"? & isUnique?="unique"?
		//& isReadOnly?="read-only"? & isDerivedUnion?="derived-union"?) ">")? name=ID? //Cardinalidade tá dando problema porque o Roberto usa umas convenções malucas...
		////EM Multiplicity Element
		////upper (derived)-> upperBound (derived)-> upperValue
		////lower (derived)-> lowerBound (derived)-> lowerValue
		////Quando eu insiro tô recebendo um problema com uma restrição:
		////The 'ClassAttributeConstraint1' constraint is violated on 'RefOntoUML.impl.KindImpl@564389b7{platform:/resource/primeiro/agora.ouml#//@packagedElement.1}'
		////Class::ClassAttributeConstraint1 é:
		////ownedAttribute->forAll( x | x.lower >= 1 )
		////Com ('cardinality' '[' lowerValue=ValueSpecification ',' upperValue=ValueSpecification ']')?	//Original era esse
		////lower tá ficando vazio...
		////Mudei para
		//("[" lowerValue=LiteralInteger "," upperValue=LiteralUnlimitedNatural "]")? //E alterei o valor do UnlimitedNatural=* para 0 (era -1). Com isso o erro mudou para
		////The 'LowerAndUpperBound' constraint is violated on 'RefOntoUML.impl.PropertyImpl@1412504b{platform:/resource/primeiro/agora.ouml#//@packagedElement.1/@ownedAttribute.1}'
		//"(" type=[Type] ")" ("{" ("defaults to" defaultValue=ValueSpecification)? ("aggregation" aggregation=AggregationKind)?
		//("subset of" "(" subsettedProperty+=[Property] ("," subsettedProperty+=[Property])* ")")? ("redefines" "("
		//redefinedProperty+=[Property] ("," redefinedProperty+=[Property])* ")")? "}")?
		public Group getGroup() { return cGroup; }

		//{Property}
		public Action getPropertyAction_0() { return cPropertyAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"property"
		public Keyword getPropertyKeyword_2() { return cPropertyKeyword_2; }

		//("<" (isStatic?="static"? & isOrdered?="ordered"? & isUnique?="unique"? & isReadOnly?="read-only"? &
		//isDerivedUnion?="derived-union"?) ">")?
		public Group getGroup_3() { return cGroup_3; }

		//"<"
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }

		//isStatic?="static"? & isOrdered?="ordered"? & isUnique?="unique"? & isReadOnly?="read-only"? &
		//isDerivedUnion?="derived-union"?
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }

		//isStatic?="static"?
		public Assignment getIsStaticAssignment_3_1_0() { return cIsStaticAssignment_3_1_0; }

		//"static"
		public Keyword getIsStaticStaticKeyword_3_1_0_0() { return cIsStaticStaticKeyword_3_1_0_0; }

		//isOrdered?="ordered"?
		public Assignment getIsOrderedAssignment_3_1_1() { return cIsOrderedAssignment_3_1_1; }

		//"ordered"
		public Keyword getIsOrderedOrderedKeyword_3_1_1_0() { return cIsOrderedOrderedKeyword_3_1_1_0; }

		//isUnique?="unique"?
		public Assignment getIsUniqueAssignment_3_1_2() { return cIsUniqueAssignment_3_1_2; }

		//"unique"
		public Keyword getIsUniqueUniqueKeyword_3_1_2_0() { return cIsUniqueUniqueKeyword_3_1_2_0; }

		//isReadOnly?="read-only"?
		public Assignment getIsReadOnlyAssignment_3_1_3() { return cIsReadOnlyAssignment_3_1_3; }

		//"read-only"
		public Keyword getIsReadOnlyReadOnlyKeyword_3_1_3_0() { return cIsReadOnlyReadOnlyKeyword_3_1_3_0; }

		//isDerivedUnion?="derived-union"?
		public Assignment getIsDerivedUnionAssignment_3_1_4() { return cIsDerivedUnionAssignment_3_1_4; }

		//"derived-union"
		public Keyword getIsDerivedUnionDerivedUnionKeyword_3_1_4_0() { return cIsDerivedUnionDerivedUnionKeyword_3_1_4_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_2() { return cGreaterThanSignKeyword_3_2; }

		//name=ID?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//("[" lowerValue=LiteralInteger "," upperValue=LiteralUnlimitedNatural "]")?
		public Group getGroup_5() { return cGroup_5; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }

		//lowerValue=LiteralInteger
		public Assignment getLowerValueAssignment_5_1() { return cLowerValueAssignment_5_1; }

		//LiteralInteger
		public RuleCall getLowerValueLiteralIntegerParserRuleCall_5_1_0() { return cLowerValueLiteralIntegerParserRuleCall_5_1_0; }

		//","
		public Keyword getCommaKeyword_5_2() { return cCommaKeyword_5_2; }

		//upperValue=LiteralUnlimitedNatural
		public Assignment getUpperValueAssignment_5_3() { return cUpperValueAssignment_5_3; }

		//LiteralUnlimitedNatural
		public RuleCall getUpperValueLiteralUnlimitedNaturalParserRuleCall_5_3_0() { return cUpperValueLiteralUnlimitedNaturalParserRuleCall_5_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5_4() { return cRightSquareBracketKeyword_5_4; }

		////E alterei o valor do UnlimitedNatural=* para 0 (era -1). Com isso o erro mudou para
		////The 'LowerAndUpperBound' constraint is violated on 'RefOntoUML.impl.PropertyImpl@1412504b{platform:/resource/primeiro/agora.ouml#//@packagedElement.1/@ownedAttribute.1}'
		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//type=[Type]
		public Assignment getTypeAssignment_7() { return cTypeAssignment_7; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_7_0() { return cTypeTypeCrossReference_7_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_7_0_1() { return cTypeTypeIDTerminalRuleCall_7_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//("{" ("defaults to" defaultValue=ValueSpecification)? ("aggregation" aggregation=AggregationKind)? ("subset of" "("
		//subsettedProperty+=[Property] ("," subsettedProperty+=[Property])* ")")? ("redefines" "(" redefinedProperty+=[Property]
		//("," redefinedProperty+=[Property])* ")")? "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_0() { return cLeftCurlyBracketKeyword_9_0; }

		//("defaults to" defaultValue=ValueSpecification)?
		public Group getGroup_9_1() { return cGroup_9_1; }

		//"defaults to"
		public Keyword getDefaultsToKeyword_9_1_0() { return cDefaultsToKeyword_9_1_0; }

		//defaultValue=ValueSpecification
		public Assignment getDefaultValueAssignment_9_1_1() { return cDefaultValueAssignment_9_1_1; }

		//ValueSpecification
		public RuleCall getDefaultValueValueSpecificationParserRuleCall_9_1_1_0() { return cDefaultValueValueSpecificationParserRuleCall_9_1_1_0; }

		//("aggregation" aggregation=AggregationKind)?
		public Group getGroup_9_2() { return cGroup_9_2; }

		//"aggregation"
		public Keyword getAggregationKeyword_9_2_0() { return cAggregationKeyword_9_2_0; }

		//aggregation=AggregationKind
		public Assignment getAggregationAssignment_9_2_1() { return cAggregationAssignment_9_2_1; }

		//AggregationKind
		public RuleCall getAggregationAggregationKindEnumRuleCall_9_2_1_0() { return cAggregationAggregationKindEnumRuleCall_9_2_1_0; }

		//("subset of" "(" subsettedProperty+=[Property] ("," subsettedProperty+=[Property])* ")")?
		public Group getGroup_9_3() { return cGroup_9_3; }

		//"subset of"
		public Keyword getSubsetOfKeyword_9_3_0() { return cSubsetOfKeyword_9_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_9_3_1() { return cLeftParenthesisKeyword_9_3_1; }

		//subsettedProperty+=[Property]
		public Assignment getSubsettedPropertyAssignment_9_3_2() { return cSubsettedPropertyAssignment_9_3_2; }

		//[Property]
		public CrossReference getSubsettedPropertyPropertyCrossReference_9_3_2_0() { return cSubsettedPropertyPropertyCrossReference_9_3_2_0; }

		//ID
		public RuleCall getSubsettedPropertyPropertyIDTerminalRuleCall_9_3_2_0_1() { return cSubsettedPropertyPropertyIDTerminalRuleCall_9_3_2_0_1; }

		//("," subsettedProperty+=[Property])*
		public Group getGroup_9_3_3() { return cGroup_9_3_3; }

		//","
		public Keyword getCommaKeyword_9_3_3_0() { return cCommaKeyword_9_3_3_0; }

		//subsettedProperty+=[Property]
		public Assignment getSubsettedPropertyAssignment_9_3_3_1() { return cSubsettedPropertyAssignment_9_3_3_1; }

		//[Property]
		public CrossReference getSubsettedPropertyPropertyCrossReference_9_3_3_1_0() { return cSubsettedPropertyPropertyCrossReference_9_3_3_1_0; }

		//ID
		public RuleCall getSubsettedPropertyPropertyIDTerminalRuleCall_9_3_3_1_0_1() { return cSubsettedPropertyPropertyIDTerminalRuleCall_9_3_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_9_3_4() { return cRightParenthesisKeyword_9_3_4; }

		//("redefines" "(" redefinedProperty+=[Property] ("," redefinedProperty+=[Property])* ")")?
		public Group getGroup_9_4() { return cGroup_9_4; }

		//"redefines"
		public Keyword getRedefinesKeyword_9_4_0() { return cRedefinesKeyword_9_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_9_4_1() { return cLeftParenthesisKeyword_9_4_1; }

		//redefinedProperty+=[Property]
		public Assignment getRedefinedPropertyAssignment_9_4_2() { return cRedefinedPropertyAssignment_9_4_2; }

		//[Property]
		public CrossReference getRedefinedPropertyPropertyCrossReference_9_4_2_0() { return cRedefinedPropertyPropertyCrossReference_9_4_2_0; }

		//ID
		public RuleCall getRedefinedPropertyPropertyIDTerminalRuleCall_9_4_2_0_1() { return cRedefinedPropertyPropertyIDTerminalRuleCall_9_4_2_0_1; }

		//("," redefinedProperty+=[Property])*
		public Group getGroup_9_4_3() { return cGroup_9_4_3; }

		//","
		public Keyword getCommaKeyword_9_4_3_0() { return cCommaKeyword_9_4_3_0; }

		//redefinedProperty+=[Property]
		public Assignment getRedefinedPropertyAssignment_9_4_3_1() { return cRedefinedPropertyAssignment_9_4_3_1; }

		//[Property]
		public CrossReference getRedefinedPropertyPropertyCrossReference_9_4_3_1_0() { return cRedefinedPropertyPropertyCrossReference_9_4_3_1_0; }

		//ID
		public RuleCall getRedefinedPropertyPropertyIDTerminalRuleCall_9_4_3_1_0_1() { return cRedefinedPropertyPropertyIDTerminalRuleCall_9_4_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_9_4_4() { return cRightParenthesisKeyword_9_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_5() { return cRightCurlyBracketKeyword_9_5; }
	}

	public class MediationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mediation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMediationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cMediationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cUnorderedGroup_6.eContents().get(0);
		private final Assignment cOwnedEndAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0 = (RuleCall)cOwnedEndAssignment_6_0_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_0_1 = (Keyword)cGroup_6_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cMemberEndKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cColonKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cMemberEndAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final CrossReference cMemberEndPropertyCrossReference_6_1_2_0 = (CrossReference)cMemberEndAssignment_6_1_2.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1 = (RuleCall)cMemberEndPropertyCrossReference_6_1_2_0.eContents().get(1);
		private final Group cGroup_6_1_3 = (Group)cGroup_6_1.eContents().get(3);
		private final Keyword cCommaKeyword_6_1_3_0 = (Keyword)cGroup_6_1_3.eContents().get(0);
		private final Assignment cMemberEndAssignment_6_1_3_1 = (Assignment)cGroup_6_1_3.eContents().get(1);
		private final CrossReference cMemberEndPropertyCrossReference_6_1_3_1_0 = (CrossReference)cMemberEndAssignment_6_1_3_1.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1 = (RuleCall)cMemberEndPropertyCrossReference_6_1_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final Group cGroup_6_2 = (Group)cUnorderedGroup_6.eContents().get(2);
		private final Keyword cNavigableOwnedEndKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cColonKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Assignment cNavigableOwnedEndAssignment_6_2_2 = (Assignment)cGroup_6_2.eContents().get(2);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_6_2_2_0 = (CrossReference)cNavigableOwnedEndAssignment_6_2_2.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_6_2_2_0.eContents().get(1);
		private final Group cGroup_6_2_3 = (Group)cGroup_6_2.eContents().get(3);
		private final Keyword cCommaKeyword_6_2_3_0 = (Keyword)cGroup_6_2_3.eContents().get(0);
		private final Assignment cNavigableOwnedEndAssignment_6_2_3_1 = (Assignment)cGroup_6_2_3.eContents().get(1);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0 = (CrossReference)cNavigableOwnedEndAssignment_6_2_3_1.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_2_4 = (Keyword)cGroup_6_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		////Igual a propriedade
		////relation maisVelhoQue(Pessoa) //FormalAssociation entre Pessoa e Pessoa
		////relation casadoCom(Pessoa) throught contratoDeCasamento //MaterialAssociation
		//
		//Relation returns Property:
		//	(visibility=VisibilityKind)?
		//	'relation'
		//	('('
		//	 (isStatic?='static' & isOrdered?='ordered' & isUnique?='unique' & isReadOnly?='read-only' & isDerivedUnion?='derived-union')
		//	 ')'
		//	)?
		//	name=ID
		////	('[' upperValue=ValueSpecification ',' lowerValue=ValueSpecification ']')?
		//	':' type=[Type]
		////	('default=' defaultValue=ValueSpecification)?
		//
		////?
		////	'->' association=[Association|ID]
		////	owningAssociation+=[Association]
		////	owningAssociation=[Association] //oposite -> ownedEnd
		//	association=[Association] //oposite -> memberEnd
		//
		//	('{'
		//		('aggregation' aggregation=AggregationKind)?
		//		('subset of' '(' subsettedProperty+=[Property|STRING] ( "," subsettedProperty+=[Property|STRING])* ')' )?
		//		('redefines' '(' redefinedProperty+=[Property|STRING] ( "," redefinedProperty+=[Property|STRING])* ')' )?
		//
		////		
		////Opposite em Dependency, não precisa definir
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//    '}')?
		//;
		// * // *
		//
		// *** Associations ***
		//
		//2) (Carraretto, 2010, p.70).
		//
		//- memberEnd:
		//Todas as Classes (na verdade, Properties) que estão sendo relacionadas em uma Association ficam em 'memberEnd'.
		//
		//- ownedEnd:
		//Algumas dessas Classes (na verdade, Properties) ficam sob posse da Association, essas Classes são referenciadas por 'ownedEnd'. Tradicionalmente, todas as Classes (na verdade, Properties) ficam sob posse da Association. Mas é possível em UML fazer a Class ser dona da Property, ao invés da Association. A sintaxe concreta é um "ponto" entre a linha da association e a classe. 99% das vezes owned possui as mesmas Properties que memberEnd.
		//
		//- navigableOwnedEnd:
		//Algumas dessas Classes (na verdade, Properties) que a Association tem posse são navegáveis. Tradicionalmente, uma Association é navegável em todos os sentidos, até que você fale o contrário. A sintaxe concreta é uma "seta" entre a linha da Association e a Class. 70% das vezes navigableOwnedEnd possui as mesmas Properties de ownedEnd.
		//
		//- endType:
		//Igual memberEnd, mas ao invés de retornar Properties retorna Classes. É uma relação derived.
		//self.memberEnd->collect(e | e.type)
		// * // *
		// *
		// * ownedMember vs ownedElement (derivada)
		// * endType (derivada)
		//
		//mediation M1 {
		//	Person : property <unique> p1[1,1] (Person)
		//	Animal : property <read-only> p2[1,1] (Animal)
		//}
		// * /Mediation:
		//	{Mediation} visibility=VisibilityKind? "mediation" name=ID? (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":"
		//	memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//	navigableOwnedEnd+=[Property])* ";")?) "}";
		public ParserRule getRule() { return rule; }

		//{Mediation} visibility=VisibilityKind? "mediation" name=ID? (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":"
		//memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//navigableOwnedEnd+=[Property])* ";")?) "}"
		public Group getGroup() { return cGroup; }

		//{Mediation}
		public Action getMediationAction_0() { return cMediationAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"mediation"
		public Keyword getMediationKeyword_2() { return cMediationKeyword_2; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//(ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? &
		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }

		//(ownedEnd+=InlinePropertyDefinition ";")+
		public Group getGroup_6_0() { return cGroup_6_0; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_6_0_0() { return cOwnedEndAssignment_6_0_0; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0; }

		//";"
		public Keyword getSemicolonKeyword_6_0_1() { return cSemicolonKeyword_6_0_1; }

		//("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		public Group getGroup_6_1() { return cGroup_6_1; }

		//"memberEnd"
		public Keyword getMemberEndKeyword_6_1_0() { return cMemberEndKeyword_6_1_0; }

		//":"
		public Keyword getColonKeyword_6_1_1() { return cColonKeyword_6_1_1; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_6_1_2() { return cMemberEndAssignment_6_1_2; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_6_1_2_0() { return cMemberEndPropertyCrossReference_6_1_2_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1() { return cMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1; }

		//("," memberEnd+=[Property])*
		public Group getGroup_6_1_3() { return cGroup_6_1_3; }

		//","
		public Keyword getCommaKeyword_6_1_3_0() { return cCommaKeyword_6_1_3_0; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_6_1_3_1() { return cMemberEndAssignment_6_1_3_1; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_6_1_3_1_0() { return cMemberEndPropertyCrossReference_6_1_3_1_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1() { return cMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6_1_4() { return cSemicolonKeyword_6_1_4; }

		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"navigableOwnedEnd"
		public Keyword getNavigableOwnedEndKeyword_6_2_0() { return cNavigableOwnedEndKeyword_6_2_0; }

		//":"
		public Keyword getColonKeyword_6_2_1() { return cColonKeyword_6_2_1; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_6_2_2() { return cNavigableOwnedEndAssignment_6_2_2; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_6_2_2_0() { return cNavigableOwnedEndPropertyCrossReference_6_2_2_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1; }

		//("," navigableOwnedEnd+=[Property])*
		public Group getGroup_6_2_3() { return cGroup_6_2_3; }

		//","
		public Keyword getCommaKeyword_6_2_3_0() { return cCommaKeyword_6_2_3_0; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_6_2_3_1() { return cNavigableOwnedEndAssignment_6_2_3_1; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_6_2_3_1_0() { return cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6_2_4() { return cSemicolonKeyword_6_2_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class DerivationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Derivation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cIsDerivedAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIsDerivedDerivedKeyword_1_0_0 = (Keyword)cIsDerivedAssignment_1_0.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_1_1_0 = (Keyword)cIsAbstractAssignment_1_1.eContents().get(0);
		private final Assignment cIsLeafAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cIsLeafLeafKeyword_1_2_0 = (Keyword)cIsLeafAssignment_1_2.eContents().get(0);
		private final Keyword cDerivationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cMaterialKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cOwnedEndAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0 = (RuleCall)cOwnedEndAssignment_7_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cRelatorKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cOwnedEndAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_9_0_0 = (RuleCall)cOwnedEndAssignment_9_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_10 = (UnorderedGroup)cGroup.eContents().get(10);
		private final Group cGroup_10_0 = (Group)cUnorderedGroup_10.eContents().get(0);
		private final Keyword cMemberEndKeyword_10_0_0 = (Keyword)cGroup_10_0.eContents().get(0);
		private final Keyword cColonKeyword_10_0_1 = (Keyword)cGroup_10_0.eContents().get(1);
		private final Assignment cMemberEndAssignment_10_0_2 = (Assignment)cGroup_10_0.eContents().get(2);
		private final CrossReference cMemberEndPropertyCrossReference_10_0_2_0 = (CrossReference)cMemberEndAssignment_10_0_2.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_10_0_2_0_1 = (RuleCall)cMemberEndPropertyCrossReference_10_0_2_0.eContents().get(1);
		private final Group cGroup_10_0_3 = (Group)cGroup_10_0.eContents().get(3);
		private final Keyword cCommaKeyword_10_0_3_0 = (Keyword)cGroup_10_0_3.eContents().get(0);
		private final Assignment cMemberEndAssignment_10_0_3_1 = (Assignment)cGroup_10_0_3.eContents().get(1);
		private final CrossReference cMemberEndPropertyCrossReference_10_0_3_1_0 = (CrossReference)cMemberEndAssignment_10_0_3_1.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_10_0_3_1_0_1 = (RuleCall)cMemberEndPropertyCrossReference_10_0_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_10_0_4 = (Keyword)cGroup_10_0.eContents().get(4);
		private final Group cGroup_10_1 = (Group)cUnorderedGroup_10.eContents().get(1);
		private final Keyword cNavigableOwnedEndKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Keyword cColonKeyword_10_1_1 = (Keyword)cGroup_10_1.eContents().get(1);
		private final Assignment cNavigableOwnedEndAssignment_10_1_2 = (Assignment)cGroup_10_1.eContents().get(2);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_10_1_2_0 = (CrossReference)cNavigableOwnedEndAssignment_10_1_2.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_2_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_10_1_2_0.eContents().get(1);
		private final Group cGroup_10_1_3 = (Group)cGroup_10_1.eContents().get(3);
		private final Keyword cCommaKeyword_10_1_3_0 = (Keyword)cGroup_10_1_3.eContents().get(0);
		private final Assignment cNavigableOwnedEndAssignment_10_1_3_1 = (Assignment)cGroup_10_1_3.eContents().get(1);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_10_1_3_1_0 = (CrossReference)cNavigableOwnedEndAssignment_10_1_3_1.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_3_1_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_10_1_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_10_1_4 = (Keyword)cGroup_10_1.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Derivation:
		//	visibility=VisibilityKind? (isDerived?="derived"? & isAbstract?="abstract"? & isLeaf?="leaf"?) "derivation" name=ID?
		//	(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{" "material:"
		//	(ownedEnd+=InlinePropertyDefinition ";") "relator:" (ownedEnd+=InlinePropertyDefinition ";") (("memberEnd" ":"
		//	memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//	navigableOwnedEnd+=[Property])* ";")?) "}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? (isDerived?="derived"? & isAbstract?="abstract"? & isLeaf?="leaf"?) "derivation" name=ID?
		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{" "material:"
		//(ownedEnd+=InlinePropertyDefinition ";") "relator:" (ownedEnd+=InlinePropertyDefinition ";") (("memberEnd" ":"
		//memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//navigableOwnedEnd+=[Property])* ";")?) "}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isDerived?="derived"? & isAbstract?="abstract"? & isLeaf?="leaf"?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//isDerived?="derived"?
		public Assignment getIsDerivedAssignment_1_0() { return cIsDerivedAssignment_1_0; }

		//"derived"
		public Keyword getIsDerivedDerivedKeyword_1_0_0() { return cIsDerivedDerivedKeyword_1_0_0; }

		//isAbstract?="abstract"?
		public Assignment getIsAbstractAssignment_1_1() { return cIsAbstractAssignment_1_1; }

		//"abstract"
		public Keyword getIsAbstractAbstractKeyword_1_1_0() { return cIsAbstractAbstractKeyword_1_1_0; }

		//isLeaf?="leaf"?
		public Assignment getIsLeafAssignment_1_2() { return cIsLeafAssignment_1_2; }

		//"leaf"
		public Keyword getIsLeafLeafKeyword_1_2_0() { return cIsLeafLeafKeyword_1_2_0; }

		//"derivation"
		public Keyword getDerivationKeyword_2() { return cDerivationKeyword_2; }

		//name=ID?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//"material:"
		public Keyword getMaterialKeyword_6() { return cMaterialKeyword_6; }

		//ownedEnd+=InlinePropertyDefinition ";"
		public Group getGroup_7() { return cGroup_7; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_7_0() { return cOwnedEndAssignment_7_0; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0; }

		//";"
		public Keyword getSemicolonKeyword_7_1() { return cSemicolonKeyword_7_1; }

		//"relator:"
		public Keyword getRelatorKeyword_8() { return cRelatorKeyword_8; }

		//ownedEnd+=InlinePropertyDefinition ";"
		public Group getGroup_9() { return cGroup_9; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_9_0() { return cOwnedEndAssignment_9_0; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_9_0_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_9_0_0; }

		//";"
		public Keyword getSemicolonKeyword_9_1() { return cSemicolonKeyword_9_1; }

		//("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":"
		//navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public UnorderedGroup getUnorderedGroup_10() { return cUnorderedGroup_10; }

		//("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		public Group getGroup_10_0() { return cGroup_10_0; }

		//"memberEnd"
		public Keyword getMemberEndKeyword_10_0_0() { return cMemberEndKeyword_10_0_0; }

		//":"
		public Keyword getColonKeyword_10_0_1() { return cColonKeyword_10_0_1; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_10_0_2() { return cMemberEndAssignment_10_0_2; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_10_0_2_0() { return cMemberEndPropertyCrossReference_10_0_2_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_10_0_2_0_1() { return cMemberEndPropertyIDTerminalRuleCall_10_0_2_0_1; }

		//("," memberEnd+=[Property])*
		public Group getGroup_10_0_3() { return cGroup_10_0_3; }

		//","
		public Keyword getCommaKeyword_10_0_3_0() { return cCommaKeyword_10_0_3_0; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_10_0_3_1() { return cMemberEndAssignment_10_0_3_1; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_10_0_3_1_0() { return cMemberEndPropertyCrossReference_10_0_3_1_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_10_0_3_1_0_1() { return cMemberEndPropertyIDTerminalRuleCall_10_0_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_10_0_4() { return cSemicolonKeyword_10_0_4; }

		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public Group getGroup_10_1() { return cGroup_10_1; }

		//"navigableOwnedEnd"
		public Keyword getNavigableOwnedEndKeyword_10_1_0() { return cNavigableOwnedEndKeyword_10_1_0; }

		//":"
		public Keyword getColonKeyword_10_1_1() { return cColonKeyword_10_1_1; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_10_1_2() { return cNavigableOwnedEndAssignment_10_1_2; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_10_1_2_0() { return cNavigableOwnedEndPropertyCrossReference_10_1_2_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_2_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_2_0_1; }

		//("," navigableOwnedEnd+=[Property])*
		public Group getGroup_10_1_3() { return cGroup_10_1_3; }

		//","
		public Keyword getCommaKeyword_10_1_3_0() { return cCommaKeyword_10_1_3_0; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_10_1_3_1() { return cNavigableOwnedEndAssignment_10_1_3_1; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_10_1_3_1_0() { return cNavigableOwnedEndPropertyCrossReference_10_1_3_1_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_3_1_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_10_1_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_10_1_4() { return cSemicolonKeyword_10_1_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class MaterialAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaterialAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaterialAssociationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsDerivedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsDerivedDerivedKeyword_2_0_0 = (Keyword)cIsDerivedAssignment_2_0.eContents().get(0);
		private final Assignment cIsAbstractAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_2_1_0 = (Keyword)cIsAbstractAssignment_2_1.eContents().get(0);
		private final Assignment cIsLeafAssignment_2_2 = (Assignment)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cIsLeafLeafKeyword_2_2_0 = (Keyword)cIsLeafAssignment_2_2.eContents().get(0);
		private final Keyword cMaterialAssociationKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cGeneralizationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_5_1_0 = (RuleCall)cGeneralizationAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_5_2_1_0 = (RuleCall)cGeneralizationAssignment_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final UnorderedGroup cUnorderedGroup_7 = (UnorderedGroup)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cUnorderedGroup_7.eContents().get(0);
		private final Assignment cOwnedEndAssignment_7_0_0 = (Assignment)cGroup_7_0.eContents().get(0);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0_0 = (RuleCall)cOwnedEndAssignment_7_0_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_0_1 = (Keyword)cGroup_7_0.eContents().get(1);
		private final Group cGroup_7_1 = (Group)cUnorderedGroup_7.eContents().get(1);
		private final Keyword cMemberEndKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Keyword cColonKeyword_7_1_1 = (Keyword)cGroup_7_1.eContents().get(1);
		private final Assignment cMemberEndAssignment_7_1_2 = (Assignment)cGroup_7_1.eContents().get(2);
		private final CrossReference cMemberEndPropertyCrossReference_7_1_2_0 = (CrossReference)cMemberEndAssignment_7_1_2.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_7_1_2_0_1 = (RuleCall)cMemberEndPropertyCrossReference_7_1_2_0.eContents().get(1);
		private final Group cGroup_7_1_3 = (Group)cGroup_7_1.eContents().get(3);
		private final Keyword cCommaKeyword_7_1_3_0 = (Keyword)cGroup_7_1_3.eContents().get(0);
		private final Assignment cMemberEndAssignment_7_1_3_1 = (Assignment)cGroup_7_1_3.eContents().get(1);
		private final CrossReference cMemberEndPropertyCrossReference_7_1_3_1_0 = (CrossReference)cMemberEndAssignment_7_1_3_1.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_7_1_3_1_0_1 = (RuleCall)cMemberEndPropertyCrossReference_7_1_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_1_4 = (Keyword)cGroup_7_1.eContents().get(4);
		private final Group cGroup_7_2 = (Group)cUnorderedGroup_7.eContents().get(2);
		private final Keyword cNavigableOwnedEndKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Keyword cColonKeyword_7_2_1 = (Keyword)cGroup_7_2.eContents().get(1);
		private final Assignment cNavigableOwnedEndAssignment_7_2_2 = (Assignment)cGroup_7_2.eContents().get(2);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_7_2_2_0 = (CrossReference)cNavigableOwnedEndAssignment_7_2_2.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_2_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_7_2_2_0.eContents().get(1);
		private final Group cGroup_7_2_3 = (Group)cGroup_7_2.eContents().get(3);
		private final Keyword cCommaKeyword_7_2_3_0 = (Keyword)cGroup_7_2_3.eContents().get(0);
		private final Assignment cNavigableOwnedEndAssignment_7_2_3_1 = (Assignment)cGroup_7_2_3.eContents().get(1);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_7_2_3_1_0 = (CrossReference)cNavigableOwnedEndAssignment_7_2_3_1.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_3_1_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_7_2_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_2_4 = (Keyword)cGroup_7_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/// *
		// *
		// * public property casadoCom (Pessoa) throught contratoDeCasamento //MaterialAssociation
		// * OCL: Precisa de um Derivation cujo memberEnd[1] = MaterialAssociation
		// * /MaterialAssociation:
		//	{MaterialAssociation} visibility=VisibilityKind? //Derived é OBRIGATORIO
		//	(isDerived?="derived" & isAbstract?="abstract"? & isLeaf?="leaf"?) "materialAssociation" name=ID? (":"
		//	generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
		//	((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		//	& ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?) "}";
		public ParserRule getRule() { return rule; }

		//{MaterialAssociation} visibility=VisibilityKind? //Derived é OBRIGATORIO
		//(isDerived?="derived" & isAbstract?="abstract"? & isLeaf?="leaf"?) "materialAssociation" name=ID? (":"
		//generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
		//((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		//& ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?) "}"
		public Group getGroup() { return cGroup; }

		//{MaterialAssociation}
		public Action getMaterialAssociationAction_0() { return cMaterialAssociationAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//isDerived?="derived" & isAbstract?="abstract"? & isLeaf?="leaf"?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//isDerived?="derived"
		public Assignment getIsDerivedAssignment_2_0() { return cIsDerivedAssignment_2_0; }

		//"derived"
		public Keyword getIsDerivedDerivedKeyword_2_0_0() { return cIsDerivedDerivedKeyword_2_0_0; }

		//isAbstract?="abstract"?
		public Assignment getIsAbstractAssignment_2_1() { return cIsAbstractAssignment_2_1; }

		//"abstract"
		public Keyword getIsAbstractAbstractKeyword_2_1_0() { return cIsAbstractAbstractKeyword_2_1_0; }

		//isLeaf?="leaf"?
		public Assignment getIsLeafAssignment_2_2() { return cIsLeafAssignment_2_2; }

		//"leaf"
		public Keyword getIsLeafLeafKeyword_2_2_0() { return cIsLeafLeafKeyword_2_2_0; }

		//"materialAssociation"
		public Keyword getMaterialAssociationKeyword_3() { return cMaterialAssociationKeyword_3; }

		//name=ID?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_5_1() { return cGeneralizationAssignment_5_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_5_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_5_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_5_2_1() { return cGeneralizationAssignment_5_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_5_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_5_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//(ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? &
		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public UnorderedGroup getUnorderedGroup_7() { return cUnorderedGroup_7; }

		//(ownedEnd+=InlinePropertyDefinition ";")+
		public Group getGroup_7_0() { return cGroup_7_0; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_7_0_0() { return cOwnedEndAssignment_7_0_0; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0_0; }

		//";"
		public Keyword getSemicolonKeyword_7_0_1() { return cSemicolonKeyword_7_0_1; }

		//("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		public Group getGroup_7_1() { return cGroup_7_1; }

		//"memberEnd"
		public Keyword getMemberEndKeyword_7_1_0() { return cMemberEndKeyword_7_1_0; }

		//":"
		public Keyword getColonKeyword_7_1_1() { return cColonKeyword_7_1_1; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_7_1_2() { return cMemberEndAssignment_7_1_2; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_7_1_2_0() { return cMemberEndPropertyCrossReference_7_1_2_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_7_1_2_0_1() { return cMemberEndPropertyIDTerminalRuleCall_7_1_2_0_1; }

		//("," memberEnd+=[Property])*
		public Group getGroup_7_1_3() { return cGroup_7_1_3; }

		//","
		public Keyword getCommaKeyword_7_1_3_0() { return cCommaKeyword_7_1_3_0; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_7_1_3_1() { return cMemberEndAssignment_7_1_3_1; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_7_1_3_1_0() { return cMemberEndPropertyCrossReference_7_1_3_1_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_7_1_3_1_0_1() { return cMemberEndPropertyIDTerminalRuleCall_7_1_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_1_4() { return cSemicolonKeyword_7_1_4; }

		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public Group getGroup_7_2() { return cGroup_7_2; }

		//"navigableOwnedEnd"
		public Keyword getNavigableOwnedEndKeyword_7_2_0() { return cNavigableOwnedEndKeyword_7_2_0; }

		//":"
		public Keyword getColonKeyword_7_2_1() { return cColonKeyword_7_2_1; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_7_2_2() { return cNavigableOwnedEndAssignment_7_2_2; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_7_2_2_0() { return cNavigableOwnedEndPropertyCrossReference_7_2_2_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_2_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_2_0_1; }

		//("," navigableOwnedEnd+=[Property])*
		public Group getGroup_7_2_3() { return cGroup_7_2_3; }

		//","
		public Keyword getCommaKeyword_7_2_3_0() { return cCommaKeyword_7_2_3_0; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_7_2_3_1() { return cNavigableOwnedEndAssignment_7_2_3_1; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_7_2_3_1_0() { return cNavigableOwnedEndPropertyCrossReference_7_2_3_1_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_3_1_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_7_2_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_2_4() { return cSemicolonKeyword_7_2_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class FormalAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FormalAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFormalAssociationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsAbstractAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_2_0_0 = (Keyword)cIsAbstractAssignment_2_0.eContents().get(0);
		private final Assignment cIsDerivedAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsDerivedDerivedKeyword_2_1_0 = (Keyword)cIsDerivedAssignment_2_1.eContents().get(0);
		private final Assignment cIsLeafAssignment_2_2 = (Assignment)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cIsLeafLeafKeyword_2_2_0 = (Keyword)cIsLeafAssignment_2_2.eContents().get(0);
		private final Keyword cFormalAssociationKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cUnorderedGroup_6.eContents().get(0);
		private final Assignment cOwnedEndAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0 = (RuleCall)cOwnedEndAssignment_6_0_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_0_1 = (Keyword)cGroup_6_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cMemberEndKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cColonKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cMemberEndAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final CrossReference cMemberEndPropertyCrossReference_6_1_2_0 = (CrossReference)cMemberEndAssignment_6_1_2.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1 = (RuleCall)cMemberEndPropertyCrossReference_6_1_2_0.eContents().get(1);
		private final Group cGroup_6_1_3 = (Group)cGroup_6_1.eContents().get(3);
		private final Keyword cCommaKeyword_6_1_3_0 = (Keyword)cGroup_6_1_3.eContents().get(0);
		private final Assignment cMemberEndAssignment_6_1_3_1 = (Assignment)cGroup_6_1_3.eContents().get(1);
		private final CrossReference cMemberEndPropertyCrossReference_6_1_3_1_0 = (CrossReference)cMemberEndAssignment_6_1_3_1.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1 = (RuleCall)cMemberEndPropertyCrossReference_6_1_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final Group cGroup_6_2 = (Group)cUnorderedGroup_6.eContents().get(2);
		private final Keyword cNavigableOwnedEndKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cColonKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Assignment cNavigableOwnedEndAssignment_6_2_2 = (Assignment)cGroup_6_2.eContents().get(2);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_6_2_2_0 = (CrossReference)cNavigableOwnedEndAssignment_6_2_2.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_6_2_2_0.eContents().get(1);
		private final Group cGroup_6_2_3 = (Group)cGroup_6_2.eContents().get(3);
		private final Keyword cCommaKeyword_6_2_3_0 = (Keyword)cGroup_6_2_3.eContents().get(0);
		private final Assignment cNavigableOwnedEndAssignment_6_2_3_1 = (Assignment)cGroup_6_2_3.eContents().get(1);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0 = (CrossReference)cNavigableOwnedEndAssignment_6_2_3_1.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_2_4 = (Keyword)cGroup_6_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////public property maisVelhoQue (Pessoa) //FormalAssociation entre Pessoa e Pessoa
		//FormalAssociation:
		//	{FormalAssociation} visibility=VisibilityKind? (isAbstract?="abstract"? & isDerived?="derived"? & isLeaf?="leaf"?)
		//	"formalAssociation" name=ID? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property]
		//	("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//	navigableOwnedEnd+=[Property])* ";")?) "}";
		public ParserRule getRule() { return rule; }

		//{FormalAssociation} visibility=VisibilityKind? (isAbstract?="abstract"? & isDerived?="derived"? & isLeaf?="leaf"?)
		//"formalAssociation" name=ID? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property]
		//("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
		//navigableOwnedEnd+=[Property])* ";")?) "}"
		public Group getGroup() { return cGroup; }

		//{FormalAssociation}
		public Action getFormalAssociationAction_0() { return cFormalAssociationAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//isAbstract?="abstract"? & isDerived?="derived"? & isLeaf?="leaf"?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//isAbstract?="abstract"?
		public Assignment getIsAbstractAssignment_2_0() { return cIsAbstractAssignment_2_0; }

		//"abstract"
		public Keyword getIsAbstractAbstractKeyword_2_0_0() { return cIsAbstractAbstractKeyword_2_0_0; }

		//isDerived?="derived"?
		public Assignment getIsDerivedAssignment_2_1() { return cIsDerivedAssignment_2_1; }

		//"derived"
		public Keyword getIsDerivedDerivedKeyword_2_1_0() { return cIsDerivedDerivedKeyword_2_1_0; }

		//isLeaf?="leaf"?
		public Assignment getIsLeafAssignment_2_2() { return cIsLeafAssignment_2_2; }

		//"leaf"
		public Keyword getIsLeafLeafKeyword_2_2_0() { return cIsLeafLeafKeyword_2_2_0; }

		//"formalAssociation"
		public Keyword getFormalAssociationKeyword_3() { return cFormalAssociationKeyword_3; }

		//name=ID?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//(ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? &
		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }

		//(ownedEnd+=InlinePropertyDefinition ";")+
		public Group getGroup_6_0() { return cGroup_6_0; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_6_0_0() { return cOwnedEndAssignment_6_0_0; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0; }

		//";"
		public Keyword getSemicolonKeyword_6_0_1() { return cSemicolonKeyword_6_0_1; }

		//("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
		public Group getGroup_6_1() { return cGroup_6_1; }

		//"memberEnd"
		public Keyword getMemberEndKeyword_6_1_0() { return cMemberEndKeyword_6_1_0; }

		//":"
		public Keyword getColonKeyword_6_1_1() { return cColonKeyword_6_1_1; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_6_1_2() { return cMemberEndAssignment_6_1_2; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_6_1_2_0() { return cMemberEndPropertyCrossReference_6_1_2_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1() { return cMemberEndPropertyIDTerminalRuleCall_6_1_2_0_1; }

		//("," memberEnd+=[Property])*
		public Group getGroup_6_1_3() { return cGroup_6_1_3; }

		//","
		public Keyword getCommaKeyword_6_1_3_0() { return cCommaKeyword_6_1_3_0; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_6_1_3_1() { return cMemberEndAssignment_6_1_3_1; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_6_1_3_1_0() { return cMemberEndPropertyCrossReference_6_1_3_1_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1() { return cMemberEndPropertyIDTerminalRuleCall_6_1_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6_1_4() { return cSemicolonKeyword_6_1_4; }

		//("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"navigableOwnedEnd"
		public Keyword getNavigableOwnedEndKeyword_6_2_0() { return cNavigableOwnedEndKeyword_6_2_0; }

		//":"
		public Keyword getColonKeyword_6_2_1() { return cColonKeyword_6_2_1; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_6_2_2() { return cNavigableOwnedEndAssignment_6_2_2; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_6_2_2_0() { return cNavigableOwnedEndPropertyCrossReference_6_2_2_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_2_0_1; }

		//("," navigableOwnedEnd+=[Property])*
		public Group getGroup_6_2_3() { return cGroup_6_2_3; }

		//","
		public Keyword getCommaKeyword_6_2_3_0() { return cCommaKeyword_6_2_3_0; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_6_2_3_1() { return cNavigableOwnedEndAssignment_6_2_3_1; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_6_2_3_1_0() { return cNavigableOwnedEndPropertyCrossReference_6_2_3_1_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_6_2_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6_2_4() { return cSemicolonKeyword_6_2_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cEnumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedLiteralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedLiteralEnumerationLiteralParserRuleCall_4_0 = (RuleCall)cOwnedLiteralAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOwnedLiteralAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedLiteralEnumerationLiteralParserRuleCall_5_1_0 = (RuleCall)cOwnedLiteralAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// * 
		//Association_Impl returns Association:
		//	'Association'
		//	'{'
		//		('name' name=ID)?
		//		('visibility' visibility=VisibilityKind)?
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
		//    '}';
		//
		//
		//Class_Impl returns Class:
		//	'Class'
		//	'{'
		//		('name' name=ID)?
		//		('visibility' visibility=VisibilityKind)?
		//
		//		
		//		'isActive' isActive=Boolean
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		//    '}';
		//
		// * /Enumeration:
		//	visibility=VisibilityKind? "enum" name=ID "{" ownedLiteral+=EnumerationLiteral ("," ownedLiteral+=EnumerationLiteral)* //		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		//
		//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "enum" name=ID "{" ownedLiteral+=EnumerationLiteral ("," ownedLiteral+=EnumerationLiteral)* //		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"enum"
		public Keyword getEnumKeyword_1() { return cEnumKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//ownedLiteral+=EnumerationLiteral
		public Assignment getOwnedLiteralAssignment_4() { return cOwnedLiteralAssignment_4; }

		//EnumerationLiteral
		public RuleCall getOwnedLiteralEnumerationLiteralParserRuleCall_4_0() { return cOwnedLiteralEnumerationLiteralParserRuleCall_4_0; }

		//("," ownedLiteral+=EnumerationLiteral)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//ownedLiteral+=EnumerationLiteral
		public Assignment getOwnedLiteralAssignment_5_1() { return cOwnedLiteralAssignment_5_1; }

		//EnumerationLiteral
		public RuleCall getOwnedLiteralEnumerationLiteralParserRuleCall_5_1_0() { return cOwnedLiteralEnumerationLiteralParserRuleCall_5_1_0; }

		////		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EnumerationLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumerationLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumerationLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationValueSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationAssignment_3.eContents().get(0);
		
		////		('visibility' visibility=VisibilityKind)?
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('classifier' '(' classifier+=[Classifier|EString] ( "," classifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?	
		////		('slot' '{' slot+=Slot ( "," slot+=Slot)* '}' )?
		////    '}'
		//EnumerationLiteral:
		//	{EnumerationLiteral} //	'EnumerationLiteral'
		//	//	'{'
		//	name=ID "=" specification=ValueSpecification;
		public ParserRule getRule() { return rule; }

		//{EnumerationLiteral} //	'EnumerationLiteral'
		////	'{'
		//name=ID "=" specification=ValueSpecification
		public Group getGroup() { return cGroup; }

		//{EnumerationLiteral}
		public Action getEnumerationLiteralAction_0() { return cEnumerationLiteralAction_0; }

		////	'EnumerationLiteral'
		////	'{'
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//specification=ValueSpecification
		public Assignment getSpecificationAssignment_3() { return cSpecificationAssignment_3; }

		//ValueSpecification
		public RuleCall getSpecificationValueSpecificationParserRuleCall_3_0() { return cSpecificationValueSpecificationParserRuleCall_3_0; }
	}

	public class InstanceSpecification_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanceSpecification_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInstanceSpecificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cInstanceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClassifierAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cClassifierClassifierCrossReference_4_1_0 = (CrossReference)cClassifierAssignment_4_1.eContents().get(0);
		private final RuleCall cClassifierClassifierIDTerminalRuleCall_4_1_0_1 = (RuleCall)cClassifierClassifierCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cClassifierAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cClassifierClassifierCrossReference_4_2_1_0 = (CrossReference)cClassifierAssignment_4_2_1.eContents().get(0);
		private final RuleCall cClassifierClassifierIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cClassifierClassifierCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSpecificationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSpecificationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSpecificationValueSpecificationParserRuleCall_5_1_0 = (RuleCall)cSpecificationAssignment_5_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cSlotAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cSlotSlotParserRuleCall_7_0_0 = (RuleCall)cSlotAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cCommaKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cSlotAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cSlotSlotParserRuleCall_7_1_1_0 = (RuleCall)cSlotAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/// *
		// * Especifica uma instância
		// * ///OK
		//InstanceSpecification_Impl returns InstanceSpecification:
		//	{InstanceSpecification} visibility=VisibilityKind? "instance" name=ID (":" classifier+=[Classifier] (","
		//	classifier+=[Classifier])*)? ("specification" specification=ValueSpecification)? "{" (slot+=Slot ("," slot+=Slot)*)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//{InstanceSpecification} visibility=VisibilityKind? "instance" name=ID (":" classifier+=[Classifier] (","
		//classifier+=[Classifier])*)? ("specification" specification=ValueSpecification)? "{" (slot+=Slot ("," slot+=Slot)*)?
		//"}"
		public Group getGroup() { return cGroup; }

		//{InstanceSpecification}
		public Action getInstanceSpecificationAction_0() { return cInstanceSpecificationAction_0; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_1_0() { return cVisibilityVisibilityKindEnumRuleCall_1_0; }

		//"instance"
		public Keyword getInstanceKeyword_2() { return cInstanceKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" classifier+=[Classifier] ("," classifier+=[Classifier])*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//classifier+=[Classifier]
		public Assignment getClassifierAssignment_4_1() { return cClassifierAssignment_4_1; }

		//[Classifier]
		public CrossReference getClassifierClassifierCrossReference_4_1_0() { return cClassifierClassifierCrossReference_4_1_0; }

		//ID
		public RuleCall getClassifierClassifierIDTerminalRuleCall_4_1_0_1() { return cClassifierClassifierIDTerminalRuleCall_4_1_0_1; }

		//("," classifier+=[Classifier])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//classifier+=[Classifier]
		public Assignment getClassifierAssignment_4_2_1() { return cClassifierAssignment_4_2_1; }

		//[Classifier]
		public CrossReference getClassifierClassifierCrossReference_4_2_1_0() { return cClassifierClassifierCrossReference_4_2_1_0; }

		//ID
		public RuleCall getClassifierClassifierIDTerminalRuleCall_4_2_1_0_1() { return cClassifierClassifierIDTerminalRuleCall_4_2_1_0_1; }

		//("specification" specification=ValueSpecification)?
		public Group getGroup_5() { return cGroup_5; }

		//"specification"
		public Keyword getSpecificationKeyword_5_0() { return cSpecificationKeyword_5_0; }

		//specification=ValueSpecification
		public Assignment getSpecificationAssignment_5_1() { return cSpecificationAssignment_5_1; }

		//ValueSpecification
		public RuleCall getSpecificationValueSpecificationParserRuleCall_5_1_0() { return cSpecificationValueSpecificationParserRuleCall_5_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//(slot+=Slot ("," slot+=Slot)*)?
		public Group getGroup_7() { return cGroup_7; }

		//slot+=Slot
		public Assignment getSlotAssignment_7_0() { return cSlotAssignment_7_0; }

		//Slot
		public RuleCall getSlotSlotParserRuleCall_7_0_0() { return cSlotSlotParserRuleCall_7_0_0; }

		//("," slot+=Slot)*
		public Group getGroup_7_1() { return cGroup_7_1; }

		//","
		public Keyword getCommaKeyword_7_1_0() { return cCommaKeyword_7_1_0; }

		//slot+=Slot
		public Assignment getSlotAssignment_7_1_1() { return cSlotAssignment_7_1_1; }

		//Slot
		public RuleCall getSlotSlotParserRuleCall_7_1_1_0() { return cSlotSlotParserRuleCall_7_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class SlotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Slot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDefiningFeatureAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cDefiningFeatureStructuralFeatureCrossReference_0_0 = (CrossReference)cDefiningFeatureAssignment_0.eContents().get(0);
		private final RuleCall cDefiningFeatureStructuralFeatureSTRINGTerminalRuleCall_0_0_1 = (RuleCall)cDefiningFeatureStructuralFeatureCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueValueSpecificationParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueSpecificationParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cValueAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cValueValueSpecificationParserRuleCall_2_1_2_1_0 = (RuleCall)cValueAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		
		////OK
		//Slot:
		//	definingFeature=[StructuralFeature|STRING] "=>" (value+=ValueSpecification | "[" value+=ValueSpecification (","
		//	value+=ValueSpecification)* "]");
		public ParserRule getRule() { return rule; }

		//definingFeature=[StructuralFeature|STRING] "=>" (value+=ValueSpecification | "[" value+=ValueSpecification (","
		//value+=ValueSpecification)* "]")
		public Group getGroup() { return cGroup; }

		//definingFeature=[StructuralFeature|STRING]
		public Assignment getDefiningFeatureAssignment_0() { return cDefiningFeatureAssignment_0; }

		//[StructuralFeature|STRING]
		public CrossReference getDefiningFeatureStructuralFeatureCrossReference_0_0() { return cDefiningFeatureStructuralFeatureCrossReference_0_0; }

		//STRING
		public RuleCall getDefiningFeatureStructuralFeatureSTRINGTerminalRuleCall_0_0_1() { return cDefiningFeatureStructuralFeatureSTRINGTerminalRuleCall_0_0_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//value+=ValueSpecification | "[" value+=ValueSpecification ("," value+=ValueSpecification)* "]"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//value+=ValueSpecification
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//ValueSpecification
		public RuleCall getValueValueSpecificationParserRuleCall_2_0_0() { return cValueValueSpecificationParserRuleCall_2_0_0; }

		//"[" value+=ValueSpecification ("," value+=ValueSpecification)* "]"
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_1_0() { return cLeftSquareBracketKeyword_2_1_0; }

		//value+=ValueSpecification
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }

		//ValueSpecification
		public RuleCall getValueValueSpecificationParserRuleCall_2_1_1_0() { return cValueValueSpecificationParserRuleCall_2_1_1_0; }

		//("," value+=ValueSpecification)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//value+=ValueSpecification
		public Assignment getValueAssignment_2_1_2_1() { return cValueAssignment_2_1_2_1; }

		//ValueSpecification
		public RuleCall getValueValueSpecificationParserRuleCall_2_1_2_1_0() { return cValueValueSpecificationParserRuleCall_2_1_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_1_3() { return cRightSquareBracketKeyword_2_1_3; }
	}

	public class InstanceValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanceValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cInstanceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_3_1_0_1 = (RuleCall)cTypeTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cInstanceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cInstanceInstanceSpecificationCrossReference_4_0 = (CrossReference)cInstanceAssignment_4.eContents().get(0);
		private final RuleCall cInstanceInstanceSpecificationIDTerminalRuleCall_4_0_1 = (RuleCall)cInstanceInstanceSpecificationCrossReference_4_0.eContents().get(1);
		
		////InstanceValue
		/// *
		// * Refere-se a uma instânca como um valor
		// *
		// * private instance reinaldinho (Person)
		// * ///OK
		//InstanceValue:
		//	visibility=VisibilityKind? "instance" name=ID? ("(" type=[Type] ")")? instance=[InstanceSpecification];
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "instance" name=ID? ("(" type=[Type] ")")? instance=[InstanceSpecification]
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"instance"
		public Keyword getInstanceKeyword_1() { return cInstanceKeyword_1; }

		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" type=[Type] ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//type=[Type]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_3_1_0() { return cTypeTypeCrossReference_3_1_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_3_1_0_1() { return cTypeTypeIDTerminalRuleCall_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }

		//instance=[InstanceSpecification]
		public Assignment getInstanceAssignment_4() { return cInstanceAssignment_4; }

		//[InstanceSpecification]
		public CrossReference getInstanceInstanceSpecificationCrossReference_4_0() { return cInstanceInstanceSpecificationCrossReference_4_0; }

		//ID
		public RuleCall getInstanceInstanceSpecificationIDTerminalRuleCall_4_0_1() { return cInstanceInstanceSpecificationIDTerminalRuleCall_4_0_1; }
	}

	public class LiteralIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralInteger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralIntegerAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		////Um UnlimitedNatural pode ser reduzido a um INT assim como um LiteralInteger
		////Por isso tá dando ambiguidade na gramática??? Mas ainda assim está funcionando.
		//LiteralInteger:
		//	{LiteralInteger} value=INT;
		public ParserRule getRule() { return rule; }

		//{LiteralInteger} value=INT
		public Group getGroup() { return cGroup; }

		//{LiteralInteger}
		public Action getLiteralIntegerAction_0() { return cLiteralIntegerAction_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }
	}

	public class LiteralStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//LiteralString:
		//	{LiteralString} value=STRING;
		public ParserRule getRule() { return rule; }

		//{LiteralString} value=STRING
		public Group getGroup() { return cGroup; }

		//{LiteralString}
		public Action getLiteralStringAction_0() { return cLiteralStringAction_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class LiteralBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralBoolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralBooleanAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueBooleanParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//LiteralBoolean:
		//	{LiteralBoolean} value=Boolean;
		public ParserRule getRule() { return rule; }

		//{LiteralBoolean} value=Boolean
		public Group getGroup() { return cGroup; }

		//{LiteralBoolean}
		public Action getLiteralBooleanAction_0() { return cLiteralBooleanAction_0; }

		//value=Boolean
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//Boolean
		public RuleCall getValueBooleanParserRuleCall_1_0() { return cValueBooleanParserRuleCall_1_0; }
	}

	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class LiteralUnlimitedNaturalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralUnlimitedNatural");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueUnlimitedNaturalValueParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		////Acho que não precisa
		////EBoolean returns ecore::EBoolean:
		////	'true' | 'false';
		//LiteralUnlimitedNatural:
		//	value=UnlimitedNaturalValue | value=INT;
		public ParserRule getRule() { return rule; }

		//value=UnlimitedNaturalValue | value=INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//value=UnlimitedNaturalValue
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//UnlimitedNaturalValue
		public RuleCall getValueUnlimitedNaturalValueParserRuleCall_0_0() { return cValueUnlimitedNaturalValueParserRuleCall_0_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }
	}

	public class UnlimitedNaturalValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnlimitedNaturalValue");
		private final Keyword cAsteriskKeyword = (Keyword)rule.eContents().get(1);
		
		//UnlimitedNaturalValue returns / *ecore::EInt* / ecore::EIntegerObject: // | INT
		//	"*";
		public ParserRule getRule() { return rule; }

		//// | INT
		//"*"
		public Keyword getAsteriskKeyword() { return cAsteriskKeyword; }
	}

	public class LiteralNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralNull");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralNullAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNULLKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		////Tentar um ValueConverter??
		//LiteralNull:
		//	{LiteralNull} "NULL";
		public ParserRule getRule() { return rule; }

		//{LiteralNull} "NULL"
		public Group getGroup() { return cGroup; }

		//{LiteralNull}
		public Action getLiteralNullAction_0() { return cLiteralNullAction_0; }

		//"NULL"
		public Keyword getNULLKeyword_1() { return cNULLKeyword_1; }
	}

	public class SubKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubKind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cIsActiveAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsActiveActiveKeyword_1_0 = (Keyword)cIsActiveAssignment_1.eContents().get(0);
		private final Keyword cSubkindKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0 = (RuleCall)cOwnedAttributeAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * ONTOUML
		// * /SubKind:
		//	visibility=VisibilityKind? isActive?="active"? "subkind" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? "}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? isActive?="active"? "subkind" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? "}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isActive?="active"?
		public Assignment getIsActiveAssignment_1() { return cIsActiveAssignment_1; }

		//"active"
		public Keyword getIsActiveActiveKeyword_1_0() { return cIsActiveActiveKeyword_1_0; }

		//"subkind"
		public Keyword getSubkindKeyword_2() { return cSubkindKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)?
		public Group getGroup_6() { return cGroup_6; }

		//"attributes:"
		public Keyword getAttributesKeyword_6_0() { return cAttributesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_6_2() { return cOwnedAttributeAssignment_6_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class KindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Kind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cKindKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0 = (RuleCall)cOwnedAttributeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Kind:
		//	visibility=VisibilityKind? "kind" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //
		//	//		
		//	//		'isActive' isActive=Boolean
		//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "kind" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //
		////		
		////		'isActive' isActive=Boolean
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"kind"
		public Keyword getKindKeyword_1() { return cKindKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"attributes:"
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_5_2() { return cOwnedAttributeAssignment_5_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		////
		////		
		////		'isActive' isActive=Boolean
		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class QuantityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Quantity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cIsActiveAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsActiveActiveKeyword_1_0 = (Keyword)cIsActiveAssignment_1.eContents().get(0);
		private final Keyword cQuantityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Quantity:
		//	visibility=VisibilityKind? isActive?="active"? "quantity" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" / *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? isActive?="active"? "quantity" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" / *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isActive?="active"?
		public Assignment getIsActiveAssignment_1() { return cIsActiveAssignment_1; }

		//"active"
		public Keyword getIsActiveActiveKeyword_1_0() { return cIsActiveActiveKeyword_1_0; }

		//"quantity"
		public Keyword getQuantityKeyword_2() { return cQuantityKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		/// *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class CollectiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Collective");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cIsExtensionalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsExtensionalExtensionalKeyword_1_0 = (Keyword)cIsExtensionalAssignment_1.eContents().get(0);
		private final Keyword cCollectiveKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Collective:
		//	visibility=VisibilityKind? isExtensional?="extensional"? "collective" name=ID (":"
		//	generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{" / *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? isExtensional?="extensional"? "collective" name=ID (":" generalization+=InlineGeneralization
		//("," generalization+=InlineGeneralization)*)? "{" / *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isExtensional?="extensional"?
		public Assignment getIsExtensionalAssignment_1() { return cIsExtensionalAssignment_1; }

		//"extensional"
		public Keyword getIsExtensionalExtensionalKeyword_1_0() { return cIsExtensionalExtensionalKeyword_1_0; }

		//"collective"
		public Keyword getCollectiveKeyword_2() { return cCollectiveKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		/// *
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		// * /"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class PhaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Phase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cPhaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Phase:
		//	visibility=VisibilityKind? "phase" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "phase" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		////		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"phase"
		public Keyword getPhaseKeyword_1() { return cPhaseKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		////		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cRoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0 = (RuleCall)cOwnedAttributeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Role:
		//	visibility=VisibilityKind? "role" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "role" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"role"
		public Keyword getRoleKeyword_1() { return cRoleKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"attributes:"
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_5_2() { return cOwnedAttributeAssignment_5_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Category");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_1_0 = (Keyword)cIsAbstractAssignment_1.eContents().get(0);
		private final Keyword cCategoryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOwnedAttributeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0 = (RuleCall)cOwnedAttributeAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cOwnedAttributeAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_3_1_0 = (RuleCall)cOwnedAttributeAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////superClass
		////generalization
		//Category:
		//	visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//	"abstract" "category" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		//	"{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	("ownedAttribute" "{" ownedAttribute+=InlinePropertyDefinition ("," ownedAttribute+=InlinePropertyDefinition)* "}")?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract" "category" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		//"{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//("ownedAttribute" "{" ownedAttribute+=InlinePropertyDefinition ("," ownedAttribute+=InlinePropertyDefinition)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract"
		public Assignment getIsAbstractAssignment_1() { return cIsAbstractAssignment_1; }

		////Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract"
		public Keyword getIsAbstractAbstractKeyword_1_0() { return cIsAbstractAbstractKeyword_1_0; }

		//"category"
		public Keyword getCategoryKeyword_2() { return cCategoryKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//("ownedAttribute" "{" ownedAttribute+=InlinePropertyDefinition ("," ownedAttribute+=InlinePropertyDefinition)* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"ownedAttribute"
		public Keyword getOwnedAttributeKeyword_6_0() { return cOwnedAttributeKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//ownedAttribute+=InlinePropertyDefinition
		public Assignment getOwnedAttributeAssignment_6_2() { return cOwnedAttributeAssignment_6_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0; }

		//("," ownedAttribute+=InlinePropertyDefinition)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//ownedAttribute+=InlinePropertyDefinition
		public Assignment getOwnedAttributeAssignment_6_3_1() { return cOwnedAttributeAssignment_6_3_1; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_3_1_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RoleMixinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoleMixin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cRoleMixinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0 = (RuleCall)cOwnedAttributeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RoleMixin:
		//	visibility=VisibilityKind? "roleMixin" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "roleMixin" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"roleMixin"
		public Keyword getRoleMixinKeyword_1() { return cRoleMixinKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"attributes:"
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_5_2() { return cOwnedAttributeAssignment_5_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class MixinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mixin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_1_0 = (Keyword)cIsAbstractAssignment_1.eContents().get(0);
		private final Keyword cMixinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_1_0 = (RuleCall)cGeneralizationAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0 = (RuleCall)cGeneralizationAssignment_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0 = (RuleCall)cOwnedAttributeAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Mixin:
		//	visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//	"abstract" "mixin" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
		//	("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract" "mixin" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract"
		public Assignment getIsAbstractAssignment_1() { return cIsAbstractAssignment_1; }

		////Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
		//"abstract"
		public Keyword getIsAbstractAbstractKeyword_1_0() { return cIsAbstractAbstractKeyword_1_0; }

		//"mixin"
		public Keyword getMixinKeyword_2() { return cMixinKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_1() { return cGeneralizationAssignment_4_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_4_2_1() { return cGeneralizationAssignment_4_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"attributes:"
		public Keyword getAttributesKeyword_6_0() { return cAttributesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_6_2() { return cOwnedAttributeAssignment_6_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cModeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0 = (RuleCall)cOwnedAttributeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Mode:
		//	visibility=VisibilityKind? "mode" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "mode" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"mode"
		public Keyword getModeKeyword_1() { return cModeKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"attributes:"
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_5_2() { return cOwnedAttributeAssignment_5_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class RelatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Relator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cRelatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOwnedAttributeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0 = (RuleCall)cOwnedAttributeAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Relator:
		//	visibility=VisibilityKind? "relator" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//	"}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "relator" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"relator"
		public Keyword getRelatorKeyword_1() { return cRelatorKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"attributes:"
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//ownedAttribute+=InlinePropertyDefinition*
		public Assignment getOwnedAttributeAssignment_5_2() { return cOwnedAttributeAssignment_5_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0() { return cOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		////		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		////		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class CharacterizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Characterization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityKindEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cCharacterizationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_1_0 = (RuleCall)cGeneralizationAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cGeneralizationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0 = (RuleCall)cGeneralizationAssignment_3_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cMemberEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMemberEndAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cMemberEndPropertyCrossReference_7_0 = (CrossReference)cMemberEndAssignment_7.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_7_0_1 = (RuleCall)cMemberEndPropertyCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMemberEndAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cMemberEndPropertyCrossReference_8_1_0 = (CrossReference)cMemberEndAssignment_8_1.eContents().get(0);
		private final RuleCall cMemberEndPropertyIDTerminalRuleCall_8_1_0_1 = (RuleCall)cMemberEndPropertyCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNavigableOwnedEndKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cNavigableOwnedEndAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_10_2_0 = (CrossReference)cNavigableOwnedEndAssignment_10_2.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_10_2_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_10_2_0.eContents().get(1);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cNavigableOwnedEndAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final CrossReference cNavigableOwnedEndPropertyCrossReference_10_3_1_0 = (CrossReference)cNavigableOwnedEndAssignment_10_3_1.eContents().get(0);
		private final RuleCall cNavigableOwnedEndPropertyIDTerminalRuleCall_10_3_1_0_1 = (RuleCall)cNavigableOwnedEndPropertyCrossReference_10_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cOwnedEndKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cOwnedEndAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_11_2_0 = (RuleCall)cOwnedEndAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cOwnedEndAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cOwnedEndInlinePropertyDefinitionParserRuleCall_11_3_1_0 = (RuleCall)cOwnedEndAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		/// *
		//
		//subQuantityOf returns subQuantityOf:
		//	'subQuantityOf' name=ID
		//	'{'
		//		('visibility' visibility=VisibilityKind)?
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
		//    '}';
		//
		//subCollectionOf returns subCollectionOf:
		//	'subCollectionOf' name=ID
		//	'{'
		//		('visibility' visibility=VisibilityKind)?
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
		//    '}';
		//
		//memberOf returns memberOf:
		//	'memberOf'
		//	'{'
		//		('name' name=ID)?
		//		('visibility' visibility=VisibilityKind)?
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
		//    '}';
		//
		//componentOf returns componentOf:
		//	'componentOf'
		//	'{'
		//		('name' name=ID)?
		//		('visibility' visibility=VisibilityKind)?
		//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//		
		//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
		//    '}';
		//
		// * /Characterization:
		//	visibility=VisibilityKind? "Characterization" name=ID (":" generalization+=InlineGeneralization (","
		//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//	"memberEnd" "(" memberEnd+=[Property] ("," memberEnd+=[Property])* ")" ("navigableOwnedEnd" "("
		//	navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ")")? //('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//	//		
		//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//	("ownedEnd" "{" ownedEnd+=InlinePropertyDefinition ("," ownedEnd+=InlinePropertyDefinition)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//visibility=VisibilityKind? "Characterization" name=ID (":" generalization+=InlineGeneralization (","
		//generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//"memberEnd" "(" memberEnd+=[Property] ("," memberEnd+=[Property])* ")" ("navigableOwnedEnd" "("
		//navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ")")? //('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		////		
		////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		//("ownedEnd" "{" ownedEnd+=InlinePropertyDefinition ("," ownedEnd+=InlinePropertyDefinition)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//visibility=VisibilityKind?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//VisibilityKind
		public RuleCall getVisibilityVisibilityKindEnumRuleCall_0_0() { return cVisibilityVisibilityKindEnumRuleCall_0_0; }

		//"Characterization"
		public Keyword getCharacterizationKeyword_1() { return cCharacterizationKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_1() { return cGeneralizationAssignment_3_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_1_0; }

		//("," generalization+=InlineGeneralization)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//generalization+=InlineGeneralization
		public Assignment getGeneralizationAssignment_3_2_1() { return cGeneralizationAssignment_3_2_1; }

		//InlineGeneralization
		public RuleCall getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0() { return cGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		////		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		////		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//"memberEnd"
		public Keyword getMemberEndKeyword_5() { return cMemberEndKeyword_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_7() { return cMemberEndAssignment_7; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_7_0() { return cMemberEndPropertyCrossReference_7_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_7_0_1() { return cMemberEndPropertyIDTerminalRuleCall_7_0_1; }

		//("," memberEnd+=[Property])*
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//memberEnd+=[Property]
		public Assignment getMemberEndAssignment_8_1() { return cMemberEndAssignment_8_1; }

		//[Property]
		public CrossReference getMemberEndPropertyCrossReference_8_1_0() { return cMemberEndPropertyCrossReference_8_1_0; }

		//ID
		public RuleCall getMemberEndPropertyIDTerminalRuleCall_8_1_0_1() { return cMemberEndPropertyIDTerminalRuleCall_8_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }

		//("navigableOwnedEnd" "(" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ")")?
		public Group getGroup_10() { return cGroup_10; }

		//"navigableOwnedEnd"
		public Keyword getNavigableOwnedEndKeyword_10_0() { return cNavigableOwnedEndKeyword_10_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_10_1() { return cLeftParenthesisKeyword_10_1; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_10_2() { return cNavigableOwnedEndAssignment_10_2; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_10_2_0() { return cNavigableOwnedEndPropertyCrossReference_10_2_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_10_2_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_10_2_0_1; }

		//("," navigableOwnedEnd+=[Property])*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//navigableOwnedEnd+=[Property]
		public Assignment getNavigableOwnedEndAssignment_10_3_1() { return cNavigableOwnedEndAssignment_10_3_1; }

		//[Property]
		public CrossReference getNavigableOwnedEndPropertyCrossReference_10_3_1_0() { return cNavigableOwnedEndPropertyCrossReference_10_3_1_0; }

		//ID
		public RuleCall getNavigableOwnedEndPropertyIDTerminalRuleCall_10_3_1_0_1() { return cNavigableOwnedEndPropertyIDTerminalRuleCall_10_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10_4() { return cRightParenthesisKeyword_10_4; }

		//("ownedEnd" "{" ownedEnd+=InlinePropertyDefinition ("," ownedEnd+=InlinePropertyDefinition)* "}")?
		public Group getGroup_11() { return cGroup_11; }

		//"ownedEnd"
		public Keyword getOwnedEndKeyword_11_0() { return cOwnedEndKeyword_11_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_11_2() { return cOwnedEndAssignment_11_2; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_11_2_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_11_2_0; }

		//("," ownedEnd+=InlinePropertyDefinition)*
		public Group getGroup_11_3() { return cGroup_11_3; }

		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }

		//ownedEnd+=InlinePropertyDefinition
		public Assignment getOwnedEndAssignment_11_3_1() { return cOwnedEndAssignment_11_3_1; }

		//InlinePropertyDefinition
		public RuleCall getOwnedEndInlinePropertyDefinitionParserRuleCall_11_3_1_0() { return cOwnedEndInlinePropertyDefinitionParserRuleCall_11_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	
	
	public class AggregationKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AggregationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSharedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSharedSharedKeyword_1_0 = (Keyword)cSharedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCompositeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCompositeCompositeKeyword_2_0 = (Keyword)cCompositeEnumLiteralDeclaration_2.eContents().get(0);
		
		////terminal WORD: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
		////Lista de Enumerações
		//enum AggregationKind:
		//	none | shared | composite;
		public EnumRule getRule() { return rule; }

		//none | shared | composite
		public Alternatives getAlternatives() { return cAlternatives; }

		//none
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }

		//"none"
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }

		//shared
		public EnumLiteralDeclaration getSharedEnumLiteralDeclaration_1() { return cSharedEnumLiteralDeclaration_1; }

		//"shared"
		public Keyword getSharedSharedKeyword_1_0() { return cSharedSharedKeyword_1_0; }

		//composite
		public EnumLiteralDeclaration getCompositeEnumLiteralDeclaration_2() { return cCompositeEnumLiteralDeclaration_2; }

		//"composite"
		public Keyword getCompositeCompositeKeyword_2_0() { return cCompositeCompositeKeyword_2_0; }
	}

	public class VisibilityKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "VisibilityKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPackagePackageKeyword_3_0 = (Keyword)cPackageEnumLiteralDeclaration_3.eContents().get(0);
		
		/// *
		//EClassifier returns ecore::EClassifier:
		//	EClass | EDataType_Impl | EEnum;
		//
		//EStructuralFeature returns ecore::EStructuralFeature:
		//	EAttribute | EReference;
		//
		//EAnnotation returns ecore::EAnnotation:
		//	{ecore::EAnnotation}
		//	'EAnnotation'
		//	'{'
		//		('source' source=EString)?
		//		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('details' '{' details+=EStringToStringMapEntry ( "," details+=EStringToStringMapEntry)* '}' )?
		//		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
		//    '}';
		//
		////SL_COMMENT | ML_COMMENT
		//Comment returns Comment:
		//	{Comment}
		//	'Comment'
		//	'{'
		//		('body' body=STRING)?
		//		('annotatedElement' '(' annotatedElement+=[Element|EString] ( "," annotatedElement+=[Element|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//    '}';
		//    
		//EString returns ecore::EString:
		//	STRING | ID;
		//
		//EStringToStringMapEntry returns ecore::EStringToStringMapEntry:
		//	{ecore::EStringToStringMapEntry}
		//	'EStringToStringMapEntry'
		//	'{'
		//		('key' key=EString)?
		//		('value' value=EString)?
		//    '}';
		//
		//EObject_Impl returns ecore::EObject:
		//	{ecore::EObject}
		//	'EObject'
		//;
		//
		//EAttribute returns ecore::EAttribute:
		//	{ecore::EAttribute}
		//	(volatile?='volatile')?
		//	(transient?='transient')?
		//	(unsettable?='unsettable')?
		//	(derived?='derived')?
		//	(iD?='iD')?
		//	'EAttribute'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('changeable' changeable=EBoolean)?
		//		('defaultValueLiteral' defaultValueLiteral=EString)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EClass returns ecore::EClass:
		//	{ecore::EClass}
		//	(abstract?='abstract')?
		//	(interface?='interface')?
		//	'EClass'
		//	name=EString
		//	'{'
		//		('instanceClassName' instanceClassName=EString)?
		//		('instanceTypeName' instanceTypeName=EString)?
		//		('eSuperTypes' '(' eSuperTypes+=[ecore::EClass|EString] ( "," eSuperTypes+=[ecore::EClass|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eOperations' '{' eOperations+=EOperation ( "," eOperations+=EOperation)* '}' )?
		//		('eStructuralFeatures' '{' eStructuralFeatures+=EStructuralFeature ( "," eStructuralFeatures+=EStructuralFeature)* '}' )?
		//		('eGenericSuperTypes' '{' eGenericSuperTypes+=EGenericType ( "," eGenericSuperTypes+=EGenericType)* '}' )?
		//    '}';
		//
		//
		//EDataType_Impl returns ecore::EDataType:
		//	{ecore::EDataType}
		//	'EDataType'
		//	name=ID
		//	'{'
		////		('instanceClassName' instanceClassName=EString)?
		////		('instanceTypeName' instanceTypeName=EString)?
		////		('serializable' serializable=EBoolean)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//    '}';
		//
		//
		//EEnum returns ecore::EEnum:
		//	{ecore::EEnum}
		//	'EEnum'
		//	name=EString
		//	'{'
		//		('instanceClassName' instanceClassName=EString)?
		//		('instanceTypeName' instanceTypeName=EString)?
		//		('serializable' serializable=EBoolean)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eLiterals' '{' eLiterals+=EEnumLiteral ( "," eLiterals+=EEnumLiteral)* '}' )?
		//    '}';
		//
		//EEnumLiteral returns ecore::EEnumLiteral:
		//	{ecore::EEnumLiteral}
		//	'EEnumLiteral'
		//	name=EString
		//	'{'
		//		('value' value=EInt)?
		//		('literal' literal=EString)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//    '}';
		//
		//EFactory returns ecore::EFactory:
		//	{ecore::EFactory}
		//	'EFactory'
		//	'{'
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//    '}';
		//
		//EOperation returns ecore::EOperation:
		//	{ecore::EOperation}
		//	'EOperation'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		('eExceptions' '(' eExceptions+=[ecore::EClassifier|EString] ( "," eExceptions+=[ecore::EClassifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eParameters' '{' eParameters+=EParameter ( "," eParameters+=EParameter)* '}' )?
		//		('eGenericExceptions' '{' eGenericExceptions+=EGenericType ( "," eGenericExceptions+=EGenericType)* '}' )?
		//    '}';
		//
		//EPackage returns ecore::EPackage:
		//	{ecore::EPackage}
		//	'EPackage'
		//	name=EString
		//	'{'
		//		('nsURI' nsURI=EString)?
		//		('nsPrefix' nsPrefix=EString)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eClassifiers' '{' eClassifiers+=EClassifier ( "," eClassifiers+=EClassifier)* '}' )?
		//		('eSubpackages' '{' eSubpackages+=EPackage ( "," eSubpackages+=EPackage)* '}' )?
		//    '}';
		//
		//EParameter returns ecore::EParameter:
		//	{ecore::EParameter}
		//	'EParameter'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EReference returns ecore::EReference:
		//	{ecore::EReference}
		//	(volatile?='volatile')?
		//	(transient?='transient')?
		//	(unsettable?='unsettable')?
		//	(derived?='derived')?
		//	(containment?='containment')?
		//	'EReference'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('changeable' changeable=EBoolean)?
		//		('defaultValueLiteral' defaultValueLiteral=EString)?
		//		('resolveProxies' resolveProxies=EBoolean)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		('eOpposite' eOpposite=[ecore::EReference|EString])?
		//		('eKeys' '(' eKeys+=[ecore::EAttribute|EString] ( "," eKeys+=[ecore::EAttribute|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EGenericType returns ecore::EGenericType:
		//	{ecore::EGenericType}
		//	'EGenericType'
		//	'{'
		//		('eTypeParameter' eTypeParameter=[ecore::ETypeParameter|EString])?
		//		('eClassifier' eClassifier=[ecore::EClassifier|EString])?
		//		('eUpperBound' eUpperBound=EGenericType)?
		//		('eTypeArguments' '{' eTypeArguments+=EGenericType ( "," eTypeArguments+=EGenericType)* '}' )?
		//		('eLowerBound' eLowerBound=EGenericType)?
		//    '}';
		//
		//ETypeParameter returns ecore::ETypeParameter:
		//	{ecore::ETypeParameter}
		//	'ETypeParameter'
		//	name=EString
		//	'{'
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eBounds' '{' eBounds+=EGenericType ( "," eBounds+=EGenericType)* '}' )?
		//    '}';
		//
		//EBoolean returns ecore::EBoolean:
		//	'true' | 'false';
		//
		//EInt returns ecore::EInt:
		//	'-'? INT;
		// * /enum VisibilityKind:
		//	public | private | protected | package;
		public EnumRule getRule() { return rule; }

		/// *
		//EClassifier returns ecore::EClassifier:
		//	EClass | EDataType_Impl | EEnum;
		//
		//EStructuralFeature returns ecore::EStructuralFeature:
		//	EAttribute | EReference;
		//
		//EAnnotation returns ecore::EAnnotation:
		//	{ecore::EAnnotation}
		//	'EAnnotation'
		//	'{'
		//		('source' source=EString)?
		//		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('details' '{' details+=EStringToStringMapEntry ( "," details+=EStringToStringMapEntry)* '}' )?
		//		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
		//    '}';
		//
		////SL_COMMENT | ML_COMMENT
		//Comment returns Comment:
		//	{Comment}
		//	'Comment'
		//	'{'
		//		('body' body=STRING)?
		//		('annotatedElement' '(' annotatedElement+=[Element|EString] ( "," annotatedElement+=[Element|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		//    '}';
		//    
		//EString returns ecore::EString:
		//	STRING | ID;
		//
		//EStringToStringMapEntry returns ecore::EStringToStringMapEntry:
		//	{ecore::EStringToStringMapEntry}
		//	'EStringToStringMapEntry'
		//	'{'
		//		('key' key=EString)?
		//		('value' value=EString)?
		//    '}';
		//
		//EObject_Impl returns ecore::EObject:
		//	{ecore::EObject}
		//	'EObject'
		//;
		//
		//EAttribute returns ecore::EAttribute:
		//	{ecore::EAttribute}
		//	(volatile?='volatile')?
		//	(transient?='transient')?
		//	(unsettable?='unsettable')?
		//	(derived?='derived')?
		//	(iD?='iD')?
		//	'EAttribute'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('changeable' changeable=EBoolean)?
		//		('defaultValueLiteral' defaultValueLiteral=EString)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EClass returns ecore::EClass:
		//	{ecore::EClass}
		//	(abstract?='abstract')?
		//	(interface?='interface')?
		//	'EClass'
		//	name=EString
		//	'{'
		//		('instanceClassName' instanceClassName=EString)?
		//		('instanceTypeName' instanceTypeName=EString)?
		//		('eSuperTypes' '(' eSuperTypes+=[ecore::EClass|EString] ( "," eSuperTypes+=[ecore::EClass|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eOperations' '{' eOperations+=EOperation ( "," eOperations+=EOperation)* '}' )?
		//		('eStructuralFeatures' '{' eStructuralFeatures+=EStructuralFeature ( "," eStructuralFeatures+=EStructuralFeature)* '}' )?
		//		('eGenericSuperTypes' '{' eGenericSuperTypes+=EGenericType ( "," eGenericSuperTypes+=EGenericType)* '}' )?
		//    '}';
		//
		//
		//EDataType_Impl returns ecore::EDataType:
		//	{ecore::EDataType}
		//	'EDataType'
		//	name=ID
		//	'{'
		////		('instanceClassName' instanceClassName=EString)?
		////		('instanceTypeName' instanceTypeName=EString)?
		////		('serializable' serializable=EBoolean)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		////		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//    '}';
		//
		//
		//EEnum returns ecore::EEnum:
		//	{ecore::EEnum}
		//	'EEnum'
		//	name=EString
		//	'{'
		//		('instanceClassName' instanceClassName=EString)?
		//		('instanceTypeName' instanceTypeName=EString)?
		//		('serializable' serializable=EBoolean)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eLiterals' '{' eLiterals+=EEnumLiteral ( "," eLiterals+=EEnumLiteral)* '}' )?
		//    '}';
		//
		//EEnumLiteral returns ecore::EEnumLiteral:
		//	{ecore::EEnumLiteral}
		//	'EEnumLiteral'
		//	name=EString
		//	'{'
		//		('value' value=EInt)?
		//		('literal' literal=EString)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//    '}';
		//
		//EFactory returns ecore::EFactory:
		//	{ecore::EFactory}
		//	'EFactory'
		//	'{'
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//    '}';
		//
		//EOperation returns ecore::EOperation:
		//	{ecore::EOperation}
		//	'EOperation'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		('eExceptions' '(' eExceptions+=[ecore::EClassifier|EString] ( "," eExceptions+=[ecore::EClassifier|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
		//		('eParameters' '{' eParameters+=EParameter ( "," eParameters+=EParameter)* '}' )?
		//		('eGenericExceptions' '{' eGenericExceptions+=EGenericType ( "," eGenericExceptions+=EGenericType)* '}' )?
		//    '}';
		//
		//EPackage returns ecore::EPackage:
		//	{ecore::EPackage}
		//	'EPackage'
		//	name=EString
		//	'{'
		//		('nsURI' nsURI=EString)?
		//		('nsPrefix' nsPrefix=EString)?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eClassifiers' '{' eClassifiers+=EClassifier ( "," eClassifiers+=EClassifier)* '}' )?
		//		('eSubpackages' '{' eSubpackages+=EPackage ( "," eSubpackages+=EPackage)* '}' )?
		//    '}';
		//
		//EParameter returns ecore::EParameter:
		//	{ecore::EParameter}
		//	'EParameter'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EReference returns ecore::EReference:
		//	{ecore::EReference}
		//	(volatile?='volatile')?
		//	(transient?='transient')?
		//	(unsettable?='unsettable')?
		//	(derived?='derived')?
		//	(containment?='containment')?
		//	'EReference'
		//	name=EString
		//	'{'
		//		('ordered' ordered=EBoolean)?
		//		('unique' unique=EBoolean)?
		//		('lowerBound' lowerBound=EInt)?
		//		('upperBound' upperBound=EInt)?
		//		('changeable' changeable=EBoolean)?
		//		('defaultValueLiteral' defaultValueLiteral=EString)?
		//		('resolveProxies' resolveProxies=EBoolean)?
		//		('eType' eType=[ecore::EClassifier|EString])?
		//		('eOpposite' eOpposite=[ecore::EReference|EString])?
		//		('eKeys' '(' eKeys+=[ecore::EAttribute|EString] ( "," eKeys+=[ecore::EAttribute|EString])* ')' )?
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eGenericType' eGenericType=EGenericType)?
		//    '}';
		//
		//EGenericType returns ecore::EGenericType:
		//	{ecore::EGenericType}
		//	'EGenericType'
		//	'{'
		//		('eTypeParameter' eTypeParameter=[ecore::ETypeParameter|EString])?
		//		('eClassifier' eClassifier=[ecore::EClassifier|EString])?
		//		('eUpperBound' eUpperBound=EGenericType)?
		//		('eTypeArguments' '{' eTypeArguments+=EGenericType ( "," eTypeArguments+=EGenericType)* '}' )?
		//		('eLowerBound' eLowerBound=EGenericType)?
		//    '}';
		//
		//ETypeParameter returns ecore::ETypeParameter:
		//	{ecore::ETypeParameter}
		//	'ETypeParameter'
		//	name=EString
		//	'{'
		//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		//		('eBounds' '{' eBounds+=EGenericType ( "," eBounds+=EGenericType)* '}' )?
		//    '}';
		//
		//EBoolean returns ecore::EBoolean:
		//	'true' | 'false';
		//
		//EInt returns ecore::EInt:
		//	'-'? INT;
		// * /public | private | protected | package
		public Alternatives getAlternatives() { return cAlternatives; }

		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }

		//"public"
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }

		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }

		//"private"
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }

		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }

		//"protected"
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }

		//package
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_3() { return cPackageEnumLiteralDeclaration_3; }

		//"package"
		public Keyword getPackagePackageKeyword_3_0() { return cPackagePackageKeyword_3_0; }
	}
	
	private ModelElements pModel;
	private PackageableElementElements pPackageableElement;
	private NonExpressionValueElements pNonExpressionValue;
	private ValueSpecificationElements pValueSpecification;
	private DataType_ImplElements pDataType_Impl;
	private PrimitiveTypeElements pPrimitiveType;
	private DependencyElements pDependency;
	private ElementImportElements pElementImport;
	private PackageImportElements pPackageImport;
	private ConstraintxElements pConstraintx;
	private PackageMergeElements pPackageMerge;
	private Package_ImplElements pPackage_Impl;
	private InlineGeneralizationElements pInlineGeneralization;
	private GeneralizationElements pGeneralization;
	private GeneralizationSetElements pGeneralizationSet;
	private ExpressionSymbolElements pExpressionSymbol;
	private ExpressionValueElements pExpressionValue;
	private OpaqueExpressionElements pOpaqueExpression;
	private LINEElements pLINE;
	private InlinePropertyDefinitionElements pInlinePropertyDefinition;
	private MediationElements pMediation;
	private DerivationElements pDerivation;
	private MaterialAssociationElements pMaterialAssociation;
	private FormalAssociationElements pFormalAssociation;
	private EnumerationElements pEnumeration;
	private EnumerationLiteralElements pEnumerationLiteral;
	private InstanceSpecification_ImplElements pInstanceSpecification_Impl;
	private SlotElements pSlot;
	private InstanceValueElements pInstanceValue;
	private LiteralIntegerElements pLiteralInteger;
	private LiteralStringElements pLiteralString;
	private LiteralBooleanElements pLiteralBoolean;
	private BooleanElements pBoolean;
	private LiteralUnlimitedNaturalElements pLiteralUnlimitedNatural;
	private UnlimitedNaturalValueElements pUnlimitedNaturalValue;
	private LiteralNullElements pLiteralNull;
	private SubKindElements pSubKind;
	private KindElements pKind;
	private QuantityElements pQuantity;
	private CollectiveElements pCollective;
	private PhaseElements pPhase;
	private RoleElements pRole;
	private CategoryElements pCategory;
	private RoleMixinElements pRoleMixin;
	private MixinElements pMixin;
	private ModeElements pMode;
	private RelatorElements pRelator;
	private CharacterizationElements pCharacterization;
	private TerminalRule tRWS;
	private TerminalRule tNL;
	private TerminalRule tWS;
	private AggregationKindElements unknownRuleAggregationKind;
	private VisibilityKindElements unknownRuleVisibilityKind;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslOntoUMLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	/// *
	// DECISÕES
	// 
	// - LiteralUnlimitedNatural é apenas o * (unlimited). Qualquer INT é IntegerLiteral
	// - OpaqueExpression o que vai dentro do body não tem como possuir comentários, nem manter o registro de NLs. Cada membro de body é uma linha do corpo.
	//   Isso é uma restrição do xText que pra facilitar as coisas, ignora os tokens de comentários, NL e espaços
	// * ///Elemento Raiz (Regra S? - inicial)
	//Model:
	//	{Model} visibility=VisibilityKind? "model" name=ID ("viewpoint" viewpoint=STRING)? "{" //('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//
	//	//('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//('packageMerge' '{' packageMerge+=PackageMerge ( "," packageMerge+=PackageMerge)* '}' )?
	//	packagedElement+=PackageableElement* "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	////Regras de Herança para tipos que (deveriam ser) abstratos
	////Talvez elas sejam inúteis, uma vez que o metamodelo Ecore não será gerado a partir dessa gramática
	////	| Quantity | Collective | Category | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization
	//PackageableElement: //	Association_Impl | GeneralizationSet
	////	Class_Impl | Model | Enumeration | EnumerationLiteral | PrimitiveType
	////	| StringExpression | Expression_Impl | OpaqueExpression | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural //(ACHO que não precisa, só se forem named)
	//	Dependency | Constraintx | Package_Impl | GeneralizationSet | DataType_Impl | InstanceSpecification_Impl | SubKind |
	//	Kind | Phase | Role | RoleMixin | Mixin | Mode | Relator | Characterization | Mediation | Derivation |
	//	FormalAssociation | MaterialAssociation | Category | Collective | Quantity;
	public PackageableElementElements getPackageableElementAccess() {
		return (pPackageableElement != null) ? pPackageableElement : (pPackageableElement = new PackageableElementElements());
	}
	
	public ParserRule getPackageableElementRule() {
		return getPackageableElementAccess().getRule();
	}

	//NonExpressionValue returns ValueSpecification:
	//	LiteralInteger | LiteralString | LiteralNull | LiteralBoolean | InstanceValue | OpaqueExpression;
	public NonExpressionValueElements getNonExpressionValueAccess() {
		return (pNonExpressionValue != null) ? pNonExpressionValue : (pNonExpressionValue = new NonExpressionValueElements());
	}
	
	public ParserRule getNonExpressionValueRule() {
		return getNonExpressionValueAccess().getRule();
	}

	//ValueSpecification: //StringExpression | //O que é iso???
	//	NonExpressionValue | ExpressionValue;
	public ValueSpecificationElements getValueSpecificationAccess() {
		return (pValueSpecification != null) ? pValueSpecification : (pValueSpecification = new ValueSpecificationElements());
	}
	
	public ParserRule getValueSpecificationRule() {
		return getValueSpecificationAccess().getRule();
	}

	////Inútil -> Gerado automaticamente pelo Wizard do xText
	////EObject returns ecore::EObject:
	////	EObject_Impl | EAttribute | EAnnotation | EClass | EDataType_Impl | EEnum | EEnumLiteral | EFactory | EOperation | EPackage | EParameter | EReference | EGenericType | ETypeParameter;
	/// *
	//Element returns Element:
	//	Comment | Package_Impl | Dependency | ElementImport | PackageImport | Constraintx | Association_Impl | Generalization | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | PackageMerge | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | Slot | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
	//
	//NamedElement returns NamedElement:
	//	Package_Impl | Dependency | Constraintx | Association_Impl | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
	//
	//Type returns Type:
	//	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
	//
	//Package returns Package:
	//	Package_Impl | Model;
	//
	//
	//
	//Classifier returns Classifier:
	//	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
	//
	//Association returns Association:
	//	Association_Impl | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;
	//
	//StructuralFeature returns StructuralFeature:
	//	Property;
	//
	//InstanceSpecification returns InstanceSpecification:
	//	InstanceSpecification_Impl | EnumerationLiteral;
	//
	// * /DataType_Impl returns DataType:
	//	visibility=VisibilityKind? "datatype" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	"}")?;
	public DataType_ImplElements getDataType_ImplAccess() {
		return (pDataType_Impl != null) ? pDataType_Impl : (pDataType_Impl = new DataType_ImplElements());
	}
	
	public ParserRule getDataType_ImplRule() {
		return getDataType_ImplAccess().getRule();
	}

	////Mesma coisa que DataType
	//PrimitiveType:
	//	visibility=VisibilityKind? "type" name=ID ("{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	"}")?;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return (pPrimitiveType != null) ? pPrimitiveType : (pPrimitiveType = new PrimitiveTypeElements());
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//Dependency:
	//	{Dependency} visibility=VisibilityKind? "Dependency" name=ID? "{" client+=[NamedElement] ("," client+=[NamedElement])*
	//	"depends on" "(" supplier+=[NamedElement] ("," supplier+=[NamedElement])* ")" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	"}";
	public DependencyElements getDependencyAccess() {
		return (pDependency != null) ? pDependency : (pDependency = new DependencyElements());
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}

	//ElementImport:
	//	visibility=VisibilityKind? "import" importedElement=[PackageableElement|STRING] ("as" alias=ID)? ";";
	public ElementImportElements getElementImportAccess() {
		return (pElementImport != null) ? pElementImport : (pElementImport = new ElementImportElements());
	}
	
	public ParserRule getElementImportRule() {
		return getElementImportAccess().getRule();
	}

	//PackageImport:
	//	visibility=VisibilityKind "import" importedPackage=[Package|STRING] ";";
	public PackageImportElements getPackageImportAccess() {
		return (pPackageImport != null) ? pPackageImport : (pPackageImport = new PackageImportElements());
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}

	//Constraintx:
	//	visibility=VisibilityKind? "constraint" ("(" constrainedElement+=[Element] ("," constrainedElement+=[Element])* ")")?
	//	"{" specification=ValueSpecification "}";
	public ConstraintxElements getConstraintxAccess() {
		return (pConstraintx != null) ? pConstraintx : (pConstraintx = new ConstraintxElements());
	}
	
	public ParserRule getConstraintxRule() {
		return getConstraintxAccess().getRule();
	}

	//PackageMerge:
	//	{PackageMerge} //('PackageMerge')?
	//	mergedPackage=[Package|STRING];
	public PackageMergeElements getPackageMergeAccess() {
		return (pPackageMerge != null) ? pPackageMerge : (pPackageMerge = new PackageMergeElements());
	}
	
	public ParserRule getPackageMergeRule() {
		return getPackageMergeAccess().getRule();
	}

	////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	////		
	////		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	////		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	////		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//Package_Impl returns Package:
	//	{Package} visibility=VisibilityKind? "package" name=ID "{" ("merge" ":" packageMerge+=PackageMerge (","
	//	packageMerge+=PackageMerge)*)? packagedElement+=PackageableElement* "}";
	public Package_ImplElements getPackage_ImplAccess() {
		return (pPackage_Impl != null) ? pPackage_Impl : (pPackage_Impl = new Package_ImplElements());
	}
	
	public ParserRule getPackage_ImplRule() {
		return getPackage_ImplAccess().getRule();
	}

	/// *****************************************************************************
	// * Duvida:
	// * Generalization::generalizationSet é uma collection, por que?
	// ***************************************************************************** /InlineGeneralization returns
	//Generalization:
	//	isSubstitutable?="substitutable"? general=[Classifier] //('(' generalizationSet+=[GeneralizationSet] (',' generalizationSet+=[GeneralizationSet])* ')' )?
	//	("(" generalizationSet+=[GeneralizationSet] ")")?;
	public InlineGeneralizationElements getInlineGeneralizationAccess() {
		return (pInlineGeneralization != null) ? pInlineGeneralization : (pInlineGeneralization = new InlineGeneralizationElements());
	}
	
	public ParserRule getInlineGeneralizationRule() {
		return getInlineGeneralizationAccess().getRule();
	}

	/// *
	// * Problema: Não tem name, como referenciar?
	// * /Generalization: //isSubstitutable?='substitutable'? //Default tá sendo TRUE?
	//	"generalization" "of" general=[Classifier] "as" owner=[Classifier] ";";
	public GeneralizationElements getGeneralizationAccess() {
		return (pGeneralization != null) ? pGeneralization : (pGeneralization = new GeneralizationElements());
	}
	
	public ParserRule getGeneralizationRule() {
		return getGeneralizationAccess().getRule();
	}

	/// *****************************************************************************
	// * Problemas:
	// * GeneralizationSet::generalization é opposite, mas não está sendo definida automaticamente
	// ***************************************************************************** /GeneralizationSet:
	//	visibility=VisibilityKind? (isCovering?="complete"? & isDisjoint?="disjoint"?) "generalizationSet" name=ID "{" //		generalization+=[Generalization]* //TODO: Como referenciar?
	//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	"}";
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return (pGeneralizationSet != null) ? pGeneralizationSet : (pGeneralizationSet = new GeneralizationSetElements());
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}

	////Um operador (+, -, >, <)
	//ExpressionSymbol returns ecore::EString:
	//	ID | ANY_OTHER+;
	public ExpressionSymbolElements getExpressionSymbolAccess() {
		return (pExpressionSymbol != null) ? pExpressionSymbol : (pExpressionSymbol = new ExpressionSymbolElements());
	}
	
	public ParserRule getExpressionSymbolRule() {
		return getExpressionSymbolAccess().getRule();
	}

	/// *
	// *
	// * (100 + 100 - 200)
	// * media {10, 20, 30}
	// * not 100
	// * ///TODO: resolver o left-recursion
	////	'Expression'
	////		('name' name=ID)?
	////		('visibility' visibility=VisibilityKind)?
	////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	////		('type' type=[Type|EString])?
	////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//ExpressionValue returns Expression:
	//	{Expression} "(" (operand+=ValueSpecification symbol=ExpressionSymbol operand+=ValueSpecification //Se eu tiro o parenteses dá left-recursion 
	//	| symbol=ExpressionSymbol operand+=ValueSpecification | symbol=ExpressionSymbol "{" operand+=ValueSpecification (","
	//	operand+=ValueSpecification)+ "}") ")";
	public ExpressionValueElements getExpressionValueAccess() {
		return (pExpressionValue != null) ? pExpressionValue : (pExpressionValue = new ExpressionValueElements());
	}
	
	public ParserRule getExpressionValueRule() {
		return getExpressionValueAccess().getRule();
	}

	/// *
	//private OpaqueExpression opaqExp1 (Person) : "Python", "Ruby"
	//		begin
	//			# Reinaldo de souza junior
	//			# Reinaldo2
	//		end
	// * ///OK
	//OpaqueExpression:
	//	{OpaqueExpression} visibility=VisibilityKind? "OpaqueExpression" name=ID? ("(" type=[Type] ")")? ":" language+=STRING
	//	("," language+=STRING)* //'begin' body+=OPAQUE_TEXT 'end'
	//	"begin" ("#" body+=LINE)* "end";
	public OpaqueExpressionElements getOpaqueExpressionAccess() {
		return (pOpaqueExpression != null) ? pOpaqueExpression : (pOpaqueExpression = new OpaqueExpressionElements());
	}
	
	public ParserRule getOpaqueExpressionRule() {
		return getOpaqueExpressionAccess().getRule();
	}

	//LINE returns ecore::EString:
	//	(ID | INT | RWS | ANY_OTHER)+;
	public LINEElements getLINEAccess() {
		return (pLINE != null) ? pLINE : (pLINE = new LINEElements());
	}
	
	public ParserRule getLINERule() {
		return getLINEAccess().getRule();
	}

	////OPAQUE_TEXT returns ecore::EString:
	////	LINE (NL LINE)*
	////;
	////+ -> concatena
	////% -> interpola
	////StringExpressionSymbol returns ecore::EString:
	////	'+' | '%'
	////	;
	////Isso seria uma expressão Terminal?
	////Se eu substituir o primeiro operand+=ValueSpecification por operand+=TerminalStringExpression funcionaria sem left-recursion
	////TerminalStringExpression returns StringExpression:
	////	operand+=LiteralString
	////	;
	////WTF is a StringExpression?
	////Devo usar subExpresion, symbol, subExpression
	////ou devo usar operand, symbol, operand (de Expression)
	////Aqui eu definiria quais as operações poderiam ser realizadas com STRINGs? 
	/// *
	//StringExpression returns StringExpression:
	//	{StringExpression}
	//	//"Reinaldo" + " Junior"
	//	('(' //Se eu tirar o parenteses eu vou ter uma chamada recursiva à esquerda, o que não pode no ANTLR
	//		operand+=ValueSpecification
	//		symbol='+'
	//		operand+=ValueSpecification
	//	')')
	//	//("Reinaldo %1 conheçe %2? %3" % "Junior", instancia_maria.nome, true)
	//	| ('('
	//		operand+=ValueSpecification
	//		symbol='%'
	//		operand+=ValueSpecification (',' operand+=ValueSpecification )?
	//	')')
	//// //Seria como uma operação, apenas
	////	|
	////	('('
	////		operand+=StringExpression
	////		symbol=StringExpressionSymbol
	////		operand+=ValueSpecification
	////	')')
	//    ;
	// * ///PropertyBound returns ecore::EIntegerObject: // datatype rule handled by a value converter
	////PropertyBound returns ecore::EIntegerObject: // datatype rule handled by a value converter
	////    '*' | INT;
	/// *****************************************************************************
	// * property nome (TipoNome)
	// * property amigos [2, 3] (TipoNome)
	// *****************************************************************************
	// * Problemas:
	// * Property::association é opposite, mas não está sendo definida automaticamente
	// ***************************************************************************** ///ATENTION: Ao mudar, mude também o de baixo
	//InlinePropertyDefinition returns Property:
	//	{Property} visibility=VisibilityKind? "property" ("<" (isStatic?="static"? & isOrdered?="ordered"? &
	//	isUnique?="unique"? & isReadOnly?="read-only"? & isDerivedUnion?="derived-union"?) ">")? name=ID? //Cardinalidade tá dando problema porque o Roberto usa umas convenções malucas...
	//	//EM Multiplicity Element
	//	//upper (derived)-> upperBound (derived)-> upperValue
	//	//lower (derived)-> lowerBound (derived)-> lowerValue
	//	//Quando eu insiro tô recebendo um problema com uma restrição:
	//	//The 'ClassAttributeConstraint1' constraint is violated on 'RefOntoUML.impl.KindImpl@564389b7{platform:/resource/primeiro/agora.ouml#//@packagedElement.1}'
	//	//Class::ClassAttributeConstraint1 é:
	//	//ownedAttribute->forAll( x | x.lower >= 1 )
	//	//Com ('cardinality' '[' lowerValue=ValueSpecification ',' upperValue=ValueSpecification ']')?	//Original era esse
	//	//lower tá ficando vazio...
	//	//Mudei para
	//	("[" lowerValue=LiteralInteger "," upperValue=LiteralUnlimitedNatural "]")? //E alterei o valor do UnlimitedNatural=* para 0 (era -1). Com isso o erro mudou para
	//	//The 'LowerAndUpperBound' constraint is violated on 'RefOntoUML.impl.PropertyImpl@1412504b{platform:/resource/primeiro/agora.ouml#//@packagedElement.1/@ownedAttribute.1}'
	//	"(" type=[Type] ")" ("{" ("defaults to" defaultValue=ValueSpecification)? ("aggregation" aggregation=AggregationKind)?
	//	("subset of" "(" subsettedProperty+=[Property] ("," subsettedProperty+=[Property])* ")")? ("redefines" "("
	//	redefinedProperty+=[Property] ("," redefinedProperty+=[Property])* ")")? "}")?;
	public InlinePropertyDefinitionElements getInlinePropertyDefinitionAccess() {
		return (pInlinePropertyDefinition != null) ? pInlinePropertyDefinition : (pInlinePropertyDefinition = new InlinePropertyDefinitionElements());
	}
	
	public ParserRule getInlinePropertyDefinitionRule() {
		return getInlinePropertyDefinitionAccess().getRule();
	}

	/// *
	////Igual a propriedade
	////relation maisVelhoQue(Pessoa) //FormalAssociation entre Pessoa e Pessoa
	////relation casadoCom(Pessoa) throught contratoDeCasamento //MaterialAssociation
	//
	//Relation returns Property:
	//	(visibility=VisibilityKind)?
	//	'relation'
	//	('('
	//	 (isStatic?='static' & isOrdered?='ordered' & isUnique?='unique' & isReadOnly?='read-only' & isDerivedUnion?='derived-union')
	//	 ')'
	//	)?
	//	name=ID
	////	('[' upperValue=ValueSpecification ',' lowerValue=ValueSpecification ']')?
	//	':' type=[Type]
	////	('default=' defaultValue=ValueSpecification)?
	//
	////?
	////	'->' association=[Association|ID]
	////	owningAssociation+=[Association]
	////	owningAssociation=[Association] //oposite -> ownedEnd
	//	association=[Association] //oposite -> memberEnd
	//
	//	('{'
	//		('aggregation' aggregation=AggregationKind)?
	//		('subset of' '(' subsettedProperty+=[Property|STRING] ( "," subsettedProperty+=[Property|STRING])* ')' )?
	//		('redefines' '(' redefinedProperty+=[Property|STRING] ( "," redefinedProperty+=[Property|STRING])* ')' )?
	//
	////		
	////Opposite em Dependency, não precisa definir
	////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//    '}')?
	//;
	// * // *
	//
	// *** Associations ***
	//
	//2) (Carraretto, 2010, p.70).
	//
	//- memberEnd:
	//Todas as Classes (na verdade, Properties) que estão sendo relacionadas em uma Association ficam em 'memberEnd'.
	//
	//- ownedEnd:
	//Algumas dessas Classes (na verdade, Properties) ficam sob posse da Association, essas Classes são referenciadas por 'ownedEnd'. Tradicionalmente, todas as Classes (na verdade, Properties) ficam sob posse da Association. Mas é possível em UML fazer a Class ser dona da Property, ao invés da Association. A sintaxe concreta é um "ponto" entre a linha da association e a classe. 99% das vezes owned possui as mesmas Properties que memberEnd.
	//
	//- navigableOwnedEnd:
	//Algumas dessas Classes (na verdade, Properties) que a Association tem posse são navegáveis. Tradicionalmente, uma Association é navegável em todos os sentidos, até que você fale o contrário. A sintaxe concreta é uma "seta" entre a linha da Association e a Class. 70% das vezes navigableOwnedEnd possui as mesmas Properties de ownedEnd.
	//
	//- endType:
	//Igual memberEnd, mas ao invés de retornar Properties retorna Classes. É uma relação derived.
	//self.memberEnd->collect(e | e.type)
	// * // *
	// *
	// * ownedMember vs ownedElement (derivada)
	// * endType (derivada)
	//
	//mediation M1 {
	//	Person : property <unique> p1[1,1] (Person)
	//	Animal : property <read-only> p2[1,1] (Animal)
	//}
	// * /Mediation:
	//	{Mediation} visibility=VisibilityKind? "mediation" name=ID? (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":"
	//	memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
	//	navigableOwnedEnd+=[Property])* ";")?) "}";
	public MediationElements getMediationAccess() {
		return (pMediation != null) ? pMediation : (pMediation = new MediationElements());
	}
	
	public ParserRule getMediationRule() {
		return getMediationAccess().getRule();
	}

	//Derivation:
	//	visibility=VisibilityKind? (isDerived?="derived"? & isAbstract?="abstract"? & isLeaf?="leaf"?) "derivation" name=ID?
	//	(":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{" "material:"
	//	(ownedEnd+=InlinePropertyDefinition ";") "relator:" (ownedEnd+=InlinePropertyDefinition ";") (("memberEnd" ":"
	//	memberEnd+=[Property] ("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
	//	navigableOwnedEnd+=[Property])* ";")?) "}";
	public DerivationElements getDerivationAccess() {
		return (pDerivation != null) ? pDerivation : (pDerivation = new DerivationElements());
	}
	
	public ParserRule getDerivationRule() {
		return getDerivationAccess().getRule();
	}

	/// *
	// *
	// * public property casadoCom (Pessoa) throught contratoDeCasamento //MaterialAssociation
	// * OCL: Precisa de um Derivation cujo memberEnd[1] = MaterialAssociation
	// * /MaterialAssociation:
	//	{MaterialAssociation} visibility=VisibilityKind? //Derived é OBRIGATORIO
	//	(isDerived?="derived" & isAbstract?="abstract"? & isLeaf?="leaf"?) "materialAssociation" name=ID? (":"
	//	generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
	//	((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property] ("," memberEnd+=[Property])* ";")?
	//	& ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ";")?) "}";
	public MaterialAssociationElements getMaterialAssociationAccess() {
		return (pMaterialAssociation != null) ? pMaterialAssociation : (pMaterialAssociation = new MaterialAssociationElements());
	}
	
	public ParserRule getMaterialAssociationRule() {
		return getMaterialAssociationAccess().getRule();
	}

	////public property maisVelhoQue (Pessoa) //FormalAssociation entre Pessoa e Pessoa
	//FormalAssociation:
	//	{FormalAssociation} visibility=VisibilityKind? (isAbstract?="abstract"? & isDerived?="derived"? & isLeaf?="leaf"?)
	//	"formalAssociation" name=ID? "{" ((ownedEnd+=InlinePropertyDefinition ";")+ & ("memberEnd" ":" memberEnd+=[Property]
	//	("," memberEnd+=[Property])* ";")? & ("navigableOwnedEnd" ":" navigableOwnedEnd+=[Property] (","
	//	navigableOwnedEnd+=[Property])* ";")?) "}";
	public FormalAssociationElements getFormalAssociationAccess() {
		return (pFormalAssociation != null) ? pFormalAssociation : (pFormalAssociation = new FormalAssociationElements());
	}
	
	public ParserRule getFormalAssociationRule() {
		return getFormalAssociationAccess().getRule();
	}

	/// * 
	//Association_Impl returns Association:
	//	'Association'
	//	'{'
	//		('name' name=ID)?
	//		('visibility' visibility=VisibilityKind)?
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
	//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
	//    '}';
	//
	//
	//Class_Impl returns Class:
	//	'Class'
	//	'{'
	//		('name' name=ID)?
	//		('visibility' visibility=VisibilityKind)?
	//
	//		
	//		'isActive' isActive=Boolean
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
	//    '}';
	//
	// * /Enumeration:
	//	visibility=VisibilityKind? "enum" name=ID "{" ownedLiteral+=EnumerationLiteral ("," ownedLiteral+=EnumerationLiteral)* //		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
	//
	//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	"}";
	public EnumerationElements getEnumerationAccess() {
		return (pEnumeration != null) ? pEnumeration : (pEnumeration = new EnumerationElements());
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}

	////		('visibility' visibility=VisibilityKind)?
	////		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	////		('classifier' '(' classifier+=[Classifier|EString] ( "," classifier+=[Classifier|EString])* ')' )?
	////('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	////		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?	
	////		('slot' '{' slot+=Slot ( "," slot+=Slot)* '}' )?
	////    '}'
	//EnumerationLiteral:
	//	{EnumerationLiteral} //	'EnumerationLiteral'
	//	//	'{'
	//	name=ID "=" specification=ValueSpecification;
	public EnumerationLiteralElements getEnumerationLiteralAccess() {
		return (pEnumerationLiteral != null) ? pEnumerationLiteral : (pEnumerationLiteral = new EnumerationLiteralElements());
	}
	
	public ParserRule getEnumerationLiteralRule() {
		return getEnumerationLiteralAccess().getRule();
	}

	/// *
	// * Especifica uma instância
	// * ///OK
	//InstanceSpecification_Impl returns InstanceSpecification:
	//	{InstanceSpecification} visibility=VisibilityKind? "instance" name=ID (":" classifier+=[Classifier] (","
	//	classifier+=[Classifier])*)? ("specification" specification=ValueSpecification)? "{" (slot+=Slot ("," slot+=Slot)*)?
	//	"}";
	public InstanceSpecification_ImplElements getInstanceSpecification_ImplAccess() {
		return (pInstanceSpecification_Impl != null) ? pInstanceSpecification_Impl : (pInstanceSpecification_Impl = new InstanceSpecification_ImplElements());
	}
	
	public ParserRule getInstanceSpecification_ImplRule() {
		return getInstanceSpecification_ImplAccess().getRule();
	}

	////OK
	//Slot:
	//	definingFeature=[StructuralFeature|STRING] "=>" (value+=ValueSpecification | "[" value+=ValueSpecification (","
	//	value+=ValueSpecification)* "]");
	public SlotElements getSlotAccess() {
		return (pSlot != null) ? pSlot : (pSlot = new SlotElements());
	}
	
	public ParserRule getSlotRule() {
		return getSlotAccess().getRule();
	}

	////InstanceValue
	/// *
	// * Refere-se a uma instânca como um valor
	// *
	// * private instance reinaldinho (Person)
	// * ///OK
	//InstanceValue:
	//	visibility=VisibilityKind? "instance" name=ID? ("(" type=[Type] ")")? instance=[InstanceSpecification];
	public InstanceValueElements getInstanceValueAccess() {
		return (pInstanceValue != null) ? pInstanceValue : (pInstanceValue = new InstanceValueElements());
	}
	
	public ParserRule getInstanceValueRule() {
		return getInstanceValueAccess().getRule();
	}

	////Um UnlimitedNatural pode ser reduzido a um INT assim como um LiteralInteger
	////Por isso tá dando ambiguidade na gramática??? Mas ainda assim está funcionando.
	//LiteralInteger:
	//	{LiteralInteger} value=INT;
	public LiteralIntegerElements getLiteralIntegerAccess() {
		return (pLiteralInteger != null) ? pLiteralInteger : (pLiteralInteger = new LiteralIntegerElements());
	}
	
	public ParserRule getLiteralIntegerRule() {
		return getLiteralIntegerAccess().getRule();
	}

	//LiteralString:
	//	{LiteralString} value=STRING;
	public LiteralStringElements getLiteralStringAccess() {
		return (pLiteralString != null) ? pLiteralString : (pLiteralString = new LiteralStringElements());
	}
	
	public ParserRule getLiteralStringRule() {
		return getLiteralStringAccess().getRule();
	}

	//LiteralBoolean:
	//	{LiteralBoolean} value=Boolean;
	public LiteralBooleanElements getLiteralBooleanAccess() {
		return (pLiteralBoolean != null) ? pLiteralBoolean : (pLiteralBoolean = new LiteralBooleanElements());
	}
	
	public ParserRule getLiteralBooleanRule() {
		return getLiteralBooleanAccess().getRule();
	}

	//Boolean returns ecore::EBoolean:
	//	"true" | "false";
	public BooleanElements getBooleanAccess() {
		return (pBoolean != null) ? pBoolean : (pBoolean = new BooleanElements());
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}

	////Acho que não precisa
	////EBoolean returns ecore::EBoolean:
	////	'true' | 'false';
	//LiteralUnlimitedNatural:
	//	value=UnlimitedNaturalValue | value=INT;
	public LiteralUnlimitedNaturalElements getLiteralUnlimitedNaturalAccess() {
		return (pLiteralUnlimitedNatural != null) ? pLiteralUnlimitedNatural : (pLiteralUnlimitedNatural = new LiteralUnlimitedNaturalElements());
	}
	
	public ParserRule getLiteralUnlimitedNaturalRule() {
		return getLiteralUnlimitedNaturalAccess().getRule();
	}

	//UnlimitedNaturalValue returns / *ecore::EInt* / ecore::EIntegerObject: // | INT
	//	"*";
	public UnlimitedNaturalValueElements getUnlimitedNaturalValueAccess() {
		return (pUnlimitedNaturalValue != null) ? pUnlimitedNaturalValue : (pUnlimitedNaturalValue = new UnlimitedNaturalValueElements());
	}
	
	public ParserRule getUnlimitedNaturalValueRule() {
		return getUnlimitedNaturalValueAccess().getRule();
	}

	////Tentar um ValueConverter??
	//LiteralNull:
	//	{LiteralNull} "NULL";
	public LiteralNullElements getLiteralNullAccess() {
		return (pLiteralNull != null) ? pLiteralNull : (pLiteralNull = new LiteralNullElements());
	}
	
	public ParserRule getLiteralNullRule() {
		return getLiteralNullAccess().getRule();
	}

	/// *
	// * ONTOUML
	// * /SubKind:
	//	visibility=VisibilityKind? isActive?="active"? "subkind" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	("attributes:" "{" ownedAttribute+=InlinePropertyDefinition*)? "}";
	public SubKindElements getSubKindAccess() {
		return (pSubKind != null) ? pSubKind : (pSubKind = new SubKindElements());
	}
	
	public ParserRule getSubKindRule() {
		return getSubKindAccess().getRule();
	}

	//Kind:
	//	visibility=VisibilityKind? "kind" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //
	//	//		
	//	//		'isActive' isActive=Boolean
	//	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public KindElements getKindAccess() {
		return (pKind != null) ? pKind : (pKind = new KindElements());
	}
	
	public ParserRule getKindRule() {
		return getKindAccess().getRule();
	}

	//Quantity:
	//	visibility=VisibilityKind? isActive?="active"? "quantity" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" / *
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
	// * /"}";
	public QuantityElements getQuantityAccess() {
		return (pQuantity != null) ? pQuantity : (pQuantity = new QuantityElements());
	}
	
	public ParserRule getQuantityRule() {
		return getQuantityAccess().getRule();
	}

	//Collective:
	//	visibility=VisibilityKind? isExtensional?="extensional"? "collective" name=ID (":"
	//	generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{" / *
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
	// * /"}";
	public CollectiveElements getCollectiveAccess() {
		return (pCollective != null) ? pCollective : (pCollective = new CollectiveElements());
	}
	
	public ParserRule getCollectiveRule() {
		return getCollectiveAccess().getRule();
	}

	//Phase:
	//	visibility=VisibilityKind? "phase" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	//		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
	//	"}";
	public PhaseElements getPhaseAccess() {
		return (pPhase != null) ? pPhase : (pPhase = new PhaseElements());
	}
	
	public ParserRule getPhaseRule() {
		return getPhaseAccess().getRule();
	}

	//Role:
	//	visibility=VisibilityKind? "role" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public RoleElements getRoleAccess() {
		return (pRole != null) ? pRole : (pRole = new RoleElements());
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	////superClass
	////generalization
	//Category:
	//	visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
	//	"abstract" "category" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)?
	//	"{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	("ownedAttribute" "{" ownedAttribute+=InlinePropertyDefinition ("," ownedAttribute+=InlinePropertyDefinition)* "}")?
	//	"}";
	public CategoryElements getCategoryAccess() {
		return (pCategory != null) ? pCategory : (pCategory = new CategoryElements());
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}

	//RoleMixin:
	//	visibility=VisibilityKind? "roleMixin" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public RoleMixinElements getRoleMixinAccess() {
		return (pRoleMixin != null) ? pRoleMixin : (pRoleMixin = new RoleMixinElements());
	}
	
	public ParserRule getRoleMixinRule() {
		return getRoleMixinAccess().getRule();
	}

	//Mixin:
	//	visibility=VisibilityKind? isAbstract?= //Precisa sempre ser abstract: MixinClassConstraint2. Essa constraint, não poderia ser isABstract != false? (pois assim, abstract null seria válida)
	//	"abstract" "mixin" name=ID (":" generalization+=InlineGeneralization ("," generalization+=InlineGeneralization)*)? "{"
	//	("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public MixinElements getMixinAccess() {
		return (pMixin != null) ? pMixin : (pMixin = new MixinElements());
	}
	
	public ParserRule getMixinRule() {
		return getMixinAccess().getRule();
	}

	//Mode:
	//	visibility=VisibilityKind? "mode" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public ModeElements getModeAccess() {
		return (pMode != null) ? pMode : (pMode = new ModeElements());
	}
	
	public ParserRule getModeRule() {
		return getModeAccess().getRule();
	}

	//Relator:
	//	visibility=VisibilityKind? "relator" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" ("attributes:" "{" ownedAttribute+=InlinePropertyDefinition* "}")? //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//	//		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
	//	"}";
	public RelatorElements getRelatorAccess() {
		return (pRelator != null) ? pRelator : (pRelator = new RelatorElements());
	}
	
	public ParserRule getRelatorRule() {
		return getRelatorAccess().getRule();
	}

	/// *
	//
	//subQuantityOf returns subQuantityOf:
	//	'subQuantityOf' name=ID
	//	'{'
	//		('visibility' visibility=VisibilityKind)?
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
	//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
	//    '}';
	//
	//subCollectionOf returns subCollectionOf:
	//	'subCollectionOf' name=ID
	//	'{'
	//		('visibility' visibility=VisibilityKind)?
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
	//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
	//    '}';
	//
	//memberOf returns memberOf:
	//	'memberOf'
	//	'{'
	//		('name' name=ID)?
	//		('visibility' visibility=VisibilityKind)?
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
	//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
	//    '}';
	//
	//componentOf returns componentOf:
	//	'componentOf'
	//	'{'
	//		('name' name=ID)?
	//		('visibility' visibility=VisibilityKind)?
	//		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
	//		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//		
	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
	//		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
	//    '}';
	//
	// * /Characterization:
	//	visibility=VisibilityKind? "Characterization" name=ID (":" generalization+=InlineGeneralization (","
	//	generalization+=InlineGeneralization)*)? "{" //		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
	//	//		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
	//	//		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
	//	"memberEnd" "(" memberEnd+=[Property] ("," memberEnd+=[Property])* ")" ("navigableOwnedEnd" "("
	//	navigableOwnedEnd+=[Property] ("," navigableOwnedEnd+=[Property])* ")")? //('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//	//		
	//	//		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
	//	//		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
	//	//		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
	//	("ownedEnd" "{" ownedEnd+=InlinePropertyDefinition ("," ownedEnd+=InlinePropertyDefinition)* "}")? "}";
	public CharacterizationElements getCharacterizationAccess() {
		return (pCharacterization != null) ? pCharacterization : (pCharacterization = new CharacterizationElements());
	}
	
	public ParserRule getCharacterizationRule() {
		return getCharacterizationAccess().getRule();
	}

	////Terminals
	////RWS -> Real White Space (fiz isso porque os terminais padrão do xText não diferenciam WhiteSpace de New-Line
	//terminal RWS:
	//	(" " | "\t")+;
	public TerminalRule getRWSRule() {
		return (tRWS != null) ? tRWS : (tRWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RWS"));
	} 

	//terminal NL:
	//	("\r" | "\n")+;
	public TerminalRule getNLRule() {
		return (tNL != null) ? tNL : (tNL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NL"));
	} 

	//terminal WS:
	//	(RWS | NL)+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	////terminal WORD: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
	////Lista de Enumerações
	//enum AggregationKind:
	//	none | shared | composite;
	public AggregationKindElements getAggregationKindAccess() {
		return (unknownRuleAggregationKind != null) ? unknownRuleAggregationKind : (unknownRuleAggregationKind = new AggregationKindElements());
	}
	
	public EnumRule getAggregationKindRule() {
		return getAggregationKindAccess().getRule();
	}

	/// *
	//EClassifier returns ecore::EClassifier:
	//	EClass | EDataType_Impl | EEnum;
	//
	//EStructuralFeature returns ecore::EStructuralFeature:
	//	EAttribute | EReference;
	//
	//EAnnotation returns ecore::EAnnotation:
	//	{ecore::EAnnotation}
	//	'EAnnotation'
	//	'{'
	//		('source' source=EString)?
	//		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('details' '{' details+=EStringToStringMapEntry ( "," details+=EStringToStringMapEntry)* '}' )?
	//		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
	//    '}';
	//
	////SL_COMMENT | ML_COMMENT
	//Comment returns Comment:
	//	{Comment}
	//	'Comment'
	//	'{'
	//		('body' body=STRING)?
	//		('annotatedElement' '(' annotatedElement+=[Element|EString] ( "," annotatedElement+=[Element|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
	//    '}';
	//    
	//EString returns ecore::EString:
	//	STRING | ID;
	//
	//EStringToStringMapEntry returns ecore::EStringToStringMapEntry:
	//	{ecore::EStringToStringMapEntry}
	//	'EStringToStringMapEntry'
	//	'{'
	//		('key' key=EString)?
	//		('value' value=EString)?
	//    '}';
	//
	//EObject_Impl returns ecore::EObject:
	//	{ecore::EObject}
	//	'EObject'
	//;
	//
	//EAttribute returns ecore::EAttribute:
	//	{ecore::EAttribute}
	//	(volatile?='volatile')?
	//	(transient?='transient')?
	//	(unsettable?='unsettable')?
	//	(derived?='derived')?
	//	(iD?='iD')?
	//	'EAttribute'
	//	name=EString
	//	'{'
	//		('ordered' ordered=EBoolean)?
	//		('unique' unique=EBoolean)?
	//		('lowerBound' lowerBound=EInt)?
	//		('upperBound' upperBound=EInt)?
	//		('changeable' changeable=EBoolean)?
	//		('defaultValueLiteral' defaultValueLiteral=EString)?
	//		('eType' eType=[ecore::EClassifier|EString])?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eGenericType' eGenericType=EGenericType)?
	//    '}';
	//
	//EClass returns ecore::EClass:
	//	{ecore::EClass}
	//	(abstract?='abstract')?
	//	(interface?='interface')?
	//	'EClass'
	//	name=EString
	//	'{'
	//		('instanceClassName' instanceClassName=EString)?
	//		('instanceTypeName' instanceTypeName=EString)?
	//		('eSuperTypes' '(' eSuperTypes+=[ecore::EClass|EString] ( "," eSuperTypes+=[ecore::EClass|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
	//		('eOperations' '{' eOperations+=EOperation ( "," eOperations+=EOperation)* '}' )?
	//		('eStructuralFeatures' '{' eStructuralFeatures+=EStructuralFeature ( "," eStructuralFeatures+=EStructuralFeature)* '}' )?
	//		('eGenericSuperTypes' '{' eGenericSuperTypes+=EGenericType ( "," eGenericSuperTypes+=EGenericType)* '}' )?
	//    '}';
	//
	//
	//EDataType_Impl returns ecore::EDataType:
	//	{ecore::EDataType}
	//	'EDataType'
	//	name=ID
	//	'{'
	////		('instanceClassName' instanceClassName=EString)?
	////		('instanceTypeName' instanceTypeName=EString)?
	////		('serializable' serializable=EBoolean)?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	////		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
	//    '}';
	//
	//
	//EEnum returns ecore::EEnum:
	//	{ecore::EEnum}
	//	'EEnum'
	//	name=EString
	//	'{'
	//		('instanceClassName' instanceClassName=EString)?
	//		('instanceTypeName' instanceTypeName=EString)?
	//		('serializable' serializable=EBoolean)?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
	//		('eLiterals' '{' eLiterals+=EEnumLiteral ( "," eLiterals+=EEnumLiteral)* '}' )?
	//    '}';
	//
	//EEnumLiteral returns ecore::EEnumLiteral:
	//	{ecore::EEnumLiteral}
	//	'EEnumLiteral'
	//	name=EString
	//	'{'
	//		('value' value=EInt)?
	//		('literal' literal=EString)?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//    '}';
	//
	//EFactory returns ecore::EFactory:
	//	{ecore::EFactory}
	//	'EFactory'
	//	'{'
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//    '}';
	//
	//EOperation returns ecore::EOperation:
	//	{ecore::EOperation}
	//	'EOperation'
	//	name=EString
	//	'{'
	//		('ordered' ordered=EBoolean)?
	//		('unique' unique=EBoolean)?
	//		('lowerBound' lowerBound=EInt)?
	//		('upperBound' upperBound=EInt)?
	//		('eType' eType=[ecore::EClassifier|EString])?
	//		('eExceptions' '(' eExceptions+=[ecore::EClassifier|EString] ( "," eExceptions+=[ecore::EClassifier|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eGenericType' eGenericType=EGenericType)?
	//		('eTypeParameters' '{' eTypeParameters+=ETypeParameter ( "," eTypeParameters+=ETypeParameter)* '}' )?
	//		('eParameters' '{' eParameters+=EParameter ( "," eParameters+=EParameter)* '}' )?
	//		('eGenericExceptions' '{' eGenericExceptions+=EGenericType ( "," eGenericExceptions+=EGenericType)* '}' )?
	//    '}';
	//
	//EPackage returns ecore::EPackage:
	//	{ecore::EPackage}
	//	'EPackage'
	//	name=EString
	//	'{'
	//		('nsURI' nsURI=EString)?
	//		('nsPrefix' nsPrefix=EString)?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eClassifiers' '{' eClassifiers+=EClassifier ( "," eClassifiers+=EClassifier)* '}' )?
	//		('eSubpackages' '{' eSubpackages+=EPackage ( "," eSubpackages+=EPackage)* '}' )?
	//    '}';
	//
	//EParameter returns ecore::EParameter:
	//	{ecore::EParameter}
	//	'EParameter'
	//	name=EString
	//	'{'
	//		('ordered' ordered=EBoolean)?
	//		('unique' unique=EBoolean)?
	//		('lowerBound' lowerBound=EInt)?
	//		('upperBound' upperBound=EInt)?
	//		('eType' eType=[ecore::EClassifier|EString])?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eGenericType' eGenericType=EGenericType)?
	//    '}';
	//
	//EReference returns ecore::EReference:
	//	{ecore::EReference}
	//	(volatile?='volatile')?
	//	(transient?='transient')?
	//	(unsettable?='unsettable')?
	//	(derived?='derived')?
	//	(containment?='containment')?
	//	'EReference'
	//	name=EString
	//	'{'
	//		('ordered' ordered=EBoolean)?
	//		('unique' unique=EBoolean)?
	//		('lowerBound' lowerBound=EInt)?
	//		('upperBound' upperBound=EInt)?
	//		('changeable' changeable=EBoolean)?
	//		('defaultValueLiteral' defaultValueLiteral=EString)?
	//		('resolveProxies' resolveProxies=EBoolean)?
	//		('eType' eType=[ecore::EClassifier|EString])?
	//		('eOpposite' eOpposite=[ecore::EReference|EString])?
	//		('eKeys' '(' eKeys+=[ecore::EAttribute|EString] ( "," eKeys+=[ecore::EAttribute|EString])* ')' )?
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eGenericType' eGenericType=EGenericType)?
	//    '}';
	//
	//EGenericType returns ecore::EGenericType:
	//	{ecore::EGenericType}
	//	'EGenericType'
	//	'{'
	//		('eTypeParameter' eTypeParameter=[ecore::ETypeParameter|EString])?
	//		('eClassifier' eClassifier=[ecore::EClassifier|EString])?
	//		('eUpperBound' eUpperBound=EGenericType)?
	//		('eTypeArguments' '{' eTypeArguments+=EGenericType ( "," eTypeArguments+=EGenericType)* '}' )?
	//		('eLowerBound' eLowerBound=EGenericType)?
	//    '}';
	//
	//ETypeParameter returns ecore::ETypeParameter:
	//	{ecore::ETypeParameter}
	//	'ETypeParameter'
	//	name=EString
	//	'{'
	//		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
	//		('eBounds' '{' eBounds+=EGenericType ( "," eBounds+=EGenericType)* '}' )?
	//    '}';
	//
	//EBoolean returns ecore::EBoolean:
	//	'true' | 'false';
	//
	//EInt returns ecore::EInt:
	//	'-'? INT;
	// * /enum VisibilityKind:
	//	public | private | protected | package;
	public VisibilityKindElements getVisibilityKindAccess() {
		return (unknownRuleVisibilityKind != null) ? unknownRuleVisibilityKind : (unknownRuleVisibilityKind = new VisibilityKindElements());
	}
	
	public EnumRule getVisibilityKindRule() {
		return getVisibilityKindAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
