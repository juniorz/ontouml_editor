/*
* generated by Xtext
*/
grammar InternalDslOntoUML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package br.ufes.inf.nemo.ontouml.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufes.inf.nemo.ontouml.dsl.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import br.ufes.inf.nemo.ontouml.dsl.services.DslOntoUMLGrammarAccess;

}

@parser::members {

 	private DslOntoUMLGrammarAccess grammarAccess;
 	
    public InternalDslOntoUMLParser(TokenStream input, IAstFactory factory, DslOntoUMLGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("br/ufes/inf/nemo/ontouml/dsl/parser/antlr/internal/InternalDslOntoUML.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DslOntoUMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelRule(), currentNode); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getModelAccess().getModelAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getModelAccess().getModelAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'model' 
    {
        createLeafNode(grammarAccess.getModelAccess().getModelKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'viewpoint' 
    {
        createLeafNode(grammarAccess.getModelAccess().getViewpointKeyword_4_0(), null); 
    }
(
(
		lv_viewpoint_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getModelAccess().getViewpointSTRINGTerminalRuleCall_4_1_0(), "viewpoint"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"viewpoint",
	        		lv_viewpoint_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelAccess().getPackagedElementPackageableElementParserRuleCall_6_0(), currentNode); 
	    }
		lv_packagedElement_7_0=rulePackageableElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"packagedElement",
	        		lv_packagedElement_7_0, 
	        		"PackageableElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRulePackageableElement
entryRulePackageableElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPackageableElementRule(), currentNode); }
	 iv_rulePackageableElement=rulePackageableElement 
	 { $current=$iv_rulePackageableElement.current; } 
	 EOF 
;

// Rule PackageableElement
rulePackageableElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getDependencyParserRuleCall_0(), currentNode); 
    }
    this_Dependency_0=ruleDependency
    { 
        $current = $this_Dependency_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getConstraintxParserRuleCall_1(), currentNode); 
    }
    this_Constraintx_1=ruleConstraintx
    { 
        $current = $this_Constraintx_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getPackage_ImplParserRuleCall_2(), currentNode); 
    }
    this_Package_Impl_2=rulePackage_Impl
    { 
        $current = $this_Package_Impl_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getGeneralizationSetParserRuleCall_3(), currentNode); 
    }
    this_GeneralizationSet_3=ruleGeneralizationSet
    { 
        $current = $this_GeneralizationSet_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getDataType_ImplParserRuleCall_4(), currentNode); 
    }
    this_DataType_Impl_4=ruleDataType_Impl
    { 
        $current = $this_DataType_Impl_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getInstanceSpecification_ImplParserRuleCall_5(), currentNode); 
    }
    this_InstanceSpecification_Impl_5=ruleInstanceSpecification_Impl
    { 
        $current = $this_InstanceSpecification_Impl_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getSubKindParserRuleCall_6(), currentNode); 
    }
    this_SubKind_6=ruleSubKind
    { 
        $current = $this_SubKind_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getKindParserRuleCall_7(), currentNode); 
    }
    this_Kind_7=ruleKind
    { 
        $current = $this_Kind_7.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getPhaseParserRuleCall_8(), currentNode); 
    }
    this_Phase_8=rulePhase
    { 
        $current = $this_Phase_8.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getRoleParserRuleCall_9(), currentNode); 
    }
    this_Role_9=ruleRole
    { 
        $current = $this_Role_9.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getRoleMixinParserRuleCall_10(), currentNode); 
    }
    this_RoleMixin_10=ruleRoleMixin
    { 
        $current = $this_RoleMixin_10.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getMixinParserRuleCall_11(), currentNode); 
    }
    this_Mixin_11=ruleMixin
    { 
        $current = $this_Mixin_11.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getModeParserRuleCall_12(), currentNode); 
    }
    this_Mode_12=ruleMode
    { 
        $current = $this_Mode_12.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getRelatorParserRuleCall_13(), currentNode); 
    }
    this_Relator_13=ruleRelator
    { 
        $current = $this_Relator_13.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getCharacterizationParserRuleCall_14(), currentNode); 
    }
    this_Characterization_14=ruleCharacterization
    { 
        $current = $this_Characterization_14.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getMediationParserRuleCall_15(), currentNode); 
    }
    this_Mediation_15=ruleMediation
    { 
        $current = $this_Mediation_15.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getDerivationParserRuleCall_16(), currentNode); 
    }
    this_Derivation_16=ruleDerivation
    { 
        $current = $this_Derivation_16.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getFormalAssociationParserRuleCall_17(), currentNode); 
    }
    this_FormalAssociation_17=ruleFormalAssociation
    { 
        $current = $this_FormalAssociation_17.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getMaterialAssociationParserRuleCall_18(), currentNode); 
    }
    this_MaterialAssociation_18=ruleMaterialAssociation
    { 
        $current = $this_MaterialAssociation_18.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getCategoryParserRuleCall_19(), currentNode); 
    }
    this_Category_19=ruleCategory
    { 
        $current = $this_Category_19.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getCollectiveParserRuleCall_20(), currentNode); 
    }
    this_Collective_20=ruleCollective
    { 
        $current = $this_Collective_20.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPackageableElementAccess().getQuantityParserRuleCall_21(), currentNode); 
    }
    this_Quantity_21=ruleQuantity
    { 
        $current = $this_Quantity_21.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNonExpressionValue
entryRuleNonExpressionValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNonExpressionValueRule(), currentNode); }
	 iv_ruleNonExpressionValue=ruleNonExpressionValue 
	 { $current=$iv_ruleNonExpressionValue.current; } 
	 EOF 
;

// Rule NonExpressionValue
ruleNonExpressionValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getLiteralIntegerParserRuleCall_0(), currentNode); 
    }
    this_LiteralInteger_0=ruleLiteralInteger
    { 
        $current = $this_LiteralInteger_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getLiteralStringParserRuleCall_1(), currentNode); 
    }
    this_LiteralString_1=ruleLiteralString
    { 
        $current = $this_LiteralString_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getLiteralNullParserRuleCall_2(), currentNode); 
    }
    this_LiteralNull_2=ruleLiteralNull
    { 
        $current = $this_LiteralNull_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getLiteralBooleanParserRuleCall_3(), currentNode); 
    }
    this_LiteralBoolean_3=ruleLiteralBoolean
    { 
        $current = $this_LiteralBoolean_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getInstanceValueParserRuleCall_4(), currentNode); 
    }
    this_InstanceValue_4=ruleInstanceValue
    { 
        $current = $this_InstanceValue_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNonExpressionValueAccess().getOpaqueExpressionParserRuleCall_5(), currentNode); 
    }
    this_OpaqueExpression_5=ruleOpaqueExpression
    { 
        $current = $this_OpaqueExpression_5.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleValueSpecification
entryRuleValueSpecification returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueSpecificationRule(), currentNode); }
	 iv_ruleValueSpecification=ruleValueSpecification 
	 { $current=$iv_ruleValueSpecification.current; } 
	 EOF 
;

// Rule ValueSpecification
ruleValueSpecification returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getValueSpecificationAccess().getNonExpressionValueParserRuleCall_0(), currentNode); 
    }
    this_NonExpressionValue_0=ruleNonExpressionValue
    { 
        $current = $this_NonExpressionValue_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getValueSpecificationAccess().getExpressionValueParserRuleCall_1(), currentNode); 
    }
    this_ExpressionValue_1=ruleExpressionValue
    { 
        $current = $this_ExpressionValue_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleDataType_Impl
entryRuleDataType_Impl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDataType_ImplRule(), currentNode); }
	 iv_ruleDataType_Impl=ruleDataType_Impl 
	 { $current=$iv_ruleDataType_Impl.current; } 
	 EOF 
;

// Rule DataType_Impl
ruleDataType_Impl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDataType_ImplAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataType_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'datatype' 
    {
        createLeafNode(grammarAccess.getDataType_ImplAccess().getDatatypeKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDataType_ImplAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataType_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'{' 
    {
        createLeafNode(grammarAccess.getDataType_ImplAccess().getLeftCurlyBracketKeyword_3_0(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getDataType_ImplAccess().getAttributesKeyword_3_1_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDataType_ImplAccess().getLeftCurlyBracketKeyword_3_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDataType_ImplAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_3_1_2_0(), currentNode); 
	    }
		lv_ownedAttribute_6_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataType_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_6_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)?	'}' 
    {
        createLeafNode(grammarAccess.getDataType_ImplAccess().getRightCurlyBracketKeyword_3_2(), null); 
    }
)?)
;







// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDependencyRule(), currentNode); }
	 iv_ruleDependency=ruleDependency 
	 { $current=$iv_ruleDependency.current; } 
	 EOF 
;

// Rule Dependency
ruleDependency returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDependencyAccess().getDependencyAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDependencyAccess().getDependencyAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDependencyAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'Dependency' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getDependencyKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDependencyAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDependencyAccess().getClientNamedElementCrossReference_5_0(), "client"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDependencyAccess().getClientNamedElementCrossReference_6_1_0(), "client"); 
	}

)
))*	'depends on' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getDependsOnKeyword_7(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_8(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDependencyAccess().getSupplierNamedElementCrossReference_9_0(), "supplier"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getCommaKeyword_10_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDependencyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDependencyAccess().getSupplierNamedElementCrossReference_10_1_0(), "supplier"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getRightParenthesisKeyword_11(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getDependencyAccess().getRightCurlyBracketKeyword_12(), null); 
    }
)
;









// Entry rule entryRuleConstraintx
entryRuleConstraintx returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstraintxRule(), currentNode); }
	 iv_ruleConstraintx=ruleConstraintx 
	 { $current=$iv_ruleConstraintx.current; } 
	 EOF 
;

// Rule Constraintx
ruleConstraintx returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstraintxAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstraintxRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'constraint' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getConstraintKeyword_1(), null); 
    }
(	'(' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConstraintxRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConstraintxAccess().getConstrainedElementElementCrossReference_2_1_0(), "constrainedElement"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getCommaKeyword_2_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getConstraintxRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getConstraintxAccess().getConstrainedElementElementCrossReference_2_2_1_0(), "constrainedElement"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getRightParenthesisKeyword_2_3(), null); 
    }
)?	'{' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstraintxAccess().getSpecificationValueSpecificationParserRuleCall_4_0(), currentNode); 
	    }
		lv_specification_8_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstraintxRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"specification",
	        		lv_specification_8_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getConstraintxAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRulePackageMerge
entryRulePackageMerge returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPackageMergeRule(), currentNode); }
	 iv_rulePackageMerge=rulePackageMerge 
	 { $current=$iv_rulePackageMerge.current; } 
	 EOF 
;

// Rule PackageMerge
rulePackageMerge returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getPackageMergeAccess().getPackageMergeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPackageMergeAccess().getPackageMergeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPackageMergeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getPackageMergeAccess().getMergedPackagePackageCrossReference_1_0(), "mergedPackage"); 
	}

)
))
;





// Entry rule entryRulePackage_Impl
entryRulePackage_Impl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPackage_ImplRule(), currentNode); }
	 iv_rulePackage_Impl=rulePackage_Impl 
	 { $current=$iv_rulePackage_Impl.current; } 
	 EOF 
;

// Rule Package_Impl
rulePackage_Impl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getPackage_ImplAccess().getPackageAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPackage_ImplAccess().getPackageAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPackage_ImplAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPackage_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'package' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getPackageKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPackage_ImplAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPackage_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'merge' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getMergeKeyword_5_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getColonKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPackage_ImplAccess().getPackageMergePackageMergeParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_packageMerge_7_0=rulePackageMerge		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPackage_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"packageMerge",
	        		lv_packageMerge_7_0, 
	        		"PackageMerge", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getCommaKeyword_5_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPackage_ImplAccess().getPackageMergePackageMergeParserRuleCall_5_3_1_0(), currentNode); 
	    }
		lv_packageMerge_9_0=rulePackageMerge		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPackage_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"packageMerge",
	        		lv_packageMerge_9_0, 
	        		"PackageMerge", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPackage_ImplAccess().getPackagedElementPackageableElementParserRuleCall_6_0(), currentNode); 
	    }
		lv_packagedElement_10_0=rulePackageableElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPackage_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"packagedElement",
	        		lv_packagedElement_10_0, 
	        		"PackageableElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getPackage_ImplAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleInlineGeneralization
entryRuleInlineGeneralization returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInlineGeneralizationRule(), currentNode); }
	 iv_ruleInlineGeneralization=ruleInlineGeneralization 
	 { $current=$iv_ruleInlineGeneralization.current; } 
	 EOF 
;

// Rule InlineGeneralization
ruleInlineGeneralization returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_isSubstitutable_0_0=	'substitutable' 
    {
        createLeafNode(grammarAccess.getInlineGeneralizationAccess().getIsSubstitutableSubstitutableKeyword_0_0(), "isSubstitutable"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlineGeneralizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isSubstitutable", true, "substitutable", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlineGeneralizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlineGeneralizationAccess().getGeneralClassifierCrossReference_1_0(), "general"); 
	}

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getInlineGeneralizationAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlineGeneralizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlineGeneralizationAccess().getGeneralizationSetGeneralizationSetCrossReference_2_1_0(), "generalizationSet"); 
	}

)
)	')' 
    {
        createLeafNode(grammarAccess.getInlineGeneralizationAccess().getRightParenthesisKeyword_2_2(), null); 
    }
)?)
;







// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGeneralizationSetRule(), currentNode); }
	 iv_ruleGeneralizationSet=ruleGeneralizationSet 
	 { $current=$iv_ruleGeneralizationSet.current; } 
	 EOF 
;

// Rule GeneralizationSet
ruleGeneralizationSet returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGeneralizationSetAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGeneralizationSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1(), 0);
	 				}
					(
(
		lv_isCovering_2_0=	'complete' 
    {
        createLeafNode(grammarAccess.getGeneralizationSetAccess().getIsCoveringCompleteKeyword_1_0_0(), "isCovering"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGeneralizationSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isCovering", true, "complete", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1(), 1);
	 				}
					(
(
		lv_isDisjoint_3_0=	'disjoint' 
    {
        createLeafNode(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_1_1_0(), "isDisjoint"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGeneralizationSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isDisjoint", true, "disjoint", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1());
	}

)	'generalizationSet' 
    {
        createLeafNode(grammarAccess.getGeneralizationSetAccess().getGeneralizationSetKeyword_2(), null); 
    }
(
(
		lv_name_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGeneralizationSetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleExpressionSymbol
entryRuleExpressionSymbol returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExpressionSymbolRule(), currentNode); } 
	 iv_ruleExpressionSymbol=ruleExpressionSymbol 
	 { $current=$iv_ruleExpressionSymbol.current.getText(); }  
	 EOF 
;

// Rule ExpressionSymbol
ruleExpressionSymbol returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getExpressionSymbolAccess().getIDTerminalRuleCall_0(), null); 
    }

    |(    this_ANY_OTHER_1=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_1);
    }

    { 
    createLeafNode(grammarAccess.getExpressionSymbolAccess().getANY_OTHERTerminalRuleCall_1(), null); 
    }
)+)
    ;





// Entry rule entryRuleExpressionValue
entryRuleExpressionValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExpressionValueRule(), currentNode); }
	 iv_ruleExpressionValue=ruleExpressionValue 
	 { $current=$iv_ruleExpressionValue.current; } 
	 EOF 
;

// Rule ExpressionValue
ruleExpressionValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getExpressionValueAccess().getExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getExpressionValueAccess().getExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'(' 
    {
        createLeafNode(grammarAccess.getExpressionValueAccess().getLeftParenthesisKeyword_1(), null); 
    }
(((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getOperandValueSpecificationParserRuleCall_2_0_0_0(), currentNode); 
	    }
		lv_operand_2_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operand",
	        		lv_operand_2_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getSymbolExpressionSymbolParserRuleCall_2_0_1_0(), currentNode); 
	    }
		lv_symbol_3_0=ruleExpressionSymbol		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"symbol",
	        		lv_symbol_3_0, 
	        		"ExpressionSymbol", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getOperandValueSpecificationParserRuleCall_2_0_2_0(), currentNode); 
	    }
		lv_operand_4_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operand",
	        		lv_operand_4_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getSymbolExpressionSymbolParserRuleCall_2_1_0_0(), currentNode); 
	    }
		lv_symbol_5_0=ruleExpressionSymbol		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"symbol",
	        		lv_symbol_5_0, 
	        		"ExpressionSymbol", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getOperandValueSpecificationParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_operand_6_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operand",
	        		lv_operand_6_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getSymbolExpressionSymbolParserRuleCall_2_2_0_0(), currentNode); 
	    }
		lv_symbol_7_0=ruleExpressionSymbol		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"symbol",
	        		lv_symbol_7_0, 
	        		"ExpressionSymbol", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getExpressionValueAccess().getLeftCurlyBracketKeyword_2_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getOperandValueSpecificationParserRuleCall_2_2_2_0(), currentNode); 
	    }
		lv_operand_9_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operand",
	        		lv_operand_9_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getExpressionValueAccess().getCommaKeyword_2_2_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getExpressionValueAccess().getOperandValueSpecificationParserRuleCall_2_2_3_1_0(), currentNode); 
	    }
		lv_operand_11_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExpressionValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"operand",
	        		lv_operand_11_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))+	'}' 
    {
        createLeafNode(grammarAccess.getExpressionValueAccess().getRightCurlyBracketKeyword_2_2_4(), null); 
    }
))	')' 
    {
        createLeafNode(grammarAccess.getExpressionValueAccess().getRightParenthesisKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleOpaqueExpression
entryRuleOpaqueExpression returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOpaqueExpressionRule(), currentNode); }
	 iv_ruleOpaqueExpression=ruleOpaqueExpression 
	 { $current=$iv_ruleOpaqueExpression.current; } 
	 EOF 
;

// Rule OpaqueExpression
ruleOpaqueExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getOpaqueExpressionAccess().getOpaqueExpressionAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOpaqueExpressionAccess().getOpaqueExpressionAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOpaqueExpressionAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'OpaqueExpression' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getOpaqueExpressionKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getOpaqueExpressionAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'(' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getLeftParenthesisKeyword_4_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getOpaqueExpressionAccess().getTypeTypeCrossReference_4_1_0(), "type"); 
	}

)
)	')' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getRightParenthesisKeyword_4_2(), null); 
    }
)?	':' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getColonKeyword_5(), null); 
    }
(
(
		lv_language_8_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getOpaqueExpressionAccess().getLanguageSTRINGTerminalRuleCall_6_0(), "language"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"language",
	        		lv_language_8_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getCommaKeyword_7_0(), null); 
    }
(
(
		lv_language_10_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getOpaqueExpressionAccess().getLanguageSTRINGTerminalRuleCall_7_1_0(), "language"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"language",
	        		lv_language_10_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))*	'begin' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getBeginKeyword_8(), null); 
    }
(	'#' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getNumberSignKeyword_9_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOpaqueExpressionAccess().getBodyLINEParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_body_13_0=ruleLINE		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOpaqueExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"body",
	        		lv_body_13_0, 
	        		"LINE", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'end' 
    {
        createLeafNode(grammarAccess.getOpaqueExpressionAccess().getEndKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleLINE
entryRuleLINE returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLINERule(), currentNode); } 
	 iv_ruleLINE=ruleLINE 
	 { $current=$iv_ruleLINE.current.getText(); }  
	 EOF 
;

// Rule LINE
ruleLINE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getLINEAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getLINEAccess().getINTTerminalRuleCall_1(), null); 
    }

    |    this_RWS_2=RULE_RWS    {
		$current.merge(this_RWS_2);
    }

    { 
    createLeafNode(grammarAccess.getLINEAccess().getRWSTerminalRuleCall_2(), null); 
    }

    |    this_ANY_OTHER_3=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_3);
    }

    { 
    createLeafNode(grammarAccess.getLINEAccess().getANY_OTHERTerminalRuleCall_3(), null); 
    }
)+
    ;





// Entry rule entryRuleInlinePropertyDefinition
entryRuleInlinePropertyDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInlinePropertyDefinitionRule(), currentNode); }
	 iv_ruleInlinePropertyDefinition=ruleInlinePropertyDefinition 
	 { $current=$iv_ruleInlinePropertyDefinition.current; } 
	 EOF 
;

// Rule InlinePropertyDefinition
ruleInlinePropertyDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInlinePropertyDefinitionAccess().getPropertyAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getPropertyAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'property' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getPropertyKeyword_2(), null); 
    }
(	'<' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLessThanSignKeyword_3_0(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 0);
	 				}
					(
(
		lv_isStatic_5_0=	'static' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getIsStaticStaticKeyword_3_1_0_0(), "isStatic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isStatic", true, "static", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 1);
	 				}
					(
(
		lv_isOrdered_6_0=	'ordered' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getIsOrderedOrderedKeyword_3_1_1_0(), "isOrdered"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isOrdered", true, "ordered", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 2);
	 				}
					(
(
		lv_isUnique_7_0=	'unique' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getIsUniqueUniqueKeyword_3_1_2_0(), "isUnique"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isUnique", true, "unique", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 3);
	 				}
					(
(
		lv_isReadOnly_8_0=	'read-only' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getIsReadOnlyReadOnlyKeyword_3_1_3_0(), "isReadOnly"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isReadOnly", true, "read-only", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1(), 4);
	 				}
					(
(
		lv_isDerivedUnion_9_0=	'derived-union' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getIsDerivedUnionDerivedUnionKeyword_3_1_4_0(), "isDerivedUnion"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isDerivedUnion", true, "derived-union", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInlinePropertyDefinitionAccess().getUnorderedGroup_3_1());
	}

)	'>' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getGreaterThanSignKeyword_3_2(), null); 
    }
)?(
(
		lv_name_11_0=RULE_ID
		{
			createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_11_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'[' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLeftSquareBracketKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getLowerValueLiteralIntegerParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_lowerValue_13_0=ruleLiteralInteger		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lowerValue",
	        		lv_lowerValue_13_0, 
	        		"LiteralInteger", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getCommaKeyword_5_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getUpperValueLiteralUnlimitedNaturalParserRuleCall_5_3_0(), currentNode); 
	    }
		lv_upperValue_15_0=ruleLiteralUnlimitedNatural		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"upperValue",
	        		lv_upperValue_15_0, 
	        		"LiteralUnlimitedNatural", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRightSquareBracketKeyword_5_4(), null); 
    }
)?	'(' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLeftParenthesisKeyword_6(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getTypeTypeCrossReference_7_0(), "type"); 
	}

)
)	')' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRightParenthesisKeyword_8(), null); 
    }
(	'{' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLeftCurlyBracketKeyword_9_0(), null); 
    }
(	'defaults to' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getDefaultsToKeyword_9_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getDefaultValueValueSpecificationParserRuleCall_9_1_1_0(), currentNode); 
	    }
		lv_defaultValue_22_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultValue",
	        		lv_defaultValue_22_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'aggregation' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getAggregationKeyword_9_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInlinePropertyDefinitionAccess().getAggregationAggregationKindEnumRuleCall_9_2_1_0(), currentNode); 
	    }
		lv_aggregation_24_0=ruleAggregationKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"aggregation",
	        		lv_aggregation_24_0, 
	        		"AggregationKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'subset of' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getSubsetOfKeyword_9_3_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLeftParenthesisKeyword_9_3_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getSubsettedPropertyPropertyCrossReference_9_3_2_0(), "subsettedProperty"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getCommaKeyword_9_3_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getSubsettedPropertyPropertyCrossReference_9_3_3_1_0(), "subsettedProperty"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRightParenthesisKeyword_9_3_4(), null); 
    }
)?(	'redefines' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRedefinesKeyword_9_4_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getLeftParenthesisKeyword_9_4_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRedefinedPropertyPropertyCrossReference_9_4_2_0(), "redefinedProperty"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getCommaKeyword_9_4_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInlinePropertyDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRedefinedPropertyPropertyCrossReference_9_4_3_1_0(), "redefinedProperty"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRightParenthesisKeyword_9_4_4(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getInlinePropertyDefinitionAccess().getRightCurlyBracketKeyword_9_5(), null); 
    }
)?)
;





// Entry rule entryRuleMediation
entryRuleMediation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMediationRule(), currentNode); }
	 iv_ruleMediation=ruleMediation 
	 { $current=$iv_ruleMediation.current; } 
	 EOF 
;

// Rule Mediation
ruleMediation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMediationAccess().getMediationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMediationAccess().getMediationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMediationAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'mediation' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getMediationKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMediationAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	':' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMediationAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMediationAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMediationAccess().getUnorderedGroup_6());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 0);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMediationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0(), currentNode); 
	    }
		lv_ownedEnd_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getSemicolonKeyword_6_0_1(), null); 
    }
)+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMediationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 1);
	 				}
					(	'memberEnd' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getMemberEndKeyword_6_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getColonKeyword_6_1_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMediationAccess().getMemberEndPropertyCrossReference_6_1_2_0(), "memberEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getCommaKeyword_6_1_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMediationAccess().getMemberEndPropertyCrossReference_6_1_3_1_0(), "memberEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getSemicolonKeyword_6_1_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMediationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMediationAccess().getUnorderedGroup_6(), 2);
	 				}
					(	'navigableOwnedEnd' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getNavigableOwnedEndKeyword_6_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getColonKeyword_6_2_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMediationAccess().getNavigableOwnedEndPropertyCrossReference_6_2_2_0(), "navigableOwnedEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getCommaKeyword_6_2_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMediationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMediationAccess().getNavigableOwnedEndPropertyCrossReference_6_2_3_1_0(), "navigableOwnedEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getSemicolonKeyword_6_2_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMediationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getMediationAccess().getUnorderedGroup_6())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMediationAccess().getUnorderedGroup_6());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getMediationAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleDerivation
entryRuleDerivation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDerivationRule(), currentNode); }
	 iv_ruleDerivation=ruleDerivation 
	 { $current=$iv_ruleDerivation.current; } 
	 EOF 
;

// Rule Derivation
ruleDerivation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDerivationAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDerivationAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 0);
	 				}
					(
(
		lv_isDerived_2_0=	'derived' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getIsDerivedDerivedKeyword_1_0_0(), "isDerived"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isDerived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 1);
	 				}
					(
(
		lv_isAbstract_3_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getIsAbstractAbstractKeyword_1_1_0(), "isAbstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isAbstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDerivationAccess().getUnorderedGroup_1(), 2);
	 				}
					(
(
		lv_isLeaf_4_0=	'leaf' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getIsLeafLeafKeyword_1_2_0(), "isLeaf"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isLeaf", true, "leaf", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDerivationAccess().getUnorderedGroup_1());
	}

)	'derivation' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getDerivationKeyword_2(), null); 
    }
(
(
		lv_name_6_0=RULE_ID
		{
			createLeafNode(grammarAccess.getDerivationAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_6_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	':' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDerivationAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_8_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_8_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDerivationAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_10_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_10_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
	'material:' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getMaterialKeyword_6(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDerivationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0(), currentNode); 
	    }
		lv_ownedEnd_13_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_13_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getSemicolonKeyword_7_1(), null); 
    }
)	'relator:' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getRelatorKeyword_8(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDerivationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_9_0_0(), currentNode); 
	    }
		lv_ownedEnd_16_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_16_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getSemicolonKeyword_9_1(), null); 
    }
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDerivationAccess().getUnorderedGroup_10());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAccess().getUnorderedGroup_10(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDerivationAccess().getUnorderedGroup_10(), 0);
	 				}
					(	'memberEnd' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getMemberEndKeyword_10_0_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getColonKeyword_10_0_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDerivationAccess().getMemberEndPropertyCrossReference_10_0_2_0(), "memberEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getCommaKeyword_10_0_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDerivationAccess().getMemberEndPropertyCrossReference_10_0_3_1_0(), "memberEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getSemicolonKeyword_10_0_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAccess().getUnorderedGroup_10());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDerivationAccess().getUnorderedGroup_10(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDerivationAccess().getUnorderedGroup_10(), 1);
	 				}
					(	'navigableOwnedEnd' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getNavigableOwnedEndKeyword_10_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getColonKeyword_10_1_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDerivationAccess().getNavigableOwnedEndPropertyCrossReference_10_1_2_0(), "navigableOwnedEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getCommaKeyword_10_1_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getDerivationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getDerivationAccess().getNavigableOwnedEndPropertyCrossReference_10_1_3_1_0(), "navigableOwnedEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getSemicolonKeyword_10_1_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDerivationAccess().getUnorderedGroup_10());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDerivationAccess().getUnorderedGroup_10());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getDerivationAccess().getRightCurlyBracketKeyword_11(), null); 
    }
)
;





// Entry rule entryRuleMaterialAssociation
entryRuleMaterialAssociation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMaterialAssociationRule(), currentNode); }
	 iv_ruleMaterialAssociation=ruleMaterialAssociation 
	 { $current=$iv_ruleMaterialAssociation.current; } 
	 EOF 
;

// Rule MaterialAssociation
ruleMaterialAssociation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMaterialAssociationAccess().getMaterialAssociationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMaterialAssociationAccess().getMaterialAssociationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaterialAssociationAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 0);
	 				}
					(
(
		lv_isDerived_3_0=	'derived' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getIsDerivedDerivedKeyword_2_0_0(), "isDerived"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isDerived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 1);
	 				}
					(
(
		lv_isAbstract_4_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getIsAbstractAbstractKeyword_2_1_0(), "isAbstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isAbstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2(), 2);
	 				}
					(
(
		lv_isLeaf_5_0=	'leaf' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getIsLeafLeafKeyword_2_2_0(), "isLeaf"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isLeaf", true, "leaf", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_2());
	}

)	'materialAssociation' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getMaterialAssociationKeyword_3(), null); 
    }
(
(
		lv_name_7_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMaterialAssociationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_7_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	':' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getColonKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaterialAssociationAccess().getGeneralizationInlineGeneralizationParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_generalization_9_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_9_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getCommaKeyword_5_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaterialAssociationAccess().getGeneralizationInlineGeneralizationParserRuleCall_5_2_1_0(), currentNode); 
	    }
		lv_generalization_11_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_11_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getLeftCurlyBracketKeyword_6(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 0);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMaterialAssociationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_7_0_0_0(), currentNode); 
	    }
		lv_ownedEnd_14_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_14_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getSemicolonKeyword_7_0_1(), null); 
    }
)+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 1);
	 				}
					(	'memberEnd' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getMemberEndKeyword_7_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getColonKeyword_7_1_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMaterialAssociationAccess().getMemberEndPropertyCrossReference_7_1_2_0(), "memberEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getCommaKeyword_7_1_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMaterialAssociationAccess().getMemberEndPropertyCrossReference_7_1_3_1_0(), "memberEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getSemicolonKeyword_7_1_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7(), 2);
	 				}
					(	'navigableOwnedEnd' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getNavigableOwnedEndKeyword_7_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getColonKeyword_7_2_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMaterialAssociationAccess().getNavigableOwnedEndPropertyCrossReference_7_2_2_0(), "navigableOwnedEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getCommaKeyword_7_2_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMaterialAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMaterialAssociationAccess().getNavigableOwnedEndPropertyCrossReference_7_2_3_1_0(), "navigableOwnedEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getSemicolonKeyword_7_2_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMaterialAssociationAccess().getUnorderedGroup_7());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getMaterialAssociationAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleFormalAssociation
entryRuleFormalAssociation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFormalAssociationRule(), currentNode); }
	 iv_ruleFormalAssociation=ruleFormalAssociation 
	 { $current=$iv_ruleFormalAssociation.current; } 
	 EOF 
;

// Rule FormalAssociation
ruleFormalAssociation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getFormalAssociationAccess().getFormalAssociationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getFormalAssociationAccess().getFormalAssociationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormalAssociationAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 0);
	 				}
					(
(
		lv_isAbstract_3_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getIsAbstractAbstractKeyword_2_0_0(), "isAbstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isAbstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 1);
	 				}
					(
(
		lv_isDerived_4_0=	'derived' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getIsDerivedDerivedKeyword_2_1_0(), "isDerived"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isDerived", true, "derived", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2(), 2);
	 				}
					(
(
		lv_isLeaf_5_0=	'leaf' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getIsLeafLeafKeyword_2_2_0(), "isLeaf"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isLeaf", true, "leaf", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_2());
	}

)	'formalAssociation' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getFormalAssociationKeyword_3(), null); 
    }
(
(
		lv_name_7_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFormalAssociationAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_7_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 0);
	 				}
					((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormalAssociationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_6_0_0_0(), currentNode); 
	    }
		lv_ownedEnd_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getSemicolonKeyword_6_0_1(), null); 
    }
)+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 1);
	 				}
					(	'memberEnd' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getMemberEndKeyword_6_1_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getColonKeyword_6_1_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFormalAssociationAccess().getMemberEndPropertyCrossReference_6_1_2_0(), "memberEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getCommaKeyword_6_1_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFormalAssociationAccess().getMemberEndPropertyCrossReference_6_1_3_1_0(), "memberEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getSemicolonKeyword_6_1_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6(), 2);
	 				}
					(	'navigableOwnedEnd' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getNavigableOwnedEndKeyword_6_2_0(), null); 
    }
	':' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getColonKeyword_6_2_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFormalAssociationAccess().getNavigableOwnedEndPropertyCrossReference_6_2_2_0(), "navigableOwnedEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getCommaKeyword_6_2_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalAssociationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getFormalAssociationAccess().getNavigableOwnedEndPropertyCrossReference_6_2_3_1_0(), "navigableOwnedEnd"); 
	}

)
))*	';' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getSemicolonKeyword_6_2_4(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getFormalAssociationAccess().getUnorderedGroup_6());
	}

)	'}' 
    {
        createLeafNode(grammarAccess.getFormalAssociationAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;







// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEnumerationLiteralRule(), currentNode); }
	 iv_ruleEnumerationLiteral=ruleEnumerationLiteral 
	 { $current=$iv_ruleEnumerationLiteral.current; } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getEnumerationLiteralAccess().getEnumerationLiteralAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getEnumerationLiteralAccess().getEnumerationLiteralAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEnumerationLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getEnumerationLiteralAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getEnumerationLiteralAccess().getSpecificationValueSpecificationParserRuleCall_3_0(), currentNode); 
	    }
		lv_specification_3_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEnumerationLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"specification",
	        		lv_specification_3_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleInstanceSpecification_Impl
entryRuleInstanceSpecification_Impl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanceSpecification_ImplRule(), currentNode); }
	 iv_ruleInstanceSpecification_Impl=ruleInstanceSpecification_Impl 
	 { $current=$iv_ruleInstanceSpecification_Impl.current; } 
	 EOF 
;

// Rule InstanceSpecification_Impl
ruleInstanceSpecification_Impl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInstanceSpecification_ImplAccess().getInstanceSpecificationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInstanceSpecification_ImplAccess().getInstanceSpecificationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceSpecification_ImplAccess().getVisibilityVisibilityKindEnumRuleCall_1_0(), currentNode); 
	    }
		lv_visibility_1_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_1_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'instance' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getInstanceKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getClassifierClassifierCrossReference_4_1_0(), "classifier"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getClassifierClassifierCrossReference_4_2_1_0(), "classifier"); 
	}

)
))*)?(	'specification' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getSpecificationKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceSpecification_ImplAccess().getSpecificationValueSpecificationParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_specification_9_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"specification",
	        		lv_specification_9_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'{' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getLeftCurlyBracketKeyword_6(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceSpecification_ImplAccess().getSlotSlotParserRuleCall_7_0_0(), currentNode); 
	    }
		lv_slot_11_0=ruleSlot		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"slot",
	        		lv_slot_11_0, 
	        		"Slot", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getCommaKeyword_7_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceSpecification_ImplAccess().getSlotSlotParserRuleCall_7_1_1_0(), currentNode); 
	    }
		lv_slot_13_0=ruleSlot		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceSpecification_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"slot",
	        		lv_slot_13_0, 
	        		"Slot", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getInstanceSpecification_ImplAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleSlot
entryRuleSlot returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSlotRule(), currentNode); }
	 iv_ruleSlot=ruleSlot 
	 { $current=$iv_ruleSlot.current; } 
	 EOF 
;

// Rule Slot
ruleSlot returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSlotRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_STRING
	{
		createLeafNode(grammarAccess.getSlotAccess().getDefiningFeatureStructuralFeatureCrossReference_0_0(), "definingFeature"); 
	}

)
)	'=>' 
    {
        createLeafNode(grammarAccess.getSlotAccess().getEqualsSignGreaterThanSignKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSlotAccess().getValueValueSpecificationParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_value_2_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSlotRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_2_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'[' 
    {
        createLeafNode(grammarAccess.getSlotAccess().getLeftSquareBracketKeyword_2_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSlotAccess().getValueValueSpecificationParserRuleCall_2_1_1_0(), currentNode); 
	    }
		lv_value_4_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSlotRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_4_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSlotAccess().getCommaKeyword_2_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSlotAccess().getValueValueSpecificationParserRuleCall_2_1_2_1_0(), currentNode); 
	    }
		lv_value_6_0=ruleValueSpecification		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSlotRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"value",
	        		lv_value_6_0, 
	        		"ValueSpecification", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getSlotAccess().getRightSquareBracketKeyword_2_1_3(), null); 
    }
)))
;





// Entry rule entryRuleInstanceValue
entryRuleInstanceValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanceValueRule(), currentNode); }
	 iv_ruleInstanceValue=ruleInstanceValue 
	 { $current=$iv_ruleInstanceValue.current; } 
	 EOF 
;

// Rule InstanceValue
ruleInstanceValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanceValueAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'instance' 
    {
        createLeafNode(grammarAccess.getInstanceValueAccess().getInstanceKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getInstanceValueAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(	'(' 
    {
        createLeafNode(grammarAccess.getInstanceValueAccess().getLeftParenthesisKeyword_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInstanceValueAccess().getTypeTypeCrossReference_3_1_0(), "type"); 
	}

)
)	')' 
    {
        createLeafNode(grammarAccess.getInstanceValueAccess().getRightParenthesisKeyword_3_2(), null); 
    }
)?(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanceValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInstanceValueAccess().getInstanceInstanceSpecificationCrossReference_4_0(), "instance"); 
	}

)
))
;





// Entry rule entryRuleLiteralInteger
entryRuleLiteralInteger returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralIntegerRule(), currentNode); }
	 iv_ruleLiteralInteger=ruleLiteralInteger 
	 { $current=$iv_ruleLiteralInteger.current; } 
	 EOF 
;

// Rule LiteralInteger
ruleLiteralInteger returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getLiteralIntegerAccess().getLiteralIntegerAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralIntegerAccess().getLiteralIntegerAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getLiteralIntegerAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralIntegerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleLiteralString
entryRuleLiteralString returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralStringRule(), currentNode); }
	 iv_ruleLiteralString=ruleLiteralString 
	 { $current=$iv_ruleLiteralString.current; } 
	 EOF 
;

// Rule LiteralString
ruleLiteralString returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getLiteralStringAccess().getLiteralStringAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralStringAccess().getLiteralStringAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getLiteralStringAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralStringRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralBooleanRule(), currentNode); }
	 iv_ruleLiteralBoolean=ruleLiteralBoolean 
	 { $current=$iv_ruleLiteralBoolean.current; } 
	 EOF 
;

// Rule LiteralBoolean
ruleLiteralBoolean returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getLiteralBooleanAccess().getLiteralBooleanAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralBooleanAccess().getLiteralBooleanAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralBooleanAccess().getValueBooleanParserRuleCall_1_0(), currentNode); 
	    }
		lv_value_1_0=ruleBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralBooleanRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"Boolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleBoolean
entryRuleBoolean returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBooleanRule(), currentNode); } 
	 iv_ruleBoolean=ruleBoolean 
	 { $current=$iv_ruleBoolean.current.getText(); }  
	 EOF 
;

// Rule Boolean
ruleBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='true' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getBooleanAccess().getTrueKeyword_0(), null); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getBooleanAccess().getFalseKeyword_1(), null); 
    }
)
    ;





// Entry rule entryRuleLiteralUnlimitedNatural
entryRuleLiteralUnlimitedNatural returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralUnlimitedNaturalRule(), currentNode); }
	 iv_ruleLiteralUnlimitedNatural=ruleLiteralUnlimitedNatural 
	 { $current=$iv_ruleLiteralUnlimitedNatural.current; } 
	 EOF 
;

// Rule LiteralUnlimitedNatural
ruleLiteralUnlimitedNatural returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLiteralUnlimitedNaturalAccess().getValueUnlimitedNaturalValueParserRuleCall_0_0(), currentNode); 
	    }
		lv_value_0_0=ruleUnlimitedNaturalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralUnlimitedNaturalRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"UnlimitedNaturalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getLiteralUnlimitedNaturalAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralUnlimitedNaturalRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleUnlimitedNaturalValue
entryRuleUnlimitedNaturalValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUnlimitedNaturalValueRule(), currentNode); } 
	 iv_ruleUnlimitedNaturalValue=ruleUnlimitedNaturalValue 
	 { $current=$iv_ruleUnlimitedNaturalValue.current.getText(); }  
	 EOF 
;

// Rule UnlimitedNaturalValue
ruleUnlimitedNaturalValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:

	kw='*' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getUnlimitedNaturalValueAccess().getAsteriskKeyword(), null); 
    }

    ;





// Entry rule entryRuleLiteralNull
entryRuleLiteralNull returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLiteralNullRule(), currentNode); }
	 iv_ruleLiteralNull=ruleLiteralNull 
	 { $current=$iv_ruleLiteralNull.current; } 
	 EOF 
;

// Rule LiteralNull
ruleLiteralNull returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getLiteralNullAccess().getLiteralNullAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getLiteralNullAccess().getLiteralNullAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NULL' 
    {
        createLeafNode(grammarAccess.getLiteralNullAccess().getNULLKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleSubKind
entryRuleSubKind returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubKindRule(), currentNode); }
	 iv_ruleSubKind=ruleSubKind 
	 { $current=$iv_ruleSubKind.current; } 
	 EOF 
;

// Rule SubKind
ruleSubKind returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubKindAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_isActive_1_0=	'active' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getIsActiveActiveKeyword_1_0(), "isActive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isActive", true, "active", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'subkind' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getSubkindKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSubKindAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubKindAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubKindAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getAttributesKeyword_6_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getLeftCurlyBracketKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubKindAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_ownedAttribute_11_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_11_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)?	'}' 
    {
        createLeafNode(grammarAccess.getSubKindAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleKind
entryRuleKind returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getKindRule(), currentNode); }
	 iv_ruleKind=ruleKind 
	 { $current=$iv_ruleKind.current; } 
	 EOF 
;

// Rule Kind
ruleKind returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKindAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'kind' 
    {
        createLeafNode(grammarAccess.getKindAccess().getKindKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getKindAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getKindAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKindAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getKindAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKindAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getKindAccess().getAttributesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getKindAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKindAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_ownedAttribute_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKindRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getKindAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getKindAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleQuantity
entryRuleQuantity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQuantityRule(), currentNode); }
	 iv_ruleQuantity=ruleQuantity 
	 { $current=$iv_ruleQuantity.current; } 
	 EOF 
;

// Rule Quantity
ruleQuantity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQuantityAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQuantityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_isActive_1_0=	'active' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getIsActiveActiveKeyword_1_0(), "isActive"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQuantityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isActive", true, "active", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'quantity' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getQuantityKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getQuantityAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQuantityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQuantityAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQuantityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQuantityAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQuantityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getQuantityAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCollective
entryRuleCollective returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCollectiveRule(), currentNode); }
	 iv_ruleCollective=ruleCollective 
	 { $current=$iv_ruleCollective.current; } 
	 EOF 
;

// Rule Collective
ruleCollective returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectiveAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectiveRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_isExtensional_1_0=	'extensional' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getIsExtensionalExtensionalKeyword_1_0(), "isExtensional"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectiveRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isExtensional", true, "extensional", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'collective' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getCollectiveKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCollectiveAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectiveRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectiveAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectiveRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCollectiveAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectiveRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getCollectiveAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRulePhase
entryRulePhase returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPhaseRule(), currentNode); }
	 iv_rulePhase=rulePhase 
	 { $current=$iv_rulePhase.current; } 
	 EOF 
;

// Rule Phase
rulePhase returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPhaseAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPhaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'phase' 
    {
        createLeafNode(grammarAccess.getPhaseAccess().getPhaseKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPhaseAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPhaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getPhaseAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPhaseAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPhaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPhaseAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPhaseAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPhaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getPhaseAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getPhaseAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRoleRule(), currentNode); }
	 iv_ruleRole=ruleRole 
	 { $current=$iv_ruleRole.current; } 
	 EOF 
;

// Rule Role
ruleRole returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'role' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getRoleKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getAttributesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_ownedAttribute_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCategoryRule(), currentNode); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCategoryAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_isAbstract_1_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getIsAbstractAbstractKeyword_1_0(), "isAbstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isAbstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'category' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getCategoryKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCategoryAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCategoryAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(	'ownedAttribute' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getOwnedAttributeKeyword_6_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getLeftCurlyBracketKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCategoryAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_ownedAttribute_11_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_11_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getCommaKeyword_6_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCategoryAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_3_1_0(), currentNode); 
	    }
		lv_ownedAttribute_13_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCategoryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_13_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getRightCurlyBracketKeyword_6_4(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getCategoryAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleRoleMixin
entryRuleRoleMixin returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRoleMixinRule(), currentNode); }
	 iv_ruleRoleMixin=ruleRoleMixin 
	 { $current=$iv_ruleRoleMixin.current; } 
	 EOF 
;

// Rule RoleMixin
ruleRoleMixin returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleMixinAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'roleMixin' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getRoleMixinKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRoleMixinAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleMixinAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleMixinAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getAttributesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRoleMixinAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_ownedAttribute_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRoleMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getRoleMixinAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleMixin
entryRuleMixin returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMixinRule(), currentNode); }
	 iv_ruleMixin=ruleMixin 
	 { $current=$iv_ruleMixin.current; } 
	 EOF 
;

// Rule Mixin
ruleMixin returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMixinAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_isAbstract_1_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getIsAbstractAbstractKeyword_1_0(), "isAbstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "isAbstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'mixin' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getMixinKeyword_2(), null); 
    }
(
(
		lv_name_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getMixinAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getColonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMixinAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_generalization_5_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_5_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getCommaKeyword_4_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMixinAccess().getGeneralizationInlineGeneralizationParserRuleCall_4_2_1_0(), currentNode); 
	    }
		lv_generalization_7_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_7_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_5(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getAttributesKeyword_6_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getLeftCurlyBracketKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMixinAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_ownedAttribute_11_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMixinRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_11_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_6_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getMixinAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleMode
entryRuleMode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModeRule(), currentNode); }
	 iv_ruleMode=ruleMode 
	 { $current=$iv_ruleMode.current; } 
	 EOF 
;

// Rule Mode
ruleMode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModeAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'mode' 
    {
        createLeafNode(grammarAccess.getModeAccess().getModeKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getModeAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getModeAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModeAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getModeAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModeAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getModeAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getModeAccess().getAttributesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getModeAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModeAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_ownedAttribute_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getModeAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getModeAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleRelator
entryRuleRelator returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getRelatorRule(), currentNode); }
	 iv_ruleRelator=ruleRelator 
	 { $current=$iv_ruleRelator.current; } 
	 EOF 
;

// Rule Relator
ruleRelator returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelatorAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelatorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'relator' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getRelatorKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getRelatorAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelatorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelatorAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelatorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelatorAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelatorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(	'attributes:' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getAttributesKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getRelatorAccess().getOwnedAttributeInlinePropertyDefinitionParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_ownedAttribute_10_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getRelatorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedAttribute",
	        		lv_ownedAttribute_10_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getRelatorAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleCharacterization
entryRuleCharacterization returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCharacterizationRule(), currentNode); }
	 iv_ruleCharacterization=ruleCharacterization 
	 { $current=$iv_ruleCharacterization.current; } 
	 EOF 
;

// Rule Characterization
ruleCharacterization returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCharacterizationAccess().getVisibilityVisibilityKindEnumRuleCall_0_0(), currentNode); 
	    }
		lv_visibility_0_0=ruleVisibilityKind		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"visibility",
	        		lv_visibility_0_0, 
	        		"VisibilityKind", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'Characterization' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getCharacterizationKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_ID
		{
			createLeafNode(grammarAccess.getCharacterizationAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	':' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getColonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCharacterizationAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_generalization_4_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_4_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getCommaKeyword_3_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCharacterizationAccess().getGeneralizationInlineGeneralizationParserRuleCall_3_2_1_0(), currentNode); 
	    }
		lv_generalization_6_0=ruleInlineGeneralization		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"generalization",
	        		lv_generalization_6_0, 
	        		"InlineGeneralization", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'{' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
	'memberEnd' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getMemberEndKeyword_5(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getLeftParenthesisKeyword_6(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCharacterizationAccess().getMemberEndPropertyCrossReference_7_0(), "memberEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getCommaKeyword_8_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCharacterizationAccess().getMemberEndPropertyCrossReference_8_1_0(), "memberEnd"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getRightParenthesisKeyword_9(), null); 
    }
(	'navigableOwnedEnd' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getNavigableOwnedEndKeyword_10_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getLeftParenthesisKeyword_10_1(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCharacterizationAccess().getNavigableOwnedEndPropertyCrossReference_10_2_0(), "navigableOwnedEnd"); 
	}

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getCommaKeyword_10_3_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCharacterizationAccess().getNavigableOwnedEndPropertyCrossReference_10_3_1_0(), "navigableOwnedEnd"); 
	}

)
))*	')' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getRightParenthesisKeyword_10_4(), null); 
    }
)?(	'ownedEnd' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getOwnedEndKeyword_11_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getLeftCurlyBracketKeyword_11_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCharacterizationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_11_2_0(), currentNode); 
	    }
		lv_ownedEnd_22_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_22_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getCommaKeyword_11_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCharacterizationAccess().getOwnedEndInlinePropertyDefinitionParserRuleCall_11_3_1_0(), currentNode); 
	    }
		lv_ownedEnd_24_0=ruleInlinePropertyDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCharacterizationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"ownedEnd",
	        		lv_ownedEnd_24_0, 
	        		"InlinePropertyDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getRightCurlyBracketKeyword_11_4(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getCharacterizationAccess().getRightCurlyBracketKeyword_12(), null); 
    }
)
;





// Rule AggregationKind
ruleAggregationKind returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'none' 
	{
        $current = grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getAggregationKindAccess().getNoneEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'shared' 
	{
        $current = grammarAccess.getAggregationKindAccess().getSharedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getAggregationKindAccess().getSharedEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'composite' 
	{
        $current = grammarAccess.getAggregationKindAccess().getCompositeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getAggregationKindAccess().getCompositeEnumLiteralDeclaration_2(), null); 
    }
));



// Rule VisibilityKind
ruleVisibilityKind returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'public' 
	{
        $current = grammarAccess.getVisibilityKindAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityKindAccess().getPublicEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'private' 
	{
        $current = grammarAccess.getVisibilityKindAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityKindAccess().getPrivateEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'protected' 
	{
        $current = grammarAccess.getVisibilityKindAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityKindAccess().getProtectedEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'package' 
	{
        $current = grammarAccess.getVisibilityKindAccess().getPackageEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getVisibilityKindAccess().getPackageEnumLiteralDeclaration_3(), null); 
    }
));



RULE_RWS : (' '|'\t')+;

RULE_NL : ('\r'|'\n')+;

RULE_WS : (RULE_RWS|RULE_NL)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


